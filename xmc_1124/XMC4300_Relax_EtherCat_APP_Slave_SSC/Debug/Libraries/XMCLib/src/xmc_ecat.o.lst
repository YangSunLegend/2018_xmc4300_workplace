   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ecat.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_ECAT_lRequestPhyAccessToMII,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_ECAT_lRequestPhyAccessToMII:
  25              	.LFB164:
  26              	 .file 1 "../Libraries/XMCLib/src/xmc_ecat.c"
   1:../Libraries/XMCLib/src/xmc_ecat.c **** 
   2:../Libraries/XMCLib/src/xmc_ecat.c **** /**
   3:../Libraries/XMCLib/src/xmc_ecat.c ****  * @file xmc_ecat.c
   4:../Libraries/XMCLib/src/xmc_ecat.c ****  * @date 2015-10-21
   5:../Libraries/XMCLib/src/xmc_ecat.c ****  *
   6:../Libraries/XMCLib/src/xmc_ecat.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_ecat.c ****  **************************************************************************************************
   8:../Libraries/XMCLib/src/xmc_ecat.c ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   9:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  10:../Libraries/XMCLib/src/xmc_ecat.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_ecat.c ****  * All rights reserved.                        
  12:../Libraries/XMCLib/src/xmc_ecat.c ****  *                                             
  13:../Libraries/XMCLib/src/xmc_ecat.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:../Libraries/XMCLib/src/xmc_ecat.c ****  * following conditions are met:   
  15:../Libraries/XMCLib/src/xmc_ecat.c ****  *                                                                              
  16:../Libraries/XMCLib/src/xmc_ecat.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:../Libraries/XMCLib/src/xmc_ecat.c ****  * disclaimer.                        
  18:../Libraries/XMCLib/src/xmc_ecat.c ****  * 
  19:../Libraries/XMCLib/src/xmc_ecat.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:../Libraries/XMCLib/src/xmc_ecat.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.
  21:../Libraries/XMCLib/src/xmc_ecat.c ****  * 
  22:../Libraries/XMCLib/src/xmc_ecat.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:../Libraries/XMCLib/src/xmc_ecat.c ****  * products derived from this software without specific prior written permission.                  
  24:../Libraries/XMCLib/src/xmc_ecat.c ****  *                                                                              
  25:../Libraries/XMCLib/src/xmc_ecat.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:../Libraries/XMCLib/src/xmc_ecat.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:../Libraries/XMCLib/src/xmc_ecat.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:../Libraries/XMCLib/src/xmc_ecat.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:../Libraries/XMCLib/src/xmc_ecat.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:../Libraries/XMCLib/src/xmc_ecat.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:../Libraries/XMCLib/src/xmc_ecat.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:../Libraries/XMCLib/src/xmc_ecat.c ****  *                                                                              
  33:../Libraries/XMCLib/src/xmc_ecat.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:../Libraries/XMCLib/src/xmc_ecat.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:../Libraries/XMCLib/src/xmc_ecat.c ****  **************************************************************************************************
  36:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  37:../Libraries/XMCLib/src/xmc_ecat.c ****  * Change History
  38:../Libraries/XMCLib/src/xmc_ecat.c ****  * --------------
  39:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  40:../Libraries/XMCLib/src/xmc_ecat.c ****  * 2015-12-27:
  41:../Libraries/XMCLib/src/xmc_ecat.c ****  *     - Add clock gating control in enable/disable APIs
  42:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  43:../Libraries/XMCLib/src/xmc_ecat.c ****  * 2015-10-21:
  44:../Libraries/XMCLib/src/xmc_ecat.c ****  *     - Initial Version
  45:../Libraries/XMCLib/src/xmc_ecat.c ****  *
  46:../Libraries/XMCLib/src/xmc_ecat.c ****  * @endcond
  47:../Libraries/XMCLib/src/xmc_ecat.c ****  */
  48:../Libraries/XMCLib/src/xmc_ecat.c **** 
  49:../Libraries/XMCLib/src/xmc_ecat.c **** /*******************************************************************************
  50:../Libraries/XMCLib/src/xmc_ecat.c ****  * HEADER FILES
  51:../Libraries/XMCLib/src/xmc_ecat.c ****  *******************************************************************************/
  52:../Libraries/XMCLib/src/xmc_ecat.c **** 
  53:../Libraries/XMCLib/src/xmc_ecat.c **** #include <xmc_ecat.h>
  54:../Libraries/XMCLib/src/xmc_ecat.c **** 
  55:../Libraries/XMCLib/src/xmc_ecat.c **** #if defined (ECAT0)
  56:../Libraries/XMCLib/src/xmc_ecat.c **** 
  57:../Libraries/XMCLib/src/xmc_ecat.c **** #include <xmc_scu.h>
  58:../Libraries/XMCLib/src/xmc_ecat.c **** 
  59:../Libraries/XMCLib/src/xmc_ecat.c **** /*******************************************************************************
  60:../Libraries/XMCLib/src/xmc_ecat.c ****  * MACROS
  61:../Libraries/XMCLib/src/xmc_ecat.c ****  *******************************************************************************/
  62:../Libraries/XMCLib/src/xmc_ecat.c **** 
  63:../Libraries/XMCLib/src/xmc_ecat.c **** /*******************************************************************************
  64:../Libraries/XMCLib/src/xmc_ecat.c ****  * API IMPLEMENTATION
  65:../Libraries/XMCLib/src/xmc_ecat.c ****  *******************************************************************************/
  66:../Libraries/XMCLib/src/xmc_ecat.c **** /* The function defines the access state to the MII management for the PDI interface*/
  67:../Libraries/XMCLib/src/xmc_ecat.c **** __STATIC_INLINE void XMC_ECAT_lRequestPhyAccessToMII(void)
  68:../Libraries/XMCLib/src/xmc_ecat.c **** {
  27              	 .loc 1 68 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
  69:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->MII_PDI_ACS_STATE |= 0x01;
  39              	 .loc 1 69 0
  40 0004 064A     	 ldr r2,.L2
  41 0006 064B     	 ldr r3,.L2
  42 0008 93F81735 	 ldrb r3,[r3,#1303]
  43 000c DBB2     	 uxtb r3,r3
  44 000e 43F00103 	 orr r3,r3,#1
  45 0012 DBB2     	 uxtb r3,r3
  46 0014 82F81735 	 strb r3,[r2,#1303]
  70:../Libraries/XMCLib/src/xmc_ecat.c **** }
  47              	 .loc 1 70 0
  48 0018 BD46     	 mov sp,r7
  49              	.LCFI2:
  50              	 .cfi_def_cfa_register 13
  51              	 
  52 001a 5DF8047B 	 ldr r7,[sp],#4
  53              	.LCFI3:
  54              	 .cfi_restore 7
  55              	 .cfi_def_cfa_offset 0
  56 001e 7047     	 bx lr
  57              	.L3:
  58              	 .align 2
  59              	.L2:
  60 0020 00000154 	 .word 1409351680
  61              	 .cfi_endproc
  62              	.LFE164:
  64              	 .section .text.XMC_ECAT_Enable,"ax",%progbits
  65              	 .align 2
  66              	 .global XMC_ECAT_Enable
  67              	 .thumb
  68              	 .thumb_func
  70              	XMC_ECAT_Enable:
  71              	.LFB165:
  71:../Libraries/XMCLib/src/xmc_ecat.c **** 
  72:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT module clock ungating and deassert reset API (Enables ECAT) */
  73:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_Enable(void)
  74:../Libraries/XMCLib/src/xmc_ecat.c **** {
  72              	 .loc 1 74 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76 0000 80B5     	 push {r7,lr}
  77              	.LCFI4:
  78              	 .cfi_def_cfa_offset 8
  79              	 .cfi_offset 7,-8
  80              	 .cfi_offset 14,-4
  81 0002 00AF     	 add r7,sp,#0
  82              	.LCFI5:
  83              	 .cfi_def_cfa_register 7
  75:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_ECAT0);
  84              	 .loc 1 75 0
  85 0004 0648     	 ldr r0,.L6
  86 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
  76:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_ECAT0);
  87              	 .loc 1 76 0
  88 000a 0548     	 ldr r0,.L6
  89 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  77:../Libraries/XMCLib/src/xmc_ecat.c **** 
  78:../Libraries/XMCLib/src/xmc_ecat.c ****   while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_ECAT0) == true){}
  90              	 .loc 1 78 0
  91 0010 00BF     	 nop
  92              	.L5:
  93              	 .loc 1 78 0 is_stmt 0 discriminator 1
  94 0012 0348     	 ldr r0,.L6
  95 0014 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
  96 0018 0346     	 mov r3,r0
  97 001a 002B     	 cmp r3,#0
  98 001c F9D1     	 bne .L5
  79:../Libraries/XMCLib/src/xmc_ecat.c **** }
  99              	 .loc 1 79 0 is_stmt 1
 100 001e 80BD     	 pop {r7,pc}
 101              	.L7:
 102              	 .align 2
 103              	.L6:
 104 0020 00040020 	 .word 536871936
 105              	 .cfi_endproc
 106              	.LFE165:
 108              	 .section .text.XMC_ECAT_Disable,"ax",%progbits
 109              	 .align 2
 110              	 .global XMC_ECAT_Disable
 111              	 .thumb
 112              	 .thumb_func
 114              	XMC_ECAT_Disable:
 115              	.LFB166:
  80:../Libraries/XMCLib/src/xmc_ecat.c **** 
  81:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT module clock gating and assert reset API (Disables ECAT)*/
  82:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_Disable(void)
  83:../Libraries/XMCLib/src/xmc_ecat.c **** {
 116              	 .loc 1 83 0
 117              	 .cfi_startproc
 118              	 
 119              	 
 120 0000 80B5     	 push {r7,lr}
 121              	.LCFI6:
 122              	 .cfi_def_cfa_offset 8
 123              	 .cfi_offset 7,-8
 124              	 .cfi_offset 14,-4
 125 0002 00AF     	 add r7,sp,#0
 126              	.LCFI7:
 127              	 .cfi_def_cfa_register 7
  84:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_ECAT0);
 128              	 .loc 1 84 0
 129 0004 0848     	 ldr r0,.L10
 130 0006 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
  85:../Libraries/XMCLib/src/xmc_ecat.c ****   while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_ECAT0) == false){}
 131              	 .loc 1 85 0
 132 000a 00BF     	 nop
 133              	.L9:
 134              	 .loc 1 85 0 is_stmt 0 discriminator 1
 135 000c 0648     	 ldr r0,.L10
 136 000e FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 137 0012 0346     	 mov r3,r0
 138 0014 83F00103 	 eor r3,r3,#1
 139 0018 DBB2     	 uxtb r3,r3
 140 001a 002B     	 cmp r3,#0
 141 001c F6D1     	 bne .L9
  86:../Libraries/XMCLib/src/xmc_ecat.c **** 
  87:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_ECAT0);
 142              	 .loc 1 87 0 is_stmt 1
 143 001e 0248     	 ldr r0,.L10
 144 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
  88:../Libraries/XMCLib/src/xmc_ecat.c **** }
 145              	 .loc 1 88 0
 146 0024 80BD     	 pop {r7,pc}
 147              	.L11:
 148 0026 00BF     	 .align 2
 149              	.L10:
 150 0028 00040020 	 .word 536871936
 151              	 .cfi_endproc
 152              	.LFE166:
 154              	 .section .text.XMC_ECAT_Init,"ax",%progbits
 155              	 .align 2
 156              	 .global XMC_ECAT_Init
 157              	 .thumb
 158              	 .thumb_func
 160              	XMC_ECAT_Init:
 161              	.LFB167:
  89:../Libraries/XMCLib/src/xmc_ecat.c **** 
  90:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT initialization function */
  91:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_Init(XMC_ECAT_CONFIG_t *const config)
  92:../Libraries/XMCLib/src/xmc_ecat.c **** {
 162              	 .loc 1 92 0
 163              	 .cfi_startproc
 164              	 
 165              	 
 166 0000 80B5     	 push {r7,lr}
 167              	.LCFI8:
 168              	 .cfi_def_cfa_offset 8
 169              	 .cfi_offset 7,-8
 170              	 .cfi_offset 14,-4
 171 0002 82B0     	 sub sp,sp,#8
 172              	.LCFI9:
 173              	 .cfi_def_cfa_offset 16
 174 0004 00AF     	 add r7,sp,#0
 175              	.LCFI10:
 176              	 .cfi_def_cfa_register 7
 177 0006 7860     	 str r0,[r7,#4]
  93:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_ECAT_Enable();
 178              	 .loc 1 93 0
 179 0008 FFF7FEFF 	 bl XMC_ECAT_Enable
  94:../Libraries/XMCLib/src/xmc_ecat.c **** 
  95:../Libraries/XMCLib/src/xmc_ecat.c ****   /* The process memory is not accessible until the ESC Configuration Area is loaded successfully. 
  96:../Libraries/XMCLib/src/xmc_ecat.c ****   
  97:../Libraries/XMCLib/src/xmc_ecat.c ****   /* words 0x0-0x3 */
  98:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_DATA[0U] = config->dword[0U];
 180              	 .loc 1 98 0
 181 000c 194A     	 ldr r2,.L14
 182 000e 7B68     	 ldr r3,[r7,#4]
 183 0010 1B68     	 ldr r3,[r3]
 184 0012 C2F80835 	 str r3,[r2,#1288]
  99:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_DATA[1U] = config->dword[1U];
 185              	 .loc 1 99 0
 186 0016 174A     	 ldr r2,.L14
 187 0018 7B68     	 ldr r3,[r7,#4]
 188 001a 5B68     	 ldr r3,[r3,#4]
 189 001c C2F80C35 	 str r3,[r2,#1292]
 100:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_CONT_STAT |= (uint16_t)((uint16_t)0x4U << (uint16_t)ECAT_EEP_CONT_STAT_CMD_REG_Pos);
 190              	 .loc 1 100 0
 191 0020 144A     	 ldr r2,.L14
 192 0022 144B     	 ldr r3,.L14
 193 0024 B3F80235 	 ldrh r3,[r3,#1282]
 194 0028 9BB2     	 uxth r3,r3
 195 002a 43F48063 	 orr r3,r3,#1024
 196 002e 9BB2     	 uxth r3,r3
 197 0030 A2F80235 	 strh r3,[r2,#1282]
 101:../Libraries/XMCLib/src/xmc_ecat.c **** 
 102:../Libraries/XMCLib/src/xmc_ecat.c ****   /* words 0x4-0x7 */
 103:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_DATA[0U] = config->dword[2U];
 198              	 .loc 1 103 0
 199 0034 0F4A     	 ldr r2,.L14
 200 0036 7B68     	 ldr r3,[r7,#4]
 201 0038 9B68     	 ldr r3,[r3,#8]
 202 003a C2F80835 	 str r3,[r2,#1288]
 104:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_DATA[1U] = config->dword[3U];
 203              	 .loc 1 104 0
 204 003e 0D4A     	 ldr r2,.L14
 205 0040 7B68     	 ldr r3,[r7,#4]
 206 0042 DB68     	 ldr r3,[r3,#12]
 207 0044 C2F80C35 	 str r3,[r2,#1292]
 105:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->EEP_CONT_STAT |= (uint16_t)((uint16_t)0x4U << (uint16_t)ECAT_EEP_CONT_STAT_CMD_REG_Pos);
 208              	 .loc 1 105 0
 209 0048 0A4A     	 ldr r2,.L14
 210 004a 0A4B     	 ldr r3,.L14
 211 004c B3F80235 	 ldrh r3,[r3,#1282]
 212 0050 9BB2     	 uxth r3,r3
 213 0052 43F48063 	 orr r3,r3,#1024
 214 0056 9BB2     	 uxth r3,r3
 215 0058 A2F80235 	 strh r3,[r2,#1282]
 106:../Libraries/XMCLib/src/xmc_ecat.c **** 
 107:../Libraries/XMCLib/src/xmc_ecat.c ****   while (ECAT0->EEP_CONT_STAT & ECAT_EEP_CONT_STAT_L_STAT_Msk)
 216              	 .loc 1 107 0
 217 005c 00BF     	 nop
 218              	.L13:
 219              	 .loc 1 107 0 is_stmt 0 discriminator 1
 220 005e 054B     	 ldr r3,.L14
 221 0060 B3F80235 	 ldrh r3,[r3,#1282]
 222 0064 9BB2     	 uxth r3,r3
 223 0066 03F48053 	 and r3,r3,#4096
 224 006a 002B     	 cmp r3,#0
 225 006c F7D1     	 bne .L13
 108:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 109:../Libraries/XMCLib/src/xmc_ecat.c ****     /* Wait until the EEPROM_Loaded signal is active */
 110:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 111:../Libraries/XMCLib/src/xmc_ecat.c **** 
 112:../Libraries/XMCLib/src/xmc_ecat.c **** }
 226              	 .loc 1 112 0 is_stmt 1
 227 006e 0837     	 adds r7,r7,#8
 228              	.LCFI11:
 229              	 .cfi_def_cfa_offset 8
 230 0070 BD46     	 mov sp,r7
 231              	.LCFI12:
 232              	 .cfi_def_cfa_register 13
 233              	 
 234 0072 80BD     	 pop {r7,pc}
 235              	.L15:
 236              	 .align 2
 237              	.L14:
 238 0074 00000154 	 .word 1409351680
 239              	 .cfi_endproc
 240              	.LFE167:
 242              	 .section .text.XMC_ECAT_EnableEvent,"ax",%progbits
 243              	 .align 2
 244              	 .global XMC_ECAT_EnableEvent
 245              	 .thumb
 246              	 .thumb_func
 248              	XMC_ECAT_EnableEvent:
 249              	.LFB168:
 113:../Libraries/XMCLib/src/xmc_ecat.c **** 
 114:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT application event enable API */
 115:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_EnableEvent(uint32_t event)
 116:../Libraries/XMCLib/src/xmc_ecat.c **** {
 250              	 .loc 1 116 0
 251              	 .cfi_startproc
 252              	 
 253              	 
 254              	 
 255 0000 80B4     	 push {r7}
 256              	.LCFI13:
 257              	 .cfi_def_cfa_offset 4
 258              	 .cfi_offset 7,-4
 259 0002 83B0     	 sub sp,sp,#12
 260              	.LCFI14:
 261              	 .cfi_def_cfa_offset 16
 262 0004 00AF     	 add r7,sp,#0
 263              	.LCFI15:
 264              	 .cfi_def_cfa_register 7
 265 0006 7860     	 str r0,[r7,#4]
 117:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->AL_EVENT_MASK |= event;
 266              	 .loc 1 117 0
 267 0008 0649     	 ldr r1,.L17
 268 000a 064B     	 ldr r3,.L17
 269 000c D3F80422 	 ldr r2,[r3,#516]
 270 0010 7B68     	 ldr r3,[r7,#4]
 271 0012 1343     	 orrs r3,r3,r2
 272 0014 C1F80432 	 str r3,[r1,#516]
 118:../Libraries/XMCLib/src/xmc_ecat.c **** }
 273              	 .loc 1 118 0
 274 0018 0C37     	 adds r7,r7,#12
 275              	.LCFI16:
 276              	 .cfi_def_cfa_offset 4
 277 001a BD46     	 mov sp,r7
 278              	.LCFI17:
 279              	 .cfi_def_cfa_register 13
 280              	 
 281 001c 5DF8047B 	 ldr r7,[sp],#4
 282              	.LCFI18:
 283              	 .cfi_restore 7
 284              	 .cfi_def_cfa_offset 0
 285 0020 7047     	 bx lr
 286              	.L18:
 287 0022 00BF     	 .align 2
 288              	.L17:
 289 0024 00000154 	 .word 1409351680
 290              	 .cfi_endproc
 291              	.LFE168:
 293              	 .section .text.XMC_ECAT_DisableEvent,"ax",%progbits
 294              	 .align 2
 295              	 .global XMC_ECAT_DisableEvent
 296              	 .thumb
 297              	 .thumb_func
 299              	XMC_ECAT_DisableEvent:
 300              	.LFB169:
 119:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT application event disable API */
 120:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_DisableEvent(uint32_t event)
 121:../Libraries/XMCLib/src/xmc_ecat.c **** {
 301              	 .loc 1 121 0
 302              	 .cfi_startproc
 303              	 
 304              	 
 305              	 
 306 0000 80B4     	 push {r7}
 307              	.LCFI19:
 308              	 .cfi_def_cfa_offset 4
 309              	 .cfi_offset 7,-4
 310 0002 83B0     	 sub sp,sp,#12
 311              	.LCFI20:
 312              	 .cfi_def_cfa_offset 16
 313 0004 00AF     	 add r7,sp,#0
 314              	.LCFI21:
 315              	 .cfi_def_cfa_register 7
 316 0006 7860     	 str r0,[r7,#4]
 122:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->AL_EVENT_MASK &= ~event;
 317              	 .loc 1 122 0
 318 0008 0649     	 ldr r1,.L20
 319 000a 064B     	 ldr r3,.L20
 320 000c D3F80422 	 ldr r2,[r3,#516]
 321 0010 7B68     	 ldr r3,[r7,#4]
 322 0012 DB43     	 mvns r3,r3
 323 0014 1340     	 ands r3,r3,r2
 324 0016 C1F80432 	 str r3,[r1,#516]
 123:../Libraries/XMCLib/src/xmc_ecat.c **** }
 325              	 .loc 1 123 0
 326 001a 0C37     	 adds r7,r7,#12
 327              	.LCFI22:
 328              	 .cfi_def_cfa_offset 4
 329 001c BD46     	 mov sp,r7
 330              	.LCFI23:
 331              	 .cfi_def_cfa_register 13
 332              	 
 333 001e 5DF8047B 	 ldr r7,[sp],#4
 334              	.LCFI24:
 335              	 .cfi_restore 7
 336              	 .cfi_def_cfa_offset 0
 337 0022 7047     	 bx lr
 338              	.L21:
 339              	 .align 2
 340              	.L20:
 341 0024 00000154 	 .word 1409351680
 342              	 .cfi_endproc
 343              	.LFE169:
 345              	 .section .text.XMC_ECAT_GetEventStatus,"ax",%progbits
 346              	 .align 2
 347              	 .global XMC_ECAT_GetEventStatus
 348              	 .thumb
 349              	 .thumb_func
 351              	XMC_ECAT_GetEventStatus:
 352              	.LFB170:
 124:../Libraries/XMCLib/src/xmc_ecat.c **** 
 125:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT application event status reading API */
 126:../Libraries/XMCLib/src/xmc_ecat.c **** uint32_t XMC_ECAT_GetEventStatus(void)
 127:../Libraries/XMCLib/src/xmc_ecat.c **** {
 353              	 .loc 1 127 0
 354              	 .cfi_startproc
 355              	 
 356              	 
 357              	 
 358 0000 80B4     	 push {r7}
 359              	.LCFI25:
 360              	 .cfi_def_cfa_offset 4
 361              	 .cfi_offset 7,-4
 362 0002 00AF     	 add r7,sp,#0
 363              	.LCFI26:
 364              	 .cfi_def_cfa_register 7
 128:../Libraries/XMCLib/src/xmc_ecat.c ****   return (ECAT0->AL_EVENT_REQ);
 365              	 .loc 1 128 0
 366 0004 034B     	 ldr r3,.L24
 367 0006 D3F82032 	 ldr r3,[r3,#544]
 129:../Libraries/XMCLib/src/xmc_ecat.c **** }
 368              	 .loc 1 129 0
 369 000a 1846     	 mov r0,r3
 370 000c BD46     	 mov sp,r7
 371              	.LCFI27:
 372              	 .cfi_def_cfa_register 13
 373              	 
 374 000e 5DF8047B 	 ldr r7,[sp],#4
 375              	.LCFI28:
 376              	 .cfi_restore 7
 377              	 .cfi_def_cfa_offset 0
 378 0012 7047     	 bx lr
 379              	.L25:
 380              	 .align 2
 381              	.L24:
 382 0014 00000154 	 .word 1409351680
 383              	 .cfi_endproc
 384              	.LFE170:
 386              	 .section .text.XMC_ECAT_DisableSyncManChannel,"ax",%progbits
 387              	 .align 2
 388              	 .global XMC_ECAT_DisableSyncManChannel
 389              	 .thumb
 390              	 .thumb_func
 392              	XMC_ECAT_DisableSyncManChannel:
 393              	.LFB171:
 130:../Libraries/XMCLib/src/xmc_ecat.c **** 
 131:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT SyncManager channel disable function*/
 132:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_DisableSyncManChannel(const uint8_t channel)
 133:../Libraries/XMCLib/src/xmc_ecat.c **** {
 394              	 .loc 1 133 0
 395              	 .cfi_startproc
 396              	 
 397              	 
 398              	 
 399 0000 80B4     	 push {r7}
 400              	.LCFI29:
 401              	 .cfi_def_cfa_offset 4
 402              	 .cfi_offset 7,-4
 403 0002 83B0     	 sub sp,sp,#12
 404              	.LCFI30:
 405              	 .cfi_def_cfa_offset 16
 406 0004 00AF     	 add r7,sp,#0
 407              	.LCFI31:
 408              	 .cfi_def_cfa_register 7
 409 0006 0346     	 mov r3,r0
 410 0008 FB71     	 strb r3,[r7,#7]
 134:../Libraries/XMCLib/src/xmc_ecat.c ****   ((ECAT0_SM_Type *)(void*)((uint8_t *)(void*)ECAT0_SM0 + (channel * 8U)))->SM_PDI_CTR |= 0x1U;
 411              	 .loc 1 134 0
 412 000a FB79     	 ldrb r3,[r7,#7]
 413 000c DB00     	 lsls r3,r3,#3
 414 000e 03F1A843 	 add r3,r3,#1409286144
 415 0012 03F58433 	 add r3,r3,#67584
 416 0016 FA79     	 ldrb r2,[r7,#7]
 417 0018 D200     	 lsls r2,r2,#3
 418 001a 02F1A842 	 add r2,r2,#1409286144
 419 001e 02F58432 	 add r2,r2,#67584
 420 0022 D279     	 ldrb r2,[r2,#7]
 421 0024 D2B2     	 uxtb r2,r2
 422 0026 42F00102 	 orr r2,r2,#1
 423 002a D2B2     	 uxtb r2,r2
 424 002c DA71     	 strb r2,[r3,#7]
 135:../Libraries/XMCLib/src/xmc_ecat.c **** }
 425              	 .loc 1 135 0
 426 002e 0C37     	 adds r7,r7,#12
 427              	.LCFI32:
 428              	 .cfi_def_cfa_offset 4
 429 0030 BD46     	 mov sp,r7
 430              	.LCFI33:
 431              	 .cfi_def_cfa_register 13
 432              	 
 433 0032 5DF8047B 	 ldr r7,[sp],#4
 434              	.LCFI34:
 435              	 .cfi_restore 7
 436              	 .cfi_def_cfa_offset 0
 437 0036 7047     	 bx lr
 438              	 .cfi_endproc
 439              	.LFE171:
 441              	 .section .text.XMC_ECAT_EnableSyncManChannel,"ax",%progbits
 442              	 .align 2
 443              	 .global XMC_ECAT_EnableSyncManChannel
 444              	 .thumb
 445              	 .thumb_func
 447              	XMC_ECAT_EnableSyncManChannel:
 448              	.LFB172:
 136:../Libraries/XMCLib/src/xmc_ecat.c **** 
 137:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT SyncManager channel enable function*/
 138:../Libraries/XMCLib/src/xmc_ecat.c **** void XMC_ECAT_EnableSyncManChannel(const uint8_t channel)
 139:../Libraries/XMCLib/src/xmc_ecat.c **** {
 449              	 .loc 1 139 0
 450              	 .cfi_startproc
 451              	 
 452              	 
 453              	 
 454 0000 80B4     	 push {r7}
 455              	.LCFI35:
 456              	 .cfi_def_cfa_offset 4
 457              	 .cfi_offset 7,-4
 458 0002 83B0     	 sub sp,sp,#12
 459              	.LCFI36:
 460              	 .cfi_def_cfa_offset 16
 461 0004 00AF     	 add r7,sp,#0
 462              	.LCFI37:
 463              	 .cfi_def_cfa_register 7
 464 0006 0346     	 mov r3,r0
 465 0008 FB71     	 strb r3,[r7,#7]
 140:../Libraries/XMCLib/src/xmc_ecat.c ****   ((ECAT0_SM_Type *)(void*)((uint8_t *)(void*)ECAT0_SM0 + (channel * 8U)))->SM_PDI_CTR &= (uint8_t)
 466              	 .loc 1 140 0
 467 000a FB79     	 ldrb r3,[r7,#7]
 468 000c DB00     	 lsls r3,r3,#3
 469 000e 03F1A843 	 add r3,r3,#1409286144
 470 0012 03F58433 	 add r3,r3,#67584
 471 0016 FA79     	 ldrb r2,[r7,#7]
 472 0018 D200     	 lsls r2,r2,#3
 473 001a 02F1A842 	 add r2,r2,#1409286144
 474 001e 02F58432 	 add r2,r2,#67584
 475 0022 D279     	 ldrb r2,[r2,#7]
 476 0024 D2B2     	 uxtb r2,r2
 477 0026 22F00102 	 bic r2,r2,#1
 478 002a D2B2     	 uxtb r2,r2
 479 002c DA71     	 strb r2,[r3,#7]
 141:../Libraries/XMCLib/src/xmc_ecat.c **** }
 480              	 .loc 1 141 0
 481 002e 0C37     	 adds r7,r7,#12
 482              	.LCFI38:
 483              	 .cfi_def_cfa_offset 4
 484 0030 BD46     	 mov sp,r7
 485              	.LCFI39:
 486              	 .cfi_def_cfa_register 13
 487              	 
 488 0032 5DF8047B 	 ldr r7,[sp],#4
 489              	.LCFI40:
 490              	 .cfi_restore 7
 491              	 .cfi_def_cfa_offset 0
 492 0036 7047     	 bx lr
 493              	 .cfi_endproc
 494              	.LFE172:
 496              	 .section .text.XMC_ECAT_ReadPhy,"ax",%progbits
 497              	 .align 2
 498              	 .global XMC_ECAT_ReadPhy
 499              	 .thumb
 500              	 .thumb_func
 502              	XMC_ECAT_ReadPhy:
 503              	.LFB173:
 142:../Libraries/XMCLib/src/xmc_ecat.c **** 
 143:../Libraries/XMCLib/src/xmc_ecat.c **** 
 144:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT PHY register read function*/
 145:../Libraries/XMCLib/src/xmc_ecat.c **** XMC_ECAT_STATUS_t XMC_ECAT_ReadPhy(uint8_t phy_addr, uint8_t reg_addr, uint16_t *data)
 146:../Libraries/XMCLib/src/xmc_ecat.c **** {
 504              	 .loc 1 146 0
 505              	 .cfi_startproc
 506              	 
 507              	 
 508 0000 80B5     	 push {r7,lr}
 509              	.LCFI41:
 510              	 .cfi_def_cfa_offset 8
 511              	 .cfi_offset 7,-8
 512              	 .cfi_offset 14,-4
 513 0002 84B0     	 sub sp,sp,#16
 514              	.LCFI42:
 515              	 .cfi_def_cfa_offset 24
 516 0004 00AF     	 add r7,sp,#0
 517              	.LCFI43:
 518              	 .cfi_def_cfa_register 7
 519 0006 0346     	 mov r3,r0
 520 0008 3A60     	 str r2,[r7]
 521 000a FB71     	 strb r3,[r7,#7]
 522 000c 0B46     	 mov r3,r1
 523 000e BB71     	 strb r3,[r7,#6]
 147:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_ECAT_STATUS_t status;
 148:../Libraries/XMCLib/src/xmc_ecat.c **** 
 149:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_ECAT_lRequestPhyAccessToMII();
 524              	 .loc 1 149 0
 525 0010 FFF7FEFF 	 bl XMC_ECAT_lRequestPhyAccessToMII
 150:../Libraries/XMCLib/src/xmc_ecat.c **** 
 151:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->MII_PHY_ADR = phy_addr;
 526              	 .loc 1 151 0
 527 0014 1E4A     	 ldr r2,.L33
 528 0016 FB79     	 ldrb r3,[r7,#7]
 529 0018 82F81235 	 strb r3,[r2,#1298]
 152:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->MII_PHY_REG_ADR = reg_addr;
 530              	 .loc 1 152 0
 531 001c 1C4A     	 ldr r2,.L33
 532 001e BB79     	 ldrb r3,[r7,#6]
 533 0020 82F81335 	 strb r3,[r2,#1299]
 153:../Libraries/XMCLib/src/xmc_ecat.c **** 
 154:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->MII_CONT_STAT |= 0x0100U;  /* read instruction */
 534              	 .loc 1 154 0
 535 0024 1A4A     	 ldr r2,.L33
 536 0026 1A4B     	 ldr r3,.L33
 537 0028 B3F81035 	 ldrh r3,[r3,#1296]
 538 002c 9BB2     	 uxth r3,r3
 539 002e 43F48073 	 orr r3,r3,#256
 540 0032 9BB2     	 uxth r3,r3
 541 0034 A2F81035 	 strh r3,[r2,#1296]
 155:../Libraries/XMCLib/src/xmc_ecat.c ****   while ((ECAT0->MII_CONT_STAT & ECAT_MII_CONT_STAT_BUSY_Msk) != 0U){}
 542              	 .loc 1 155 0
 543 0038 00BF     	 nop
 544              	.L29:
 545              	 .loc 1 155 0 is_stmt 0 discriminator 1
 546 003a 154B     	 ldr r3,.L33
 547 003c B3F81035 	 ldrh r3,[r3,#1296]
 548 0040 9BB2     	 uxth r3,r3
 549 0042 9BB2     	 uxth r3,r3
 550 0044 1BB2     	 sxth r3,r3
 551 0046 002B     	 cmp r3,#0
 552 0048 F7DB     	 blt .L29
 156:../Libraries/XMCLib/src/xmc_ecat.c ****   
 157:../Libraries/XMCLib/src/xmc_ecat.c ****   if ((ECAT0->MII_CONT_STAT & ECAT_MII_CONT_STAT_ERROR_Msk) != 0U)
 553              	 .loc 1 157 0 is_stmt 1
 554 004a 114B     	 ldr r3,.L33
 555 004c B3F81035 	 ldrh r3,[r3,#1296]
 556 0050 9BB2     	 uxth r3,r3
 557 0052 03F48043 	 and r3,r3,#16384
 558 0056 002B     	 cmp r3,#0
 559 0058 0CD0     	 beq .L30
 158:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 159:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_CONT_STAT &= ~ECAT_MII_CONT_STAT_CMD_REG_Msk; /* Clear error */
 560              	 .loc 1 159 0
 561 005a 0D4A     	 ldr r2,.L33
 562 005c 0C4B     	 ldr r3,.L33
 563 005e B3F81035 	 ldrh r3,[r3,#1296]
 564 0062 9BB2     	 uxth r3,r3
 565 0064 23F44073 	 bic r3,r3,#768
 566 0068 9BB2     	 uxth r3,r3
 567 006a A2F81035 	 strh r3,[r2,#1296]
 160:../Libraries/XMCLib/src/xmc_ecat.c ****     status = XMC_ECAT_STATUS_ERROR;
 568              	 .loc 1 160 0
 569 006e 0223     	 movs r3,#2
 570 0070 FB73     	 strb r3,[r7,#15]
 571 0072 07E0     	 b .L31
 572              	.L30:
 161:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 162:../Libraries/XMCLib/src/xmc_ecat.c ****   else
 163:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 164:../Libraries/XMCLib/src/xmc_ecat.c ****     *data = (uint16_t)ECAT0->MII_PHY_DATA;
 573              	 .loc 1 164 0
 574 0074 064B     	 ldr r3,.L33
 575 0076 B3F81435 	 ldrh r3,[r3,#1300]
 576 007a 9AB2     	 uxth r2,r3
 577 007c 3B68     	 ldr r3,[r7]
 578 007e 1A80     	 strh r2,[r3]
 165:../Libraries/XMCLib/src/xmc_ecat.c ****     status = XMC_ECAT_STATUS_OK;
 579              	 .loc 1 165 0
 580 0080 0023     	 movs r3,#0
 581 0082 FB73     	 strb r3,[r7,#15]
 582              	.L31:
 166:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 167:../Libraries/XMCLib/src/xmc_ecat.c **** 
 168:../Libraries/XMCLib/src/xmc_ecat.c ****   return status;
 583              	 .loc 1 168 0
 584 0084 FB7B     	 ldrb r3,[r7,#15]
 169:../Libraries/XMCLib/src/xmc_ecat.c **** }
 585              	 .loc 1 169 0
 586 0086 1846     	 mov r0,r3
 587 0088 1037     	 adds r7,r7,#16
 588              	.LCFI44:
 589              	 .cfi_def_cfa_offset 8
 590 008a BD46     	 mov sp,r7
 591              	.LCFI45:
 592              	 .cfi_def_cfa_register 13
 593              	 
 594 008c 80BD     	 pop {r7,pc}
 595              	.L34:
 596 008e 00BF     	 .align 2
 597              	.L33:
 598 0090 00000154 	 .word 1409351680
 599              	 .cfi_endproc
 600              	.LFE173:
 602              	 .section .text.XMC_ECAT_WritePhy,"ax",%progbits
 603              	 .align 2
 604              	 .global XMC_ECAT_WritePhy
 605              	 .thumb
 606              	 .thumb_func
 608              	XMC_ECAT_WritePhy:
 609              	.LFB174:
 170:../Libraries/XMCLib/src/xmc_ecat.c **** 
 171:../Libraries/XMCLib/src/xmc_ecat.c **** /* EtherCAT PHY register write function*/
 172:../Libraries/XMCLib/src/xmc_ecat.c **** XMC_ECAT_STATUS_t XMC_ECAT_WritePhy(uint8_t phy_addr, uint8_t reg_addr, uint16_t data)
 173:../Libraries/XMCLib/src/xmc_ecat.c **** {
 610              	 .loc 1 173 0
 611              	 .cfi_startproc
 612              	 
 613              	 
 614 0000 80B5     	 push {r7,lr}
 615              	.LCFI46:
 616              	 .cfi_def_cfa_offset 8
 617              	 .cfi_offset 7,-8
 618              	 .cfi_offset 14,-4
 619 0002 84B0     	 sub sp,sp,#16
 620              	.LCFI47:
 621              	 .cfi_def_cfa_offset 24
 622 0004 00AF     	 add r7,sp,#0
 623              	.LCFI48:
 624              	 .cfi_def_cfa_register 7
 625 0006 0346     	 mov r3,r0
 626 0008 FB71     	 strb r3,[r7,#7]
 627 000a 0B46     	 mov r3,r1
 628 000c BB71     	 strb r3,[r7,#6]
 629 000e 1346     	 mov r3,r2
 630 0010 BB80     	 strh r3,[r7,#4]
 174:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_ECAT_STATUS_t status;
 175:../Libraries/XMCLib/src/xmc_ecat.c **** 
 176:../Libraries/XMCLib/src/xmc_ecat.c ****   XMC_ECAT_lRequestPhyAccessToMII();
 631              	 .loc 1 176 0
 632 0012 FFF7FEFF 	 bl XMC_ECAT_lRequestPhyAccessToMII
 177:../Libraries/XMCLib/src/xmc_ecat.c **** 
 178:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->MII_PHY_ADR = phy_addr;
 633              	 .loc 1 178 0
 634 0016 1D4A     	 ldr r2,.L40
 635 0018 FB79     	 ldrb r3,[r7,#7]
 636 001a 82F81235 	 strb r3,[r2,#1298]
 179:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->MII_PHY_REG_ADR = reg_addr;
 637              	 .loc 1 179 0
 638 001e 1B4A     	 ldr r2,.L40
 639 0020 BB79     	 ldrb r3,[r7,#6]
 640 0022 82F81335 	 strb r3,[r2,#1299]
 180:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->MII_PHY_DATA = data;
 641              	 .loc 1 180 0
 642 0026 194A     	 ldr r2,.L40
 643 0028 BB88     	 ldrh r3,[r7,#4]
 644 002a A2F81435 	 strh r3,[r2,#1300]
 181:../Libraries/XMCLib/src/xmc_ecat.c **** 
 182:../Libraries/XMCLib/src/xmc_ecat.c ****   ECAT0->MII_CONT_STAT |= 0x0200U;  /* write instruction */
 645              	 .loc 1 182 0
 646 002e 174A     	 ldr r2,.L40
 647 0030 164B     	 ldr r3,.L40
 648 0032 B3F81035 	 ldrh r3,[r3,#1296]
 649 0036 9BB2     	 uxth r3,r3
 650 0038 43F40073 	 orr r3,r3,#512
 651 003c 9BB2     	 uxth r3,r3
 652 003e A2F81035 	 strh r3,[r2,#1296]
 183:../Libraries/XMCLib/src/xmc_ecat.c ****   while ((ECAT0->MII_CONT_STAT & ECAT_MII_CONT_STAT_BUSY_Msk) != 0U){}
 653              	 .loc 1 183 0
 654 0042 00BF     	 nop
 655              	.L36:
 656              	 .loc 1 183 0 is_stmt 0 discriminator 1
 657 0044 114B     	 ldr r3,.L40
 658 0046 B3F81035 	 ldrh r3,[r3,#1296]
 659 004a 9BB2     	 uxth r3,r3
 660 004c 9BB2     	 uxth r3,r3
 661 004e 1BB2     	 sxth r3,r3
 662 0050 002B     	 cmp r3,#0
 663 0052 F7DB     	 blt .L36
 184:../Libraries/XMCLib/src/xmc_ecat.c **** 
 185:../Libraries/XMCLib/src/xmc_ecat.c ****   if ((ECAT0->MII_CONT_STAT & ECAT_MII_CONT_STAT_ERROR_Msk) != 0U)
 664              	 .loc 1 185 0 is_stmt 1
 665 0054 0D4B     	 ldr r3,.L40
 666 0056 B3F81035 	 ldrh r3,[r3,#1296]
 667 005a 9BB2     	 uxth r3,r3
 668 005c 03F48043 	 and r3,r3,#16384
 669 0060 002B     	 cmp r3,#0
 670 0062 0CD0     	 beq .L37
 186:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 187:../Libraries/XMCLib/src/xmc_ecat.c ****     ECAT0->MII_CONT_STAT &= ~ECAT_MII_CONT_STAT_CMD_REG_Msk; /* Clear error */
 671              	 .loc 1 187 0
 672 0064 094A     	 ldr r2,.L40
 673 0066 094B     	 ldr r3,.L40
 674 0068 B3F81035 	 ldrh r3,[r3,#1296]
 675 006c 9BB2     	 uxth r3,r3
 676 006e 23F44073 	 bic r3,r3,#768
 677 0072 9BB2     	 uxth r3,r3
 678 0074 A2F81035 	 strh r3,[r2,#1296]
 188:../Libraries/XMCLib/src/xmc_ecat.c ****     status = XMC_ECAT_STATUS_ERROR;
 679              	 .loc 1 188 0
 680 0078 0223     	 movs r3,#2
 681 007a FB73     	 strb r3,[r7,#15]
 682 007c 01E0     	 b .L38
 683              	.L37:
 189:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 190:../Libraries/XMCLib/src/xmc_ecat.c ****   else
 191:../Libraries/XMCLib/src/xmc_ecat.c ****   {
 192:../Libraries/XMCLib/src/xmc_ecat.c ****     status = XMC_ECAT_STATUS_OK;
 684              	 .loc 1 192 0
 685 007e 0023     	 movs r3,#0
 686 0080 FB73     	 strb r3,[r7,#15]
 687              	.L38:
 193:../Libraries/XMCLib/src/xmc_ecat.c ****   }
 194:../Libraries/XMCLib/src/xmc_ecat.c **** 
 195:../Libraries/XMCLib/src/xmc_ecat.c ****   return status;
 688              	 .loc 1 195 0
 689 0082 FB7B     	 ldrb r3,[r7,#15]
 196:../Libraries/XMCLib/src/xmc_ecat.c **** }
 690              	 .loc 1 196 0
 691 0084 1846     	 mov r0,r3
 692 0086 1037     	 adds r7,r7,#16
 693              	.LCFI49:
 694              	 .cfi_def_cfa_offset 8
 695 0088 BD46     	 mov sp,r7
 696              	.LCFI50:
 697              	 .cfi_def_cfa_register 13
 698              	 
 699 008a 80BD     	 pop {r7,pc}
 700              	.L41:
 701              	 .align 2
 702              	.L40:
 703 008c 00000154 	 .word 1409351680
 704              	 .cfi_endproc
 705              	.LFE174:
 707              	 .text
 708              	.Letext0:
 709              	 .file 2 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 710              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 711              	 .file 4 "E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Infineon/XMC4300_series/Include/XMC4300.h"
 712              	 .file 5 "E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc/xmc_ecat.h"
 713              	 .file 6 "E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc/xmc4_scu.h"
 714              	 .file 7 "E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include/core_cm4.h"
 715              	 .file 8 "E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Infineon/XMC4300_series/Include/system_XMC4300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ecat.c
    {standard input}:20     .text.XMC_ECAT_lRequestPhyAccessToMII:00000000 $t
    {standard input}:24     .text.XMC_ECAT_lRequestPhyAccessToMII:00000000 XMC_ECAT_lRequestPhyAccessToMII
    {standard input}:60     .text.XMC_ECAT_lRequestPhyAccessToMII:00000020 $d
    {standard input}:65     .text.XMC_ECAT_Enable:00000000 $t
    {standard input}:70     .text.XMC_ECAT_Enable:00000000 XMC_ECAT_Enable
    {standard input}:104    .text.XMC_ECAT_Enable:00000020 $d
    {standard input}:109    .text.XMC_ECAT_Disable:00000000 $t
    {standard input}:114    .text.XMC_ECAT_Disable:00000000 XMC_ECAT_Disable
    {standard input}:150    .text.XMC_ECAT_Disable:00000028 $d
    {standard input}:155    .text.XMC_ECAT_Init:00000000 $t
    {standard input}:160    .text.XMC_ECAT_Init:00000000 XMC_ECAT_Init
    {standard input}:238    .text.XMC_ECAT_Init:00000074 $d
    {standard input}:243    .text.XMC_ECAT_EnableEvent:00000000 $t
    {standard input}:248    .text.XMC_ECAT_EnableEvent:00000000 XMC_ECAT_EnableEvent
    {standard input}:289    .text.XMC_ECAT_EnableEvent:00000024 $d
    {standard input}:294    .text.XMC_ECAT_DisableEvent:00000000 $t
    {standard input}:299    .text.XMC_ECAT_DisableEvent:00000000 XMC_ECAT_DisableEvent
    {standard input}:341    .text.XMC_ECAT_DisableEvent:00000024 $d
    {standard input}:346    .text.XMC_ECAT_GetEventStatus:00000000 $t
    {standard input}:351    .text.XMC_ECAT_GetEventStatus:00000000 XMC_ECAT_GetEventStatus
    {standard input}:382    .text.XMC_ECAT_GetEventStatus:00000014 $d
    {standard input}:387    .text.XMC_ECAT_DisableSyncManChannel:00000000 $t
    {standard input}:392    .text.XMC_ECAT_DisableSyncManChannel:00000000 XMC_ECAT_DisableSyncManChannel
    {standard input}:442    .text.XMC_ECAT_EnableSyncManChannel:00000000 $t
    {standard input}:447    .text.XMC_ECAT_EnableSyncManChannel:00000000 XMC_ECAT_EnableSyncManChannel
    {standard input}:497    .text.XMC_ECAT_ReadPhy:00000000 $t
    {standard input}:502    .text.XMC_ECAT_ReadPhy:00000000 XMC_ECAT_ReadPhy
    {standard input}:598    .text.XMC_ECAT_ReadPhy:00000090 $d
    {standard input}:603    .text.XMC_ECAT_WritePhy:00000000 $t
    {standard input}:608    .text.XMC_ECAT_WritePhy:00000000 XMC_ECAT_WritePhy
    {standard input}:703    .text.XMC_ECAT_WritePhy:0000008c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
