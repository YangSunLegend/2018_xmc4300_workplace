   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ledts.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_LEDTS_InitGlobal,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_LEDTS_InitGlobal
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_LEDTS_InitGlobal:
  26              	.LFB162:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_ledts.c"
   1:../Libraries/XMCLib/src/xmc_ledts.c **** /**
   2:../Libraries/XMCLib/src/xmc_ledts.c ****  * @file xmc_ledts.c
   3:../Libraries/XMCLib/src/xmc_ledts.c ****  * @date 2015-06-20
   4:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   5:../Libraries/XMCLib/src/xmc_ledts.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ledts.c ****   *************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_ledts.c ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_ledts.c ****  *
   9:../Libraries/XMCLib/src/xmc_ledts.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ledts.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_ledts.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_ledts.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_ledts.c ****  * 
  18:../Libraries/XMCLib/src/xmc_ledts.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_ledts.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_ledts.c ****  * 
  21:../Libraries/XMCLib/src/xmc_ledts.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_ledts.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_ledts.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_ledts.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_ledts.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_ledts.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_ledts.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_ledts.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_ledts.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_ledts.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_ledts.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_ledts.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  36:../Libraries/XMCLib/src/xmc_ledts.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_ledts.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  39:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - New API added: XMC_LEDTS_SetActivePADNo() <br>
  42:../Libraries/XMCLib/src/xmc_ledts.c ****  *      
  43:../Libraries/XMCLib/src/xmc_ledts.c ****  * 2015-06-20:
  44:../Libraries/XMCLib/src/xmc_ledts.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  46:../Libraries/XMCLib/src/xmc_ledts.c ****  * <b>Detailed description of file:</b><br>
  47:../Libraries/XMCLib/src/xmc_ledts.c ****  * APIs for the functional blocks of LEDTS have been defined:<br>
  48:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- GLOBAL (APIs prefixed with LEDTS_GLOBAL_) <br>
  49:../Libraries/XMCLib/src/xmc_ledts.c ****  * -- Clock configuration, Function/Event configuration, Interrupt configuration
  50:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  51:../Libraries/XMCLib/src/xmc_ledts.c ****  * @endcond
  52:../Libraries/XMCLib/src/xmc_ledts.c ****  *
  53:../Libraries/XMCLib/src/xmc_ledts.c ****  */
  54:../Libraries/XMCLib/src/xmc_ledts.c **** 
  55:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  56:../Libraries/XMCLib/src/xmc_ledts.c ****  * HEADER FILES
  57:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  58:../Libraries/XMCLib/src/xmc_ledts.c **** #include <xmc_ledts.h>
  59:../Libraries/XMCLib/src/xmc_ledts.c **** 
  60:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS0)
  61:../Libraries/XMCLib/src/xmc_ledts.c **** #include "xmc_scu.h"
  62:../Libraries/XMCLib/src/xmc_ledts.c **** 
  63:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  64:../Libraries/XMCLib/src/xmc_ledts.c ****  * MACROS
  65:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  66:../Libraries/XMCLib/src/xmc_ledts.c **** #define XMC_LEDTS_CLOCK_NOT_RUNNING 0U
  67:../Libraries/XMCLib/src/xmc_ledts.c **** 
  68:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  69:../Libraries/XMCLib/src/xmc_ledts.c ****  * ENUMS
  70:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  71:../Libraries/XMCLib/src/xmc_ledts.c **** 
  72:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  73:../Libraries/XMCLib/src/xmc_ledts.c ****  * DATA STRUCTURES
  74:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  75:../Libraries/XMCLib/src/xmc_ledts.c **** 
  76:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  77:../Libraries/XMCLib/src/xmc_ledts.c ****  * GLOBAL DATA
  78:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  79:../Libraries/XMCLib/src/xmc_ledts.c **** 
  80:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  81:../Libraries/XMCLib/src/xmc_ledts.c ****  * LOCAL/UTILITY ROUTINES
  82:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  83:../Libraries/XMCLib/src/xmc_ledts.c **** 
  84:../Libraries/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  85:../Libraries/XMCLib/src/xmc_ledts.c ****  * API IMPLEMENTATION
  86:../Libraries/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  87:../Libraries/XMCLib/src/xmc_ledts.c **** 
  88:../Libraries/XMCLib/src/xmc_ledts.c **** /**
  89:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of global register
  90:../Libraries/XMCLib/src/xmc_ledts.c ****   */
  91:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitGlobal(XMC_LEDTS_t *const ledts, const XMC_LEDTS_GLOBAL_CONFIG_t *
  92:../Libraries/XMCLib/src/xmc_ledts.c **** {
  28              	 .loc 1 92 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 82B0     	 sub sp,sp,#8
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  44 0008 3960     	 str r1,[r7]
  93:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
  94:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Null Pointer", (config != (XMC_LEDTS_GLOBAL_CONFIG_t *)NULL));
  95:../Libraries/XMCLib/src/xmc_ledts.c **** 
  96:../Libraries/XMCLib/src/xmc_ledts.c ****   switch ((uint32_t)ledts)
  45              	 .loc 1 96 0
  46 000a 7B68     	 ldr r3,[r7,#4]
  47 000c 0D4A     	 ldr r2,.L6
  48 000e 9342     	 cmp r3,r2
  49 0010 06D1     	 bne .L2
  97:../Libraries/XMCLib/src/xmc_ledts.c ****   {
  98:../Libraries/XMCLib/src/xmc_ledts.c ****     case (uint32_t)XMC_LEDTS0:
  99:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 100:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS0);
  50              	 .loc 1 100 0
  51 0012 0D48     	 ldr r0,.L6+4
  52 0014 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 101:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 102:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 103:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS0);
  53              	 .loc 1 103 0
  54 0018 0B48     	 ldr r0,.L6+4
  55 001a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 104:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 105:../Libraries/XMCLib/src/xmc_ledts.c ****       break;
  56              	 .loc 1 105 0
  57 001e 00BF     	 nop
  58              	.L2:
 106:../Libraries/XMCLib/src/xmc_ledts.c **** 
 107:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS1)
 108:../Libraries/XMCLib/src/xmc_ledts.c ****     case (uint32_t)XMC_LEDTS1:
 109:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 110:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS1);
 111:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 112:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 113:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS1);
 114:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 115:../Libraries/XMCLib/src/xmc_ledts.c ****       break;
 116:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 117:../Libraries/XMCLib/src/xmc_ledts.c **** 
 118:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS2)
 119:../Libraries/XMCLib/src/xmc_ledts.c ****     case (uint32_t)XMC_LEDTS2:
 120:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 121:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS2);
 122:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 123:../Libraries/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 124:../Libraries/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS2);
 125:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 126:../Libraries/XMCLib/src/xmc_ledts.c ****       break;
 127:../Libraries/XMCLib/src/xmc_ledts.c **** #endif
 128:../Libraries/XMCLib/src/xmc_ledts.c ****       
 129:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 130:../Libraries/XMCLib/src/xmc_ledts.c **** 
 131:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
  59              	 .loc 1 131 0
  60 0020 7B68     	 ldr r3,[r7,#4]
  61 0022 5B68     	 ldr r3,[r3,#4]
  62 0024 1B0C     	 lsrs r3,r3,#16
  63 0026 1B04     	 lsls r3,r3,#16
  64 0028 002B     	 cmp r3,#0
  65 002a 01D0     	 beq .L4
 132:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 133:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
  66              	 .loc 1 133 0
  67 002c 0123     	 movs r3,#1
  68 002e 04E0     	 b .L5
  69              	.L4:
 134:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 135:../Libraries/XMCLib/src/xmc_ledts.c **** 
 136:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL = config->globctl;
  70              	 .loc 1 136 0
  71 0030 3B68     	 ldr r3,[r7]
  72 0032 1A68     	 ldr r2,[r3]
  73 0034 7B68     	 ldr r3,[r7,#4]
  74 0036 5A60     	 str r2,[r3,#4]
 137:../Libraries/XMCLib/src/xmc_ledts.c **** 
 138:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
  75              	 .loc 1 138 0
  76 0038 0023     	 movs r3,#0
  77              	.L5:
 139:../Libraries/XMCLib/src/xmc_ledts.c **** }
  78              	 .loc 1 139 0
  79 003a 1846     	 mov r0,r3
  80 003c 0837     	 adds r7,r7,#8
  81              	.LCFI3:
  82              	 .cfi_def_cfa_offset 8
  83 003e BD46     	 mov sp,r7
  84              	.LCFI4:
  85              	 .cfi_def_cfa_register 13
  86              	 
  87 0040 80BD     	 pop {r7,pc}
  88              	.L7:
  89 0042 00BF     	 .align 2
  90              	.L6:
  91 0044 00000148 	 .word 1208025088
  92 0048 08000010 	 .word 268435464
  93              	 .cfi_endproc
  94              	.LFE162:
  96              	 .section .text.XMC_LEDTS_InitLED,"ax",%progbits
  97              	 .align 2
  98              	 .global XMC_LEDTS_InitLED
  99              	 .thumb
 100              	 .thumb_func
 102              	XMC_LEDTS_InitLED:
 103              	.LFB163:
 140:../Libraries/XMCLib/src/xmc_ledts.c **** 
 141:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 142:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for LED-driving function
 143:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 144:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitLED(XMC_LEDTS_t *const ledts, const XMC_LEDTS_LED_CONFIG_t *config
 145:../Libraries/XMCLib/src/xmc_ledts.c **** {
 104              	 .loc 1 145 0
 105              	 .cfi_startproc
 106              	 
 107              	 
 108              	 
 109 0000 80B4     	 push {r7}
 110              	.LCFI5:
 111              	 .cfi_def_cfa_offset 4
 112              	 .cfi_offset 7,-4
 113 0002 83B0     	 sub sp,sp,#12
 114              	.LCFI6:
 115              	 .cfi_def_cfa_offset 16
 116 0004 00AF     	 add r7,sp,#0
 117              	.LCFI7:
 118              	 .cfi_def_cfa_register 7
 119 0006 7860     	 str r0,[r7,#4]
 120 0008 3960     	 str r1,[r7]
 146:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 147:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Null Pointer", (config != (XMC_LEDTS_LED_CONFIG_t *)NULL));
 148:../Libraries/XMCLib/src/xmc_ledts.c **** 
 149:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 121              	 .loc 1 149 0
 122 000a 7B68     	 ldr r3,[r7,#4]
 123 000c 5B68     	 ldr r3,[r3,#4]
 124 000e 1B0C     	 lsrs r3,r3,#16
 125 0010 1B04     	 lsls r3,r3,#16
 126 0012 002B     	 cmp r3,#0
 127 0014 01D0     	 beq .L9
 150:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 151:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 128              	 .loc 1 151 0
 129 0016 0123     	 movs r3,#1
 130 0018 13E0     	 b .L10
 131              	.L9:
 152:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 153:../Libraries/XMCLib/src/xmc_ledts.c **** 
 154:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_COLLEV_Msk | LEDTS_FNCTL_NR_LEDCOL_Msk);
 132              	 .loc 1 154 0
 133 001a 7B68     	 ldr r3,[r7,#4]
 134 001c 9B68     	 ldr r3,[r3,#8]
 135 001e 23F07042 	 bic r2,r3,#-268435456
 136 0022 7B68     	 ldr r3,[r7,#4]
 137 0024 9A60     	 str r2,[r3,#8]
 155:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 138              	 .loc 1 155 0
 139 0026 7B68     	 ldr r3,[r7,#4]
 140 0028 9A68     	 ldr r2,[r3,#8]
 141 002a 3B68     	 ldr r3,[r7]
 142 002c 1B68     	 ldr r3,[r3]
 143 002e 1A43     	 orrs r2,r2,r3
 144 0030 7B68     	 ldr r3,[r7,#4]
 145 0032 9A60     	 str r2,[r3,#8]
 156:../Libraries/XMCLib/src/xmc_ledts.c **** 
 157:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable LED function */
 158:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_LD_EN_Msk;
 146              	 .loc 1 158 0
 147 0034 7B68     	 ldr r3,[r7,#4]
 148 0036 5B68     	 ldr r3,[r3,#4]
 149 0038 43F00202 	 orr r2,r3,#2
 150 003c 7B68     	 ldr r3,[r7,#4]
 151 003e 5A60     	 str r2,[r3,#4]
 159:../Libraries/XMCLib/src/xmc_ledts.c **** 
 160:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 152              	 .loc 1 160 0
 153 0040 0023     	 movs r3,#0
 154              	.L10:
 161:../Libraries/XMCLib/src/xmc_ledts.c **** }
 155              	 .loc 1 161 0
 156 0042 1846     	 mov r0,r3
 157 0044 0C37     	 adds r7,r7,#12
 158              	.LCFI8:
 159              	 .cfi_def_cfa_offset 4
 160 0046 BD46     	 mov sp,r7
 161              	.LCFI9:
 162              	 .cfi_def_cfa_register 13
 163              	 
 164 0048 5DF8047B 	 ldr r7,[sp],#4
 165              	.LCFI10:
 166              	 .cfi_restore 7
 167              	 .cfi_def_cfa_offset 0
 168 004c 7047     	 bx lr
 169              	 .cfi_endproc
 170              	.LFE163:
 172 004e 00BF     	 .section .text.XMC_LEDTS_InitTSBasic,"ax",%progbits
 173              	 .align 2
 174              	 .global XMC_LEDTS_InitTSBasic
 175              	 .thumb
 176              	 .thumb_func
 178              	XMC_LEDTS_InitTSBasic:
 179              	.LFB164:
 162:../Libraries/XMCLib/src/xmc_ledts.c **** 
 163:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 164:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for basic Touch-Sense control function
 165:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 166:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSBasic(XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_BASIC_
 167:../Libraries/XMCLib/src/xmc_ledts.c **** {
 180              	 .loc 1 167 0
 181              	 .cfi_startproc
 182              	 
 183              	 
 184              	 
 185 0000 80B4     	 push {r7}
 186              	.LCFI11:
 187              	 .cfi_def_cfa_offset 4
 188              	 .cfi_offset 7,-4
 189 0002 85B0     	 sub sp,sp,#20
 190              	.LCFI12:
 191              	 .cfi_def_cfa_offset 24
 192 0004 00AF     	 add r7,sp,#0
 193              	.LCFI13:
 194              	 .cfi_def_cfa_register 7
 195 0006 7860     	 str r0,[r7,#4]
 196 0008 3960     	 str r1,[r7]
 168:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 169:../Libraries/XMCLib/src/xmc_ledts.c **** 
 170:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 171:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_BASIC_t *)NULL
 172:../Libraries/XMCLib/src/xmc_ledts.c **** 
 173:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 197              	 .loc 1 173 0
 198 000a 7B68     	 ldr r3,[r7,#4]
 199 000c 5B68     	 ldr r3,[r3,#4]
 200 000e 1B0C     	 lsrs r3,r3,#16
 201 0010 1B04     	 lsls r3,r3,#16
 202 0012 002B     	 cmp r3,#0
 203 0014 01D0     	 beq .L12
 174:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 175:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 204              	 .loc 1 175 0
 205 0016 0123     	 movs r3,#1
 206 0018 15E0     	 b .L13
 207              	.L12:
 176:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 177:../Libraries/XMCLib/src/xmc_ledts.c **** 
 178:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_ACCCNT_Msk | LEDTS_FNCTL_TSCCMP_Msk | LEDTS_FNCTL_TSCTRR_Msk | LEDTS_FNCTL_TS
 208              	 .loc 1 178 0
 209 001a 0E4B     	 ldr r3,.L14
 210 001c FB60     	 str r3,[r7,#12]
 179:../Libraries/XMCLib/src/xmc_ledts.c **** 		 LEDTS_FNCTL_NR_TSIN_Msk);
 180:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 211              	 .loc 1 180 0
 212 001e 7B68     	 ldr r3,[r7,#4]
 213 0020 9A68     	 ldr r2,[r3,#8]
 214 0022 FB68     	 ldr r3,[r7,#12]
 215 0024 1A40     	 ands r2,r2,r3
 216 0026 7B68     	 ldr r3,[r7,#4]
 217 0028 9A60     	 str r2,[r3,#8]
 181:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 218              	 .loc 1 181 0
 219 002a 7B68     	 ldr r3,[r7,#4]
 220 002c 9A68     	 ldr r2,[r3,#8]
 221 002e 3B68     	 ldr r3,[r7]
 222 0030 1B68     	 ldr r3,[r3]
 223 0032 1A43     	 orrs r2,r2,r3
 224 0034 7B68     	 ldr r3,[r7,#4]
 225 0036 9A60     	 str r2,[r3,#8]
 182:../Libraries/XMCLib/src/xmc_ledts.c **** 
 183:../Libraries/XMCLib/src/xmc_ledts.c ****   /* Enable TS function */
 184:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_TS_EN_Msk;
 226              	 .loc 1 184 0
 227 0038 7B68     	 ldr r3,[r7,#4]
 228 003a 5B68     	 ldr r3,[r3,#4]
 229 003c 43F00102 	 orr r2,r3,#1
 230 0040 7B68     	 ldr r3,[r7,#4]
 231 0042 5A60     	 str r2,[r3,#4]
 185:../Libraries/XMCLib/src/xmc_ledts.c **** 
 186:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 232              	 .loc 1 186 0
 233 0044 0023     	 movs r3,#0
 234              	.L13:
 187:../Libraries/XMCLib/src/xmc_ledts.c **** }
 235              	 .loc 1 187 0
 236 0046 1846     	 mov r0,r3
 237 0048 1437     	 adds r7,r7,#20
 238              	.LCFI14:
 239              	 .cfi_def_cfa_offset 4
 240 004a BD46     	 mov sp,r7
 241              	.LCFI15:
 242              	 .cfi_def_cfa_register 13
 243              	 
 244 004c 5DF8047B 	 ldr r7,[sp],#4
 245              	.LCFI16:
 246              	 .cfi_restore 7
 247              	 .cfi_def_cfa_offset 0
 248 0050 7047     	 bx lr
 249              	.L15:
 250 0052 00BF     	 .align 2
 251              	.L14:
 252 0054 FFFF60F0 	 .word -262078465
 253              	 .cfi_endproc
 254              	.LFE164:
 256              	 .section .text.XMC_LEDTS_InitTSAdvanced,"ax",%progbits
 257              	 .align 2
 258              	 .global XMC_LEDTS_InitTSAdvanced
 259              	 .thumb
 260              	 .thumb_func
 262              	XMC_LEDTS_InitTSAdvanced:
 263              	.LFB165:
 188:../Libraries/XMCLib/src/xmc_ledts.c **** 
 189:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 190:../Libraries/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for advanced Touch-Sense control function
 191:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 192:../Libraries/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSAdvanced (XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_AD
 193:../Libraries/XMCLib/src/xmc_ledts.c **** {
 264              	 .loc 1 193 0
 265              	 .cfi_startproc
 266              	 
 267              	 
 268              	 
 269 0000 80B4     	 push {r7}
 270              	.LCFI17:
 271              	 .cfi_def_cfa_offset 4
 272              	 .cfi_offset 7,-4
 273 0002 85B0     	 sub sp,sp,#20
 274              	.LCFI18:
 275              	 .cfi_def_cfa_offset 24
 276 0004 00AF     	 add r7,sp,#0
 277              	.LCFI19:
 278              	 .cfi_def_cfa_register 7
 279 0006 7860     	 str r0,[r7,#4]
 280 0008 3960     	 str r1,[r7]
 194:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 195:../Libraries/XMCLib/src/xmc_ledts.c **** 
 196:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 197:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_ADVANCED_t 
 198:../Libraries/XMCLib/src/xmc_ledts.c **** 
 199:../Libraries/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 281              	 .loc 1 199 0
 282 000a 7B68     	 ldr r3,[r7,#4]
 283 000c 5B68     	 ldr r3,[r3,#4]
 284 000e 1B0C     	 lsrs r3,r3,#16
 285 0010 1B04     	 lsls r3,r3,#16
 286 0012 002B     	 cmp r3,#0
 287 0014 01D0     	 beq .L17
 200:../Libraries/XMCLib/src/xmc_ledts.c ****   {
 201:../Libraries/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 288              	 .loc 1 201 0
 289 0016 0123     	 movs r3,#1
 290 0018 1FE0     	 b .L18
 291              	.L17:
 202:../Libraries/XMCLib/src/xmc_ledts.c ****   }
 203:../Libraries/XMCLib/src/xmc_ledts.c **** 
 204:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_GLOBCTL_MASKVAL_Msk | LEDTS_GLOBCTL_FENVAL_Msk);
 292              	 .loc 1 204 0
 293 001a 6FF4F053 	 mvn r3,#7680
 294 001e FB60     	 str r3,[r7,#12]
 205:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= (reg);
 295              	 .loc 1 205 0
 296 0020 7B68     	 ldr r3,[r7,#4]
 297 0022 5A68     	 ldr r2,[r3,#4]
 298 0024 FB68     	 ldr r3,[r7,#12]
 299 0026 1A40     	 ands r2,r2,r3
 300 0028 7B68     	 ldr r3,[r7,#4]
 301 002a 5A60     	 str r2,[r3,#4]
 206:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= (config->globctl);
 302              	 .loc 1 206 0
 303 002c 7B68     	 ldr r3,[r7,#4]
 304 002e 5A68     	 ldr r2,[r3,#4]
 305 0030 3B68     	 ldr r3,[r7]
 306 0032 1B68     	 ldr r3,[r3]
 307 0034 1A43     	 orrs r2,r2,r3
 308 0036 7B68     	 ldr r3,[r7,#4]
 309 0038 5A60     	 str r2,[r3,#4]
 207:../Libraries/XMCLib/src/xmc_ledts.c **** 
 208:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_PADT_Msk | LEDTS_FNCTL_PADTSW_Msk | LEDTS_FNCTL_EPULL_Msk | LEDTS_FNCTL_TSOEX
 310              	 .loc 1 208 0
 311 003a 0B4B     	 ldr r3,.L19
 312 003c FB60     	 str r3,[r7,#12]
 209:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 313              	 .loc 1 209 0
 314 003e 7B68     	 ldr r3,[r7,#4]
 315 0040 9A68     	 ldr r2,[r3,#8]
 316 0042 FB68     	 ldr r3,[r7,#12]
 317 0044 1A40     	 ands r2,r2,r3
 318 0046 7B68     	 ldr r3,[r7,#4]
 319 0048 9A60     	 str r2,[r3,#8]
 210:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 320              	 .loc 1 210 0
 321 004a 7B68     	 ldr r3,[r7,#4]
 322 004c 9A68     	 ldr r2,[r3,#8]
 323 004e 3B68     	 ldr r3,[r7]
 324 0050 5B68     	 ldr r3,[r3,#4]
 325 0052 1A43     	 orrs r2,r2,r3
 326 0054 7B68     	 ldr r3,[r7,#4]
 327 0056 9A60     	 str r2,[r3,#8]
 211:../Libraries/XMCLib/src/xmc_ledts.c **** 
 212:../Libraries/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 328              	 .loc 1 212 0
 329 0058 0023     	 movs r3,#0
 330              	.L18:
 213:../Libraries/XMCLib/src/xmc_ledts.c **** }
 331              	 .loc 1 213 0
 332 005a 1846     	 mov r0,r3
 333 005c 1437     	 adds r7,r7,#20
 334              	.LCFI20:
 335              	 .cfi_def_cfa_offset 4
 336 005e BD46     	 mov sp,r7
 337              	.LCFI21:
 338              	 .cfi_def_cfa_register 13
 339              	 
 340 0060 5DF8047B 	 ldr r7,[sp],#4
 341              	.LCFI22:
 342              	 .cfi_restore 7
 343              	 .cfi_def_cfa_offset 0
 344 0064 7047     	 bx lr
 345              	.L20:
 346 0066 00BF     	 .align 2
 347              	.L19:
 348 0068 E0FF9FFF 	 .word -6291488
 349              	 .cfi_endproc
 350              	.LFE165:
 352              	 .section .text.XMC_LEDTS_StartCounter,"ax",%progbits
 353              	 .align 2
 354              	 .global XMC_LEDTS_StartCounter
 355              	 .thumb
 356              	 .thumb_func
 358              	XMC_LEDTS_StartCounter:
 359              	.LFB166:
 214:../Libraries/XMCLib/src/xmc_ledts.c **** 
 215:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 216:../Libraries/XMCLib/src/xmc_ledts.c ****   * Starts LEDTS-counter
 217:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 218:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StartCounter(XMC_LEDTS_t *const ledts, const uint16_t prescaler)
 219:../Libraries/XMCLib/src/xmc_ledts.c **** {
 360              	 .loc 1 219 0
 361              	 .cfi_startproc
 362              	 
 363              	 
 364              	 
 365 0000 80B4     	 push {r7}
 366              	.LCFI23:
 367              	 .cfi_def_cfa_offset 4
 368              	 .cfi_offset 7,-4
 369 0002 83B0     	 sub sp,sp,#12
 370              	.LCFI24:
 371              	 .cfi_def_cfa_offset 16
 372 0004 00AF     	 add r7,sp,#0
 373              	.LCFI25:
 374              	 .cfi_def_cfa_register 7
 375 0006 7860     	 str r0,[r7,#4]
 376 0008 0B46     	 mov r3,r1
 377 000a 7B80     	 strh r3,[r7,#2]
 220:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Start_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 221:../Libraries/XMCLib/src/xmc_ledts.c **** 
 222:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= prescaler<<16U;
 378              	 .loc 1 222 0
 379 000c 7B68     	 ldr r3,[r7,#4]
 380 000e 5B68     	 ldr r3,[r3,#4]
 381 0010 7A88     	 ldrh r2,[r7,#2]
 382 0012 1204     	 lsls r2,r2,#16
 383 0014 1A43     	 orrs r2,r2,r3
 384 0016 7B68     	 ldr r3,[r7,#4]
 385 0018 5A60     	 str r2,[r3,#4]
 223:../Libraries/XMCLib/src/xmc_ledts.c **** }
 386              	 .loc 1 223 0
 387 001a 0C37     	 adds r7,r7,#12
 388              	.LCFI26:
 389              	 .cfi_def_cfa_offset 4
 390 001c BD46     	 mov sp,r7
 391              	.LCFI27:
 392              	 .cfi_def_cfa_register 13
 393              	 
 394 001e 5DF8047B 	 ldr r7,[sp],#4
 395              	.LCFI28:
 396              	 .cfi_restore 7
 397              	 .cfi_def_cfa_offset 0
 398 0022 7047     	 bx lr
 399              	 .cfi_endproc
 400              	.LFE166:
 402              	 .section .text.XMC_LEDTS_StopCounter,"ax",%progbits
 403              	 .align 2
 404              	 .global XMC_LEDTS_StopCounter
 405              	 .thumb
 406              	 .thumb_func
 408              	XMC_LEDTS_StopCounter:
 409              	.LFB167:
 224:../Libraries/XMCLib/src/xmc_ledts.c **** 
 225:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 226:../Libraries/XMCLib/src/xmc_ledts.c ****   * Stops LEDTS-counter
 227:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 228:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StopCounter(XMC_LEDTS_t *const ledts)
 229:../Libraries/XMCLib/src/xmc_ledts.c **** {
 410              	 .loc 1 229 0
 411              	 .cfi_startproc
 412              	 
 413              	 
 414              	 
 415 0000 80B4     	 push {r7}
 416              	.LCFI29:
 417              	 .cfi_def_cfa_offset 4
 418              	 .cfi_offset 7,-4
 419 0002 83B0     	 sub sp,sp,#12
 420              	.LCFI30:
 421              	 .cfi_def_cfa_offset 16
 422 0004 00AF     	 add r7,sp,#0
 423              	.LCFI31:
 424              	 .cfi_def_cfa_register 7
 425 0006 7860     	 str r0,[r7,#4]
 230:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Stop_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 231:../Libraries/XMCLib/src/xmc_ledts.c **** 
 232:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= 0x0000FFFF;
 426              	 .loc 1 232 0
 427 0008 7B68     	 ldr r3,[r7,#4]
 428 000a 5B68     	 ldr r3,[r3,#4]
 429 000c 9AB2     	 uxth r2,r3
 430 000e 7B68     	 ldr r3,[r7,#4]
 431 0010 5A60     	 str r2,[r3,#4]
 233:../Libraries/XMCLib/src/xmc_ledts.c **** }
 432              	 .loc 1 233 0
 433 0012 0C37     	 adds r7,r7,#12
 434              	.LCFI32:
 435              	 .cfi_def_cfa_offset 4
 436 0014 BD46     	 mov sp,r7
 437              	.LCFI33:
 438              	 .cfi_def_cfa_register 13
 439              	 
 440 0016 5DF8047B 	 ldr r7,[sp],#4
 441              	.LCFI34:
 442              	 .cfi_restore 7
 443              	 .cfi_def_cfa_offset 0
 444 001a 7047     	 bx lr
 445              	 .cfi_endproc
 446              	.LFE167:
 448              	 .section .text.XMC_LEDTS_ReadInterruptFlag,"ax",%progbits
 449              	 .align 2
 450              	 .global XMC_LEDTS_ReadInterruptFlag
 451              	 .thumb
 452              	 .thumb_func
 454              	XMC_LEDTS_ReadInterruptFlag:
 455              	.LFB168:
 234:../Libraries/XMCLib/src/xmc_ledts.c **** 
 235:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 236:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reads time interrupt flags
 237:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 238:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadInterruptFlag(XMC_LEDTS_t *const ledts)
 239:../Libraries/XMCLib/src/xmc_ledts.c **** {
 456              	 .loc 1 239 0
 457              	 .cfi_startproc
 458              	 
 459              	 
 460              	 
 461 0000 80B4     	 push {r7}
 462              	.LCFI35:
 463              	 .cfi_def_cfa_offset 4
 464              	 .cfi_offset 7,-4
 465 0002 83B0     	 sub sp,sp,#12
 466              	.LCFI36:
 467              	 .cfi_def_cfa_offset 16
 468 0004 00AF     	 add r7,sp,#0
 469              	.LCFI37:
 470              	 .cfi_def_cfa_register 7
 471 0006 7860     	 str r0,[r7,#4]
 240:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ReadInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts))
 241:../Libraries/XMCLib/src/xmc_ledts.c **** 
 242:../Libraries/XMCLib/src/xmc_ledts.c ****   return (ledts->EVFR & 0xF);
 472              	 .loc 1 242 0
 473 0008 7B68     	 ldr r3,[r7,#4]
 474 000a DB68     	 ldr r3,[r3,#12]
 475 000c 03F00F03 	 and r3,r3,#15
 243:../Libraries/XMCLib/src/xmc_ledts.c **** }
 476              	 .loc 1 243 0
 477 0010 1846     	 mov r0,r3
 478 0012 0C37     	 adds r7,r7,#12
 479              	.LCFI38:
 480              	 .cfi_def_cfa_offset 4
 481 0014 BD46     	 mov sp,r7
 482              	.LCFI39:
 483              	 .cfi_def_cfa_register 13
 484              	 
 485 0016 5DF8047B 	 ldr r7,[sp],#4
 486              	.LCFI40:
 487              	 .cfi_restore 7
 488              	 .cfi_def_cfa_offset 0
 489 001a 7047     	 bx lr
 490              	 .cfi_endproc
 491              	.LFE168:
 493              	 .section .text.XMC_LEDTS_SetActivePADNo,"ax",%progbits
 494              	 .align 2
 495              	 .global XMC_LEDTS_SetActivePADNo
 496              	 .thumb
 497              	 .thumb_func
 499              	XMC_LEDTS_SetActivePADNo:
 500              	.LFB169:
 244:../Libraries/XMCLib/src/xmc_ledts.c **** 
 245:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 246:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the active pad number
 247:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 248:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetActivePADNo(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t pad_num)
 249:../Libraries/XMCLib/src/xmc_ledts.c **** {
 501              	 .loc 1 249 0
 502              	 .cfi_startproc
 503              	 
 504              	 
 505              	 
 506 0000 80B4     	 push {r7}
 507              	.LCFI41:
 508              	 .cfi_def_cfa_offset 4
 509              	 .cfi_offset 7,-4
 510 0002 85B0     	 sub sp,sp,#20
 511              	.LCFI42:
 512              	 .cfi_def_cfa_offset 24
 513 0004 00AF     	 add r7,sp,#0
 514              	.LCFI43:
 515              	 .cfi_def_cfa_register 7
 516 0006 7860     	 str r0,[r7,#4]
 517 0008 0B46     	 mov r3,r1
 518 000a FB70     	 strb r3,[r7,#3]
 250:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 251:../Libraries/XMCLib/src/xmc_ledts.c **** 
 252:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetActivePADNo:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 253:../Libraries/XMCLib/src/xmc_ledts.c **** 
 254:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->FNCTL;
 519              	 .loc 1 254 0
 520 000c 7B68     	 ldr r3,[r7,#4]
 521 000e 9B68     	 ldr r3,[r3,#8]
 522 0010 FB60     	 str r3,[r7,#12]
 255:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~(LEDTS_FNCTL_PADT_Msk);
 523              	 .loc 1 255 0
 524 0012 FB68     	 ldr r3,[r7,#12]
 525 0014 23F00703 	 bic r3,r3,#7
 526 0018 FB60     	 str r3,[r7,#12]
 256:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (uint32_t)pad_num;
 527              	 .loc 1 256 0
 528 001a FB78     	 ldrb r3,[r7,#3]
 529 001c FA68     	 ldr r2,[r7,#12]
 530 001e 1343     	 orrs r3,r3,r2
 531 0020 FB60     	 str r3,[r7,#12]
 257:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL = reg;
 532              	 .loc 1 257 0
 533 0022 7B68     	 ldr r3,[r7,#4]
 534 0024 FA68     	 ldr r2,[r7,#12]
 535 0026 9A60     	 str r2,[r3,#8]
 258:../Libraries/XMCLib/src/xmc_ledts.c **** }
 536              	 .loc 1 258 0
 537 0028 1437     	 adds r7,r7,#20
 538              	.LCFI44:
 539              	 .cfi_def_cfa_offset 4
 540 002a BD46     	 mov sp,r7
 541              	.LCFI45:
 542              	 .cfi_def_cfa_register 13
 543              	 
 544 002c 5DF8047B 	 ldr r7,[sp],#4
 545              	.LCFI46:
 546              	 .cfi_restore 7
 547              	 .cfi_def_cfa_offset 0
 548 0030 7047     	 bx lr
 549              	 .cfi_endproc
 550              	.LFE169:
 552 0032 00BF     	 .section .text.XMC_LEDTS_ClearInterruptFlag,"ax",%progbits
 553              	 .align 2
 554              	 .global XMC_LEDTS_ClearInterruptFlag
 555              	 .thumb
 556              	 .thumb_func
 558              	XMC_LEDTS_ClearInterruptFlag:
 559              	.LFB170:
 259:../Libraries/XMCLib/src/xmc_ledts.c **** 
 260:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 261:../Libraries/XMCLib/src/xmc_ledts.c ****   * Clears interrupt indication flags
 262:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 263:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_ClearInterruptFlag(XMC_LEDTS_t *const ledts, uint32_t interrupt_mask)
 264:../Libraries/XMCLib/src/xmc_ledts.c **** {
 560              	 .loc 1 264 0
 561              	 .cfi_startproc
 562              	 
 563              	 
 564              	 
 565 0000 80B4     	 push {r7}
 566              	.LCFI47:
 567              	 .cfi_def_cfa_offset 4
 568              	 .cfi_offset 7,-4
 569 0002 83B0     	 sub sp,sp,#12
 570              	.LCFI48:
 571              	 .cfi_def_cfa_offset 16
 572 0004 00AF     	 add r7,sp,#0
 573              	.LCFI49:
 574              	 .cfi_def_cfa_register 7
 575 0006 7860     	 str r0,[r7,#4]
 576 0008 3960     	 str r1,[r7]
 265:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ClearInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 266:../Libraries/XMCLib/src/xmc_ledts.c **** 
 267:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->EVFR = (interrupt_mask << LEDTS_EVFR_CTSF_Pos);
 577              	 .loc 1 267 0
 578 000a 3B68     	 ldr r3,[r7]
 579 000c 1A04     	 lsls r2,r3,#16
 580 000e 7B68     	 ldr r3,[r7,#4]
 581 0010 DA60     	 str r2,[r3,#12]
 268:../Libraries/XMCLib/src/xmc_ledts.c **** }
 582              	 .loc 1 268 0
 583 0012 0C37     	 adds r7,r7,#12
 584              	.LCFI50:
 585              	 .cfi_def_cfa_offset 4
 586 0014 BD46     	 mov sp,r7
 587              	.LCFI51:
 588              	 .cfi_def_cfa_register 13
 589              	 
 590 0016 5DF8047B 	 ldr r7,[sp],#4
 591              	.LCFI52:
 592              	 .cfi_restore 7
 593              	 .cfi_def_cfa_offset 0
 594 001a 7047     	 bx lr
 595              	 .cfi_endproc
 596              	.LFE170:
 598              	 .section .text.XMC_LEDTS_SetLEDLinePattern,"ax",%progbits
 599              	 .align 2
 600              	 .global XMC_LEDTS_SetLEDLinePattern
 601              	 .thumb
 602              	 .thumb_func
 604              	XMC_LEDTS_SetLEDLinePattern:
 605              	.LFB171:
 269:../Libraries/XMCLib/src/xmc_ledts.c **** 
 270:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 271:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to output pattern on an LED column in LED matrix
 272:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 273:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetLEDLinePattern(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const uin
 274:../Libraries/XMCLib/src/xmc_ledts.c **** {
 606              	 .loc 1 274 0
 607              	 .cfi_startproc
 608              	 
 609              	 
 610              	 
 611 0000 80B4     	 push {r7}
 612              	.LCFI53:
 613              	 .cfi_def_cfa_offset 4
 614              	 .cfi_offset 7,-4
 615 0002 85B0     	 sub sp,sp,#20
 616              	.LCFI54:
 617              	 .cfi_def_cfa_offset 24
 618 0004 00AF     	 add r7,sp,#0
 619              	.LCFI55:
 620              	 .cfi_def_cfa_register 7
 621 0006 7860     	 str r0,[r7,#4]
 622 0008 0B46     	 mov r3,r1
 623 000a FB70     	 strb r3,[r7,#3]
 624 000c 1346     	 mov r3,r2
 625 000e BB70     	 strb r3,[r7,#2]
 275:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 276:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 626              	 .loc 1 276 0
 627 0010 FB78     	 ldrb r3,[r7,#3]
 628 0012 9B08     	 lsrs r3,r3,#2
 629 0014 FB73     	 strb r3,[r7,#15]
 277:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 630              	 .loc 1 277 0
 631 0016 FB78     	 ldrb r3,[r7,#3]
 632 0018 03F00303 	 and r3,r3,#3
 633 001c DBB2     	 uxtb r3,r3
 634 001e DB00     	 lsls r3,r3,#3
 635 0020 BB73     	 strb r3,[r7,#14]
 278:../Libraries/XMCLib/src/xmc_ledts.c **** 
 279:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_LED_Line_Pattern:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledt
 280:../Libraries/XMCLib/src/xmc_ledts.c **** 
 281:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LINE[reg_index];
 636              	 .loc 1 281 0
 637 0022 FB7B     	 ldrb r3,[r7,#15]
 638 0024 7A68     	 ldr r2,[r7,#4]
 639 0026 0433     	 adds r3,r3,#4
 640 0028 9B00     	 lsls r3,r3,#2
 641 002a 1344     	 add r3,r3,r2
 642 002c 5B68     	 ldr r3,[r3,#4]
 643 002e BB60     	 str r3,[r7,#8]
 282:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 644              	 .loc 1 282 0
 645 0030 BB7B     	 ldrb r3,[r7,#14]
 646 0032 FF22     	 movs r2,#255
 647 0034 02FA03F3 	 lsl r3,r2,r3
 648 0038 DB43     	 mvns r3,r3
 649 003a 1A46     	 mov r2,r3
 650 003c BB68     	 ldr r3,[r7,#8]
 651 003e 1340     	 ands r3,r3,r2
 652 0040 BB60     	 str r3,[r7,#8]
 283:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= pattern << bit_shift_count;
 653              	 .loc 1 283 0
 654 0042 BA78     	 ldrb r2,[r7,#2]
 655 0044 BB7B     	 ldrb r3,[r7,#14]
 656 0046 02FA03F3 	 lsl r3,r2,r3
 657 004a 1A46     	 mov r2,r3
 658 004c BB68     	 ldr r3,[r7,#8]
 659 004e 1343     	 orrs r3,r3,r2
 660 0050 BB60     	 str r3,[r7,#8]
 284:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LINE[reg_index] = reg;
 661              	 .loc 1 284 0
 662 0052 FB7B     	 ldrb r3,[r7,#15]
 663 0054 7A68     	 ldr r2,[r7,#4]
 664 0056 0433     	 adds r3,r3,#4
 665 0058 9B00     	 lsls r3,r3,#2
 666 005a 1344     	 add r3,r3,r2
 667 005c BA68     	 ldr r2,[r7,#8]
 668 005e 5A60     	 str r2,[r3,#4]
 285:../Libraries/XMCLib/src/xmc_ledts.c **** 
 286:../Libraries/XMCLib/src/xmc_ledts.c **** }
 669              	 .loc 1 286 0
 670 0060 1437     	 adds r7,r7,#20
 671              	.LCFI56:
 672              	 .cfi_def_cfa_offset 4
 673 0062 BD46     	 mov sp,r7
 674              	.LCFI57:
 675              	 .cfi_def_cfa_register 13
 676              	 
 677 0064 5DF8047B 	 ldr r7,[sp],#4
 678              	.LCFI58:
 679              	 .cfi_restore 7
 680              	 .cfi_def_cfa_offset 0
 681 0068 7047     	 bx lr
 682              	 .cfi_endproc
 683              	.LFE171:
 685 006a 00BF     	 .section .text.XMC_LEDTS_SetColumnBrightness,"ax",%progbits
 686              	 .align 2
 687              	 .global XMC_LEDTS_SetColumnBrightness
 688              	 .thumb
 689              	 .thumb_func
 691              	XMC_LEDTS_SetColumnBrightness:
 692              	.LFB172:
 287:../Libraries/XMCLib/src/xmc_ledts.c **** 
 288:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 289:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust brightness of an LED column in LED matrix
 290:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 291:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetColumnBrightness(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const u
 292:../Libraries/XMCLib/src/xmc_ledts.c **** {
 693              	 .loc 1 292 0
 694              	 .cfi_startproc
 695              	 
 696              	 
 697              	 
 698 0000 80B4     	 push {r7}
 699              	.LCFI59:
 700              	 .cfi_def_cfa_offset 4
 701              	 .cfi_offset 7,-4
 702 0002 85B0     	 sub sp,sp,#20
 703              	.LCFI60:
 704              	 .cfi_def_cfa_offset 24
 705 0004 00AF     	 add r7,sp,#0
 706              	.LCFI61:
 707              	 .cfi_def_cfa_register 7
 708 0006 7860     	 str r0,[r7,#4]
 709 0008 0B46     	 mov r3,r1
 710 000a FB70     	 strb r3,[r7,#3]
 711 000c 1346     	 mov r3,r2
 712 000e BB70     	 strb r3,[r7,#2]
 293:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 294:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 713              	 .loc 1 294 0
 714 0010 FB78     	 ldrb r3,[r7,#3]
 715 0012 9B08     	 lsrs r3,r3,#2
 716 0014 FB73     	 strb r3,[r7,#15]
 295:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 717              	 .loc 1 295 0
 718 0016 FB78     	 ldrb r3,[r7,#3]
 719 0018 03F00303 	 and r3,r3,#3
 720 001c DBB2     	 uxtb r3,r3
 721 001e DB00     	 lsls r3,r3,#3
 722 0020 BB73     	 strb r3,[r7,#14]
 296:../Libraries/XMCLib/src/xmc_ledts.c **** 
 297:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Column_Brightness:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(led
 298:../Libraries/XMCLib/src/xmc_ledts.c **** 
 299:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg = ledts->LDCMP[reg_index];
 723              	 .loc 1 299 0
 724 0022 FB7B     	 ldrb r3,[r7,#15]
 725 0024 7A68     	 ldr r2,[r7,#4]
 726 0026 0633     	 adds r3,r3,#6
 727 0028 9B00     	 lsls r3,r3,#2
 728 002a 1344     	 add r3,r3,r2
 729 002c 5B68     	 ldr r3,[r3,#4]
 730 002e BB60     	 str r3,[r7,#8]
 300:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg &= (~(0xff << bit_shift_count));
 731              	 .loc 1 300 0
 732 0030 BB7B     	 ldrb r3,[r7,#14]
 733 0032 FF22     	 movs r2,#255
 734 0034 02FA03F3 	 lsl r3,r2,r3
 735 0038 DB43     	 mvns r3,r3
 736 003a 1A46     	 mov r2,r3
 737 003c BB68     	 ldr r3,[r7,#8]
 738 003e 1340     	 ands r3,r3,r2
 739 0040 BB60     	 str r3,[r7,#8]
 301:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg |= brightness << bit_shift_count;
 740              	 .loc 1 301 0
 741 0042 BA78     	 ldrb r2,[r7,#2]
 742 0044 BB7B     	 ldrb r3,[r7,#14]
 743 0046 02FA03F3 	 lsl r3,r2,r3
 744 004a 1A46     	 mov r2,r3
 745 004c BB68     	 ldr r3,[r7,#8]
 746 004e 1343     	 orrs r3,r3,r2
 747 0050 BB60     	 str r3,[r7,#8]
 302:../Libraries/XMCLib/src/xmc_ledts.c **** 	ledts->LDCMP[reg_index] = reg;
 748              	 .loc 1 302 0
 749 0052 FB7B     	 ldrb r3,[r7,#15]
 750 0054 7A68     	 ldr r2,[r7,#4]
 751 0056 0633     	 adds r3,r3,#6
 752 0058 9B00     	 lsls r3,r3,#2
 753 005a 1344     	 add r3,r3,r2
 754 005c BA68     	 ldr r2,[r7,#8]
 755 005e 5A60     	 str r2,[r3,#4]
 303:../Libraries/XMCLib/src/xmc_ledts.c **** }
 756              	 .loc 1 303 0
 757 0060 1437     	 adds r7,r7,#20
 758              	.LCFI62:
 759              	 .cfi_def_cfa_offset 4
 760 0062 BD46     	 mov sp,r7
 761              	.LCFI63:
 762              	 .cfi_def_cfa_register 13
 763              	 
 764 0064 5DF8047B 	 ldr r7,[sp],#4
 765              	.LCFI64:
 766              	 .cfi_restore 7
 767              	 .cfi_def_cfa_offset 0
 768 0068 7047     	 bx lr
 769              	 .cfi_endproc
 770              	.LFE172:
 772 006a 00BF     	 .section .text.XMC_LEDTS_SetCommonOscillationWindow,"ax",%progbits
 773              	 .align 2
 774              	 .global XMC_LEDTS_SetCommonOscillationWindow
 775              	 .thumb
 776              	 .thumb_func
 778              	XMC_LEDTS_SetCommonOscillationWindow:
 779              	.LFB173:
 304:../Libraries/XMCLib/src/xmc_ledts.c **** 
 305:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 306:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to set common oscillation window size for touch-sense inputs
 307:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 308:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetCommonOscillationWindow(XMC_LEDTS_t *const ledts, const uint8_t common_size)
 309:../Libraries/XMCLib/src/xmc_ledts.c **** {
 780              	 .loc 1 309 0
 781              	 .cfi_startproc
 782              	 
 783              	 
 784              	 
 785 0000 80B4     	 push {r7}
 786              	.LCFI65:
 787              	 .cfi_def_cfa_offset 4
 788              	 .cfi_offset 7,-4
 789 0002 85B0     	 sub sp,sp,#20
 790              	.LCFI66:
 791              	 .cfi_def_cfa_offset 24
 792 0004 00AF     	 add r7,sp,#0
 793              	.LCFI67:
 794              	 .cfi_def_cfa_register 7
 795 0006 7860     	 str r0,[r7,#4]
 796 0008 0B46     	 mov r3,r1
 797 000a FB70     	 strb r3,[r7,#3]
 310:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 311:../Libraries/XMCLib/src/xmc_ledts.c **** 
 312:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Common_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL
 313:../Libraries/XMCLib/src/xmc_ledts.c **** 
 314:../Libraries/XMCLib/src/xmc_ledts.c ****   reg = ledts->LDCMP[1];
 798              	 .loc 1 314 0
 799 000c 7B68     	 ldr r3,[r7,#4]
 800 000e 1B6A     	 ldr r3,[r3,#32]
 801 0010 FB60     	 str r3,[r7,#12]
 315:../Libraries/XMCLib/src/xmc_ledts.c ****   reg &= ~LEDTS_LDCMP1_CMP_LDA_TSCOM_Msk;
 802              	 .loc 1 315 0
 803 0012 FB68     	 ldr r3,[r7,#12]
 804 0014 23F07F43 	 bic r3,r3,#-16777216
 805 0018 FB60     	 str r3,[r7,#12]
 316:../Libraries/XMCLib/src/xmc_ledts.c ****   reg |= (common_size << LEDTS_LDCMP1_CMP_LDA_TSCOM_Pos);
 806              	 .loc 1 316 0
 807 001a FB78     	 ldrb r3,[r7,#3]
 808 001c 1B06     	 lsls r3,r3,#24
 809 001e 1A46     	 mov r2,r3
 810 0020 FB68     	 ldr r3,[r7,#12]
 811 0022 1343     	 orrs r3,r3,r2
 812 0024 FB60     	 str r3,[r7,#12]
 317:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->LDCMP[1] = reg;
 813              	 .loc 1 317 0
 814 0026 7B68     	 ldr r3,[r7,#4]
 815 0028 FA68     	 ldr r2,[r7,#12]
 816 002a 1A62     	 str r2,[r3,#32]
 318:../Libraries/XMCLib/src/xmc_ledts.c **** }
 817              	 .loc 1 318 0
 818 002c 1437     	 adds r7,r7,#20
 819              	.LCFI68:
 820              	 .cfi_def_cfa_offset 4
 821 002e BD46     	 mov sp,r7
 822              	.LCFI69:
 823              	 .cfi_def_cfa_register 13
 824              	 
 825 0030 5DF8047B 	 ldr r7,[sp],#4
 826              	.LCFI70:
 827              	 .cfi_restore 7
 828              	 .cfi_def_cfa_offset 0
 829 0034 7047     	 bx lr
 830              	 .cfi_endproc
 831              	.LFE173:
 833 0036 00BF     	 .section .text.XMC_LEDTS_ReadFNCOL,"ax",%progbits
 834              	 .align 2
 835              	 .global XMC_LEDTS_ReadFNCOL
 836              	 .thumb
 837              	 .thumb_func
 839              	XMC_LEDTS_ReadFNCOL:
 840              	.LFB174:
 319:../Libraries/XMCLib/src/xmc_ledts.c **** 
 320:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 321:../Libraries/XMCLib/src/xmc_ledts.c ****   * Checking the previous active function or LED column status
 322:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 323:../Libraries/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadFNCOL(XMC_LEDTS_t *const ledts)
 324:../Libraries/XMCLib/src/xmc_ledts.c **** {
 841              	 .loc 1 324 0
 842              	 .cfi_startproc
 843              	 
 844              	 
 845              	 
 846 0000 80B4     	 push {r7}
 847              	.LCFI71:
 848              	 .cfi_def_cfa_offset 4
 849              	 .cfi_offset 7,-4
 850 0002 85B0     	 sub sp,sp,#20
 851              	.LCFI72:
 852              	 .cfi_def_cfa_offset 24
 853 0004 00AF     	 add r7,sp,#0
 854              	.LCFI73:
 855              	 .cfi_def_cfa_register 7
 856 0006 7860     	 str r0,[r7,#4]
 325:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t fncol_read;
 326:../Libraries/XMCLib/src/xmc_ledts.c **** 
 327:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_FNCOL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 328:../Libraries/XMCLib/src/xmc_ledts.c **** 
 329:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read = ledts->FNCTL & LEDTS_FNCTL_FNCOL_Msk;
 857              	 .loc 1 329 0
 858 0008 7B68     	 ldr r3,[r7,#4]
 859 000a 9B68     	 ldr r3,[r3,#8]
 860 000c 03F0E003 	 and r3,r3,#224
 861 0010 FB60     	 str r3,[r7,#12]
 330:../Libraries/XMCLib/src/xmc_ledts.c ****   fncol_read >>= LEDTS_FNCTL_FNCOL_Pos;
 862              	 .loc 1 330 0
 863 0012 FB68     	 ldr r3,[r7,#12]
 864 0014 5B09     	 lsrs r3,r3,#5
 865 0016 FB60     	 str r3,[r7,#12]
 331:../Libraries/XMCLib/src/xmc_ledts.c **** 
 332:../Libraries/XMCLib/src/xmc_ledts.c ****   return fncol_read;
 866              	 .loc 1 332 0
 867 0018 FB68     	 ldr r3,[r7,#12]
 333:../Libraries/XMCLib/src/xmc_ledts.c **** }
 868              	 .loc 1 333 0
 869 001a 1846     	 mov r0,r3
 870 001c 1437     	 adds r7,r7,#20
 871              	.LCFI74:
 872              	 .cfi_def_cfa_offset 4
 873 001e BD46     	 mov sp,r7
 874              	.LCFI75:
 875              	 .cfi_def_cfa_register 13
 876              	 
 877 0020 5DF8047B 	 ldr r7,[sp],#4
 878              	.LCFI76:
 879              	 .cfi_restore 7
 880              	 .cfi_def_cfa_offset 0
 881 0024 7047     	 bx lr
 882              	 .cfi_endproc
 883              	.LFE174:
 885 0026 00BF     	 .section .text.XMC_LEDTS_SetNumOfLEDColumns,"ax",%progbits
 886              	 .align 2
 887              	 .global XMC_LEDTS_SetNumOfLEDColumns
 888              	 .thumb
 889              	 .thumb_func
 891              	XMC_LEDTS_SetNumOfLEDColumns:
 892              	.LFB175:
 334:../Libraries/XMCLib/src/xmc_ledts.c **** 
 335:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 336:../Libraries/XMCLib/src/xmc_ledts.c ****   * Set the number of LED column Enabled
 337:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 338:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetNumOfLEDColumns(XMC_LEDTS_t *const ledts, uint8_t count)
 339:../Libraries/XMCLib/src/xmc_ledts.c **** {
 893              	 .loc 1 339 0
 894              	 .cfi_startproc
 895              	 
 896              	 
 897              	 
 898 0000 80B4     	 push {r7}
 899              	.LCFI77:
 900              	 .cfi_def_cfa_offset 4
 901              	 .cfi_offset 7,-4
 902 0002 83B0     	 sub sp,sp,#12
 903              	.LCFI78:
 904              	 .cfi_def_cfa_offset 16
 905 0004 00AF     	 add r7,sp,#0
 906              	.LCFI79:
 907              	 .cfi_def_cfa_register 7
 908 0006 7860     	 str r0,[r7,#4]
 909 0008 0B46     	 mov r3,r1
 910 000a FB70     	 strb r3,[r7,#3]
 340:../Libraries/XMCLib/src/xmc_ledts.c **** 
 341:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetNumOfLEDColumns:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 342:../Libraries/XMCLib/src/xmc_ledts.c **** 
 343:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_NR_LEDCOL_Msk);
 911              	 .loc 1 343 0
 912 000c 7B68     	 ldr r3,[r7,#4]
 913 000e 9B68     	 ldr r3,[r3,#8]
 914 0010 23F06042 	 bic r2,r3,#-536870912
 915 0014 7B68     	 ldr r3,[r7,#4]
 916 0016 9A60     	 str r2,[r3,#8]
 344:../Libraries/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (count << LEDTS_FNCTL_NR_LEDCOL_Pos);
 917              	 .loc 1 344 0
 918 0018 7B68     	 ldr r3,[r7,#4]
 919 001a 9B68     	 ldr r3,[r3,#8]
 920 001c FA78     	 ldrb r2,[r7,#3]
 921 001e 5207     	 lsls r2,r2,#29
 922 0020 1A43     	 orrs r2,r2,r3
 923 0022 7B68     	 ldr r3,[r7,#4]
 924 0024 9A60     	 str r2,[r3,#8]
 345:../Libraries/XMCLib/src/xmc_ledts.c **** }
 925              	 .loc 1 345 0
 926 0026 0C37     	 adds r7,r7,#12
 927              	.LCFI80:
 928              	 .cfi_def_cfa_offset 4
 929 0028 BD46     	 mov sp,r7
 930              	.LCFI81:
 931              	 .cfi_def_cfa_register 13
 932              	 
 933 002a 5DF8047B 	 ldr r7,[sp],#4
 934              	.LCFI82:
 935              	 .cfi_restore 7
 936              	 .cfi_def_cfa_offset 0
 937 002e 7047     	 bx lr
 938              	 .cfi_endproc
 939              	.LFE175:
 941              	 .section .text.XMC_LEDTS_ReadTSVAL,"ax",%progbits
 942              	 .align 2
 943              	 .global XMC_LEDTS_ReadTSVAL
 944              	 .thumb
 945              	 .thumb_func
 947              	XMC_LEDTS_ReadTSVAL:
 948              	.LFB176:
 346:../Libraries/XMCLib/src/xmc_ledts.c **** 
 347:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 348:../Libraries/XMCLib/src/xmc_ledts.c ****   * Reading recorded number of oscillation counts
 349:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 350:../Libraries/XMCLib/src/xmc_ledts.c **** uint16_t XMC_LEDTS_ReadTSVAL(XMC_LEDTS_t *const ledts)
 351:../Libraries/XMCLib/src/xmc_ledts.c **** {
 949              	 .loc 1 351 0
 950              	 .cfi_startproc
 951              	 
 952              	 
 953              	 
 954 0000 80B4     	 push {r7}
 955              	.LCFI83:
 956              	 .cfi_def_cfa_offset 4
 957              	 .cfi_offset 7,-4
 958 0002 85B0     	 sub sp,sp,#20
 959              	.LCFI84:
 960              	 .cfi_def_cfa_offset 24
 961 0004 00AF     	 add r7,sp,#0
 962              	.LCFI85:
 963              	 .cfi_def_cfa_register 7
 964 0006 7860     	 str r0,[r7,#4]
 352:../Libraries/XMCLib/src/xmc_ledts.c ****   uint16_t no_of_oscillations;
 353:../Libraries/XMCLib/src/xmc_ledts.c **** 
 354:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_TSVAL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 355:../Libraries/XMCLib/src/xmc_ledts.c **** 
 356:../Libraries/XMCLib/src/xmc_ledts.c ****   no_of_oscillations = (ledts->TSVAL & 0xFFFF);
 965              	 .loc 1 356 0
 966 0008 7B68     	 ldr r3,[r7,#4]
 967 000a 1B69     	 ldr r3,[r3,#16]
 968 000c FB81     	 strh r3,[r7,#14]
 357:../Libraries/XMCLib/src/xmc_ledts.c **** 
 358:../Libraries/XMCLib/src/xmc_ledts.c ****   return no_of_oscillations;
 969              	 .loc 1 358 0
 970 000e FB89     	 ldrh r3,[r7,#14]
 359:../Libraries/XMCLib/src/xmc_ledts.c **** }
 971              	 .loc 1 359 0
 972 0010 1846     	 mov r0,r3
 973 0012 1437     	 adds r7,r7,#20
 974              	.LCFI86:
 975              	 .cfi_def_cfa_offset 4
 976 0014 BD46     	 mov sp,r7
 977              	.LCFI87:
 978              	 .cfi_def_cfa_register 13
 979              	 
 980 0016 5DF8047B 	 ldr r7,[sp],#4
 981              	.LCFI88:
 982              	 .cfi_restore 7
 983              	 .cfi_def_cfa_offset 0
 984 001a 7047     	 bx lr
 985              	 .cfi_endproc
 986              	.LFE176:
 988              	 .section .text.XMC_LEDTS_SetOscillationWindow,"ax",%progbits
 989              	 .align 2
 990              	 .global XMC_LEDTS_SetOscillationWindow
 991              	 .thumb
 992              	 .thumb_func
 994              	XMC_LEDTS_SetOscillationWindow:
 995              	.LFB177:
 360:../Libraries/XMCLib/src/xmc_ledts.c **** 
 361:../Libraries/XMCLib/src/xmc_ledts.c **** /**
 362:../Libraries/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust the size of oscillation window
 363:../Libraries/XMCLib/src/xmc_ledts.c ****   */
 364:../Libraries/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetOscillationWindow(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t touchpad,
 365:../Libraries/XMCLib/src/xmc_ledts.c **** {
 996              	 .loc 1 365 0
 997              	 .cfi_startproc
 998              	 
 999              	 
 1000              	 
 1001 0000 80B4     	 push {r7}
 1002              	.LCFI89:
 1003              	 .cfi_def_cfa_offset 4
 1004              	 .cfi_offset 7,-4
 1005 0002 85B0     	 sub sp,sp,#20
 1006              	.LCFI90:
 1007              	 .cfi_def_cfa_offset 24
 1008 0004 00AF     	 add r7,sp,#0
 1009              	.LCFI91:
 1010              	 .cfi_def_cfa_register 7
 1011 0006 7860     	 str r0,[r7,#4]
 1012 0008 0B46     	 mov r3,r1
 1013 000a FB70     	 strb r3,[r7,#3]
 1014 000c 1346     	 mov r3,r2
 1015 000e BB70     	 strb r3,[r7,#2]
 366:../Libraries/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 367:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)touchpad) >> 2;
 1016              	 .loc 1 367 0
 1017 0010 FB78     	 ldrb r3,[r7,#3]
 1018 0012 9B08     	 lsrs r3,r3,#2
 1019 0014 FB73     	 strb r3,[r7,#15]
 368:../Libraries/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)touchpad & 0x03) * 8;
 1020              	 .loc 1 368 0
 1021 0016 FB78     	 ldrb r3,[r7,#3]
 1022 0018 03F00303 	 and r3,r3,#3
 1023 001c DBB2     	 uxtb r3,r3
 1024 001e DB00     	 lsls r3,r3,#3
 1025 0020 BB73     	 strb r3,[r7,#14]
 369:../Libraries/XMCLib/src/xmc_ledts.c **** 
 370:../Libraries/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(le
 371:../Libraries/XMCLib/src/xmc_ledts.c **** 
 372:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg = ledts->TSCMP[reg_index];
 1026              	 .loc 1 372 0
 1027 0022 FB7B     	 ldrb r3,[r7,#15]
 1028 0024 7A68     	 ldr r2,[r7,#4]
 1029 0026 0833     	 adds r3,r3,#8
 1030 0028 9B00     	 lsls r3,r3,#2
 1031 002a 1344     	 add r3,r3,r2
 1032 002c 5B68     	 ldr r3,[r3,#4]
 1033 002e BB60     	 str r3,[r7,#8]
 373:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg &= (~(0xff << bit_shift_count));
 1034              	 .loc 1 373 0
 1035 0030 BB7B     	 ldrb r3,[r7,#14]
 1036 0032 FF22     	 movs r2,#255
 1037 0034 02FA03F3 	 lsl r3,r2,r3
 1038 0038 DB43     	 mvns r3,r3
 1039 003a 1A46     	 mov r2,r3
 1040 003c BB68     	 ldr r3,[r7,#8]
 1041 003e 1340     	 ands r3,r3,r2
 1042 0040 BB60     	 str r3,[r7,#8]
 374:../Libraries/XMCLib/src/xmc_ledts.c **** 	reg |= size << bit_shift_count;
 1043              	 .loc 1 374 0
 1044 0042 BA78     	 ldrb r2,[r7,#2]
 1045 0044 BB7B     	 ldrb r3,[r7,#14]
 1046 0046 02FA03F3 	 lsl r3,r2,r3
 1047 004a 1A46     	 mov r2,r3
 1048 004c BB68     	 ldr r3,[r7,#8]
 1049 004e 1343     	 orrs r3,r3,r2
 1050 0050 BB60     	 str r3,[r7,#8]
 375:../Libraries/XMCLib/src/xmc_ledts.c **** 	ledts->TSCMP[reg_index] = reg;
 1051              	 .loc 1 375 0
 1052 0052 FB7B     	 ldrb r3,[r7,#15]
 1053 0054 7A68     	 ldr r2,[r7,#4]
 1054 0056 0833     	 adds r3,r3,#8
 1055 0058 9B00     	 lsls r3,r3,#2
 1056 005a 1344     	 add r3,r3,r2
 1057 005c BA68     	 ldr r2,[r7,#8]
 1058 005e 5A60     	 str r2,[r3,#4]
 376:../Libraries/XMCLib/src/xmc_ledts.c **** }
 1059              	 .loc 1 376 0
 1060 0060 1437     	 adds r7,r7,#20
 1061              	.LCFI92:
 1062              	 .cfi_def_cfa_offset 4
 1063 0062 BD46     	 mov sp,r7
 1064              	.LCFI93:
 1065              	 .cfi_def_cfa_register 13
 1066              	 
 1067 0064 5DF8047B 	 ldr r7,[sp],#4
 1068              	.LCFI94:
 1069              	 .cfi_restore 7
 1070              	 .cfi_def_cfa_offset 0
 1071 0068 7047     	 bx lr
 1072              	 .cfi_endproc
 1073              	.LFE177:
 1075 006a 00BF     	 .text
 1076              	.Letext0:
 1077              	 .file 2 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1078              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1079              	 .file 4 "E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Infineon/XMC4300_series/Include/XMC4300.h"
 1080              	 .file 5 "E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc/xmc4_scu.h"
 1081              	 .file 6 "E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc/xmc_ledts.h"
 1082              	 .file 7 "E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include/core_cm4.h"
 1083              	 .file 8 "E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Infineon/XMC4300_series/Include/system_XMC4300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ledts.c
    {standard input}:20     .text.XMC_LEDTS_InitGlobal:00000000 $t
    {standard input}:25     .text.XMC_LEDTS_InitGlobal:00000000 XMC_LEDTS_InitGlobal
    {standard input}:91     .text.XMC_LEDTS_InitGlobal:00000044 $d
    {standard input}:97     .text.XMC_LEDTS_InitLED:00000000 $t
    {standard input}:102    .text.XMC_LEDTS_InitLED:00000000 XMC_LEDTS_InitLED
    {standard input}:173    .text.XMC_LEDTS_InitTSBasic:00000000 $t
    {standard input}:178    .text.XMC_LEDTS_InitTSBasic:00000000 XMC_LEDTS_InitTSBasic
    {standard input}:252    .text.XMC_LEDTS_InitTSBasic:00000054 $d
    {standard input}:257    .text.XMC_LEDTS_InitTSAdvanced:00000000 $t
    {standard input}:262    .text.XMC_LEDTS_InitTSAdvanced:00000000 XMC_LEDTS_InitTSAdvanced
    {standard input}:348    .text.XMC_LEDTS_InitTSAdvanced:00000068 $d
    {standard input}:353    .text.XMC_LEDTS_StartCounter:00000000 $t
    {standard input}:358    .text.XMC_LEDTS_StartCounter:00000000 XMC_LEDTS_StartCounter
    {standard input}:403    .text.XMC_LEDTS_StopCounter:00000000 $t
    {standard input}:408    .text.XMC_LEDTS_StopCounter:00000000 XMC_LEDTS_StopCounter
    {standard input}:449    .text.XMC_LEDTS_ReadInterruptFlag:00000000 $t
    {standard input}:454    .text.XMC_LEDTS_ReadInterruptFlag:00000000 XMC_LEDTS_ReadInterruptFlag
    {standard input}:494    .text.XMC_LEDTS_SetActivePADNo:00000000 $t
    {standard input}:499    .text.XMC_LEDTS_SetActivePADNo:00000000 XMC_LEDTS_SetActivePADNo
    {standard input}:553    .text.XMC_LEDTS_ClearInterruptFlag:00000000 $t
    {standard input}:558    .text.XMC_LEDTS_ClearInterruptFlag:00000000 XMC_LEDTS_ClearInterruptFlag
    {standard input}:599    .text.XMC_LEDTS_SetLEDLinePattern:00000000 $t
    {standard input}:604    .text.XMC_LEDTS_SetLEDLinePattern:00000000 XMC_LEDTS_SetLEDLinePattern
    {standard input}:686    .text.XMC_LEDTS_SetColumnBrightness:00000000 $t
    {standard input}:691    .text.XMC_LEDTS_SetColumnBrightness:00000000 XMC_LEDTS_SetColumnBrightness
    {standard input}:773    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 $t
    {standard input}:778    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 XMC_LEDTS_SetCommonOscillationWindow
    {standard input}:834    .text.XMC_LEDTS_ReadFNCOL:00000000 $t
    {standard input}:839    .text.XMC_LEDTS_ReadFNCOL:00000000 XMC_LEDTS_ReadFNCOL
    {standard input}:886    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 $t
    {standard input}:891    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 XMC_LEDTS_SetNumOfLEDColumns
    {standard input}:942    .text.XMC_LEDTS_ReadTSVAL:00000000 $t
    {standard input}:947    .text.XMC_LEDTS_ReadTSVAL:00000000 XMC_LEDTS_ReadTSVAL
    {standard input}:989    .text.XMC_LEDTS_SetOscillationWindow:00000000 $t
    {standard input}:994    .text.XMC_LEDTS_SetOscillationWindow:00000000 XMC_LEDTS_SetOscillationWindow
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
