   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "ecatslv.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.NVIC_EnableIRQ,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	NVIC_EnableIRQ:
  25              	.LFB108:
  26              	 .file 1 "E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include/core_cm4.h"
   1:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**************************************************************************//**
   2:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  * @file     core_cm4.h
   3:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  * @version  V4.30
   5:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  * @date     20. October 2015
   6:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
   7:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
   9:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    All rights reserved.
  10:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****      to endorse or promote products derived from this software without
  19:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****      specific prior written permission.
  20:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    *
  21:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  34:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  35:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __ICCARM__ )
  36:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #endif
  40:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  41:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  44:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #include <stdint.h>
  45:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  46:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
  47:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
  48:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #endif
  49:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  50:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
  51:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  54:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  57:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****      Unions are used for effective representation of core registers.
  59:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  60:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
  63:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  64:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  65:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
  66:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  *                 CMSIS definitions
  67:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  68:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
  69:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup Cortex_M4
  70:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
  71:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
  72:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  73:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*  CMSIS CM4 definitions */
  74:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  79:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  81:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  82:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __CC_ARM )
  83:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  87:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  92:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
  93:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
  97:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
  98:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 102:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TMS470__ )
 103:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 106:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 107:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 111:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 112:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __packed
 113:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 116:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 117:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #else
 118:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #error Unknown compiler
 119:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #endif
 120:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 121:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** */
 124:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #if defined ( __CC_ARM )
 125:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 127:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 128:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #else
 129:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 131:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 132:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #else
 133:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 134:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 135:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 136:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 140:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #else
 141:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 143:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 144:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #else
 145:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 146:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 147:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 148:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
 149:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 152:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #else
 153:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 155:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 156:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #else
 157:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 158:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 159:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 160:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
 161:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARMVFP__
 162:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 164:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #else
 165:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 167:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 168:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #else
 169:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 170:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 171:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 172:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TMS470__ )
 173:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 176:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #else
 177:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 179:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 180:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #else
 181:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 182:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 183:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 184:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 185:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __FPU_VFP__
 186:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 188:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #else
 189:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 191:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 192:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #else
 193:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 194:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 195:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 196:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 197:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 200:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #else
 201:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 203:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 204:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #else
 205:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 206:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 207:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 208:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #endif
 209:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 210:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 214:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 215:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** }
 216:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #endif
 217:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 218:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 220:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 222:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 225:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 226:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
 227:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #endif
 228:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 229:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* check device defines and use defaults */
 230:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __CM4_REV
 232:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #define __CM4_REV               0x0000U
 233:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 235:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 236:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __FPU_PRESENT
 237:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_PRESENT             0U
 238:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 240:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 241:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __MPU_PRESENT
 242:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #define __MPU_PRESENT             0U
 243:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 245:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 246:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 247:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 250:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 251:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 255:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #endif
 256:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 257:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 259:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 261:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     \li to specify the access to peripheral variables.
 263:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** */
 265:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 266:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #else
 268:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #endif
 270:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 273:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* following defines should be used for structure members */
 274:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 278:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group Cortex_M4 */
 279:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 280:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 281:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 282:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
 283:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  *                 Register Abstraction
 284:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   Core Register contain:
 285:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register
 286:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Register
 287:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   - Core SCB Register
 288:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Register
 289:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Register
 290:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   - Core MPU Register
 291:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   - Core FPU Register
 292:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
 293:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 294:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** */
 297:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 298:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 299:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 300:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Core Register type definitions.
 302:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
 303:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 304:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 305:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 306:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 308:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 309:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
 310:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   struct
 311:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   {
 312:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 318:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** } APSR_Type;
 323:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 324:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* APSR Register Definitions */
 325:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 328:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 331:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 334:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 337:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 340:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 342:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 343:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 344:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 345:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 347:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 348:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
 349:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   struct
 350:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   {
 351:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 355:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** } IPSR_Type;
 356:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 357:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* IPSR Register Definitions */
 358:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 361:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 362:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 363:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 365:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 366:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
 367:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   struct
 368:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   {
 369:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 375:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** } xPSR_Type;
 383:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 384:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* xPSR Register Definitions */
 385:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 388:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 391:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 394:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 397:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 399:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 400:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 401:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 403:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 406:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 409:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 412:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 413:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 414:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 416:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 417:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
 418:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   struct
 419:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   {
 420:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** } CONTROL_Type;
 427:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 428:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* CONTROL Register Definitions */
 429:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 432:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 435:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 438:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 440:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 441:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 442:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 443:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
 446:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 447:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 448:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 449:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 451:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 452:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
 453:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[24U];
 455:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 456:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RSERVED1[24U];
 457:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 458:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[24U];
 459:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[24U];
 461:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[56U];
 463:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[644U];
 465:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** }  NVIC_Type;
 467:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 468:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 469:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 472:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 474:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 475:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 476:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 477:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
 480:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 481:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 482:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 483:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 485:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 486:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
 487:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 489:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[5U];
 507:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** } SCB_Type;
 509:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 510:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB CPUID Register Definitions */
 511:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 513:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 514:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 515:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 517:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 520:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 523:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 526:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 530:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 532:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 533:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 536:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 539:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 542:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 545:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 546:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 548:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 551:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 554:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 557:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 561:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 565:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 568:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 570:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 571:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 572:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 574:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 577:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 580:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 583:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Control Register Definitions */
 584:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 587:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 589:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 590:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 593:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 597:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 600:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 603:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 606:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 609:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 612:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 616:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 619:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 622:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 625:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 627:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 628:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 629:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 631:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 634:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 637:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 640:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 643:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 646:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 649:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 652:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 655:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 659:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 660:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 662:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 665:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 669:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 672:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 675:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 679:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 682:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 684:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 685:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 686:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 688:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 691:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 693:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 694:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 695:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 696:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 697:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
 699:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 700:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 701:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 702:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 703:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 704:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 705:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
 706:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 707:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** } SCnSCB_Type;
 710:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 711:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 715:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 717:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 719:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 722:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 725:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 728:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 731:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 733:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 734:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 735:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 736:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
 739:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 740:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 741:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 742:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 743:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 744:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 745:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
 746:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** } SysTick_Type;
 751:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 752:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 754:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 756:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 759:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 760:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 762:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 765:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Reload Register Definitions */
 766:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 769:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Current Register Definitions */
 770:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 773:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Calibration Register Definitions */
 774:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 777:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 780:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 783:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 785:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 786:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 787:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 788:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
 791:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 792:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 793:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 794:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 796:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 797:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
 798:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __OM  union
 799:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   {
 800:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[864U];
 805:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[15U];
 807:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[15U];
 809:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[29U];
 811:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[43U];
 815:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 817:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[6U];
 818:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** } ITM_Type;
 831:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 832:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 836:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 840:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 843:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 846:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 849:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 852:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 855:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 857:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 858:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 861:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 864:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 868:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 872:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 874:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 876:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 880:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 883:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 886:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 888:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 889:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 890:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 891:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
 894:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 895:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 896:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
 897:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
 899:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 900:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
 901:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 913:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[1U];
 917:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[1U];
 921:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** } DWT_Type;
 925:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 926:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Control Register Definitions */
 927:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 930:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 933:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 936:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 939:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 942:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 945:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 948:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 951:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 954:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 957:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 960:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 963:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 966:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 969:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 972:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 975:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 978:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 981:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 985:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 989:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 993:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
 997:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1001:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1005:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1009:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1012:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1015:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1018:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1021:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1024:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1027:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1030:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1033:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1035:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1036:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1037:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1038:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
1041:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1042:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1043:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1044:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1046:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1047:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
1048:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[2U];
1051:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[55U];
1053:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[131U];
1055:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[759U];
1059:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[1U];
1063:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[39U];
1067:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED7[8U];
1070:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** } TPI_Type;
1073:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1074:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1078:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1082:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1086:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1089:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1092:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1095:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1099:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1102:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1106:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1110:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1113:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1116:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1119:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1122:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1125:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1128:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1132:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1136:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1139:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1140:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1142:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1145:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1148:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1151:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1153:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1154:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1158:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1159:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1162:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVID Register Definitions */
1163:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1166:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1169:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1172:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1173:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1175:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1178:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1181:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1185:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1188:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1190:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1191:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1193:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1194:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
1197:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1198:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1199:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1200:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1202:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1203:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
1204:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1210:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** } MPU_Type;
1216:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1217:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Type Register Definitions */
1218:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1221:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1224:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1227:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Control Register Definitions */
1228:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1230:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1231:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1234:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1237:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Number Register Definitions */
1238:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1241:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1245:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1248:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1251:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1254:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1255:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1256:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1258:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1261:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1264:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1267:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1270:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1273:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1276:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1279:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1282:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #endif
1284:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1285:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1286:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #if (__FPU_PRESENT == 1U)
1287:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1288:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1289:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
1292:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1293:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1294:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1295:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1297:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1298:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
1299:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
1300:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** } FPU_Type;
1306:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1307:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1311:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1313:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1314:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1317:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1320:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1323:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1324:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1326:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1329:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1330:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1332:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1335:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1339:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1343:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1344:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1346:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1349:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1352:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1356:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1359:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1362:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1365:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1368:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1370:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1371:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1374:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1377:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1381:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1384:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1387:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1390:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #endif
1392:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1393:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1394:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1395:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1396:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
1399:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1400:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1401:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1402:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1404:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1405:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
1406:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** } CoreDebug_Type;
1411:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1412:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1416:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1419:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1422:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1425:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1427:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1428:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1431:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1434:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1437:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1438:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1440:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1443:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1444:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1446:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1449:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1453:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1456:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1458:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1460:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1463:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1466:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1469:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1472:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1475:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1478:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1481:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1482:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1484:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1487:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1490:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1493:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1495:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1496:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1498:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1499:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1500:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1501:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
1504:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1505:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1506:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1507:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of the bit field.
1510:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted value.
1511:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** */
1512:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1514:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1515:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of register.
1518:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted bit field value.
1519:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** */
1520:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1522:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1524:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1525:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1526:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1527:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
1530:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1531:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1532:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1539:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1541:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1542:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1551:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #if (__MPU_PRESENT == 1U)
1552:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #endif
1555:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1556:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1558:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** #endif
1560:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1561:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*@} */
1562:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1563:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1564:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1565:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
1566:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  *                Hardware Abstraction Layer
1567:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   Core Function Interface contains:
1568:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Functions
1569:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Functions
1570:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Functions
1571:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register Access Functions
1572:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
1573:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1574:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** */
1576:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1577:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1578:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1579:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1581:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   @{
1585:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1586:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1587:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1588:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Priority Grouping
1589:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****            Only values from 0..7 are used.
1592:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1593:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1596:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1597:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
1598:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t reg_value;
1599:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1600:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1601:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1602:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1603:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  (reg_value                                   |
1604:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1606:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   SCB->AIRCR =  reg_value;
1607:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** }
1608:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1609:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1610:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1611:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Priority Grouping
1612:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1613:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1615:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1616:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
1617:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1618:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** }
1619:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1620:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1621:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1622:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Enable External Interrupt
1623:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1626:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
  27              	 .loc 1 1627 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 0346     	 mov r3,r0
  43 0008 FB71     	 strb r3,[r7,#7]
1628:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
  44              	 .loc 1 1628 0
  45 000a 0849     	 ldr r1,.L2
  46 000c 97F90730 	 ldrsb r3,[r7,#7]
  47 0010 5B09     	 lsrs r3,r3,#5
  48 0012 FA79     	 ldrb r2,[r7,#7]
  49 0014 02F01F02 	 and r2,r2,#31
  50 0018 0120     	 movs r0,#1
  51 001a 00FA02F2 	 lsl r2,r0,r2
  52 001e 41F82320 	 str r2,[r1,r3,lsl#2]
1629:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** }
  53              	 .loc 1 1629 0
  54 0022 0C37     	 adds r7,r7,#12
  55              	.LCFI3:
  56              	 .cfi_def_cfa_offset 4
  57 0024 BD46     	 mov sp,r7
  58              	.LCFI4:
  59              	 .cfi_def_cfa_register 13
  60              	 
  61 0026 5DF8047B 	 ldr r7,[sp],#4
  62              	.LCFI5:
  63              	 .cfi_restore 7
  64              	 .cfi_def_cfa_offset 0
  65 002a 7047     	 bx lr
  66              	.L3:
  67              	 .align 2
  68              	.L2:
  69 002c 00E100E0 	 .word -536813312
  70              	 .cfi_endproc
  71              	.LFE108:
  73              	 .section .text.NVIC_DisableIRQ,"ax",%progbits
  74              	 .align 2
  75              	 .thumb
  76              	 .thumb_func
  78              	NVIC_DisableIRQ:
  79              	.LFB109:
1630:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1631:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** 
1632:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** /**
1633:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Disable External Interrupt
1634:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1635:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1636:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****  */
1637:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1638:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** {
  80              	 .loc 1 1638 0
  81              	 .cfi_startproc
  82              	 
  83              	 
  84              	 
  85 0000 80B4     	 push {r7}
  86              	.LCFI6:
  87              	 .cfi_def_cfa_offset 4
  88              	 .cfi_offset 7,-4
  89 0002 83B0     	 sub sp,sp,#12
  90              	.LCFI7:
  91              	 .cfi_def_cfa_offset 16
  92 0004 00AF     	 add r7,sp,#0
  93              	.LCFI8:
  94              	 .cfi_def_cfa_register 7
  95 0006 0346     	 mov r3,r0
  96 0008 FB71     	 strb r3,[r7,#7]
1639:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
  97              	 .loc 1 1639 0
  98 000a 0949     	 ldr r1,.L5
  99 000c 97F90730 	 ldrsb r3,[r7,#7]
 100 0010 5B09     	 lsrs r3,r3,#5
 101 0012 FA79     	 ldrb r2,[r7,#7]
 102 0014 02F01F02 	 and r2,r2,#31
 103 0018 0120     	 movs r0,#1
 104 001a 00FA02F2 	 lsl r2,r0,r2
 105 001e 2033     	 adds r3,r3,#32
 106 0020 41F82320 	 str r2,[r1,r3,lsl#2]
1640:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include\core_cm4.h **** }
 107              	 .loc 1 1640 0
 108 0024 0C37     	 adds r7,r7,#12
 109              	.LCFI9:
 110              	 .cfi_def_cfa_offset 4
 111 0026 BD46     	 mov sp,r7
 112              	.LCFI10:
 113              	 .cfi_def_cfa_register 13
 114              	 
 115 0028 5DF8047B 	 ldr r7,[sp],#4
 116              	.LCFI11:
 117              	 .cfi_restore 7
 118              	 .cfi_def_cfa_offset 0
 119 002c 7047     	 bx lr
 120              	.L6:
 121 002e 00BF     	 .align 2
 122              	.L5:
 123 0030 00E100E0 	 .word -536813312
 124              	 .cfi_endproc
 125              	.LFE109:
 127              	 .section .text.XMC_ECAT_GetALEventRegister,"ax",%progbits
 128              	 .align 2
 129              	 .thumb
 130              	 .thumb_func
 132              	XMC_ECAT_GetALEventRegister:
 133              	.LFB129:
 134              	 .file 2 "E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc/xmc_ecat.h"
   1:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
   2:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
   3:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @file xmc_ecat.h
   4:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @date 2015-12-27
   5:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
   6:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @cond
   7:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
   8:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   9:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  10:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  11:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * All rights reserved.                        
  12:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                             
  13:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * following conditions are met:   
  15:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                                                              
  16:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * disclaimer.                        
  18:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * 
  19:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * 
  22:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * products derived from this software without specific prior written permission.                  
  24:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                                                              
  25:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *                                                                              
  33:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  36:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  37:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Change History
  38:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * --------------
  39:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  40:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * 2015-12-27:
  41:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *     - Initial Version<br>
  42:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  43:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @endcond
  44:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  45:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
  46:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
  47:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @addtogroup XMClib XMC Peripheral Library
  48:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @{
  49:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  50:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
  51:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
  52:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @addtogroup ECAT
  53:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @brief EtherCAT Low level driver for XMC4800/XMC4300 series.
  54:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  55:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * EtherCAT is an Ethernet-based fieldbus system.
  56:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * The EtherCAT Slave Controller (ECAT) read the data addressed to them while the telegram passes t
  57:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * An EtherCAT Slave Controller (ESC) takes care of the EtherCAT communication as an interface betw
  58:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * fieldbus and the slave application. EtherCAT uses standard IEEE 802.3 Ethernet frames, thus a st
  59:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * controller can be used and no special hardware is required on master side. EtherCAT has a reserv
  60:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * 0x88A4 that distinguishes it from other Ethernet frames. Thus, EtherCAT can run in parallel to o
  61:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * protocols. EtherCAT does not require the IP protocol, however it can be encapsulated in IP/UDP. 
  62:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Slave Controller processes the frame in hardware. Thus, communication performance is independent
  63:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * power.
  64:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
  65:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * The XMC_ECAT low level driver provides functions to configure and initialize the ECAT hardware p
  66:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * For EHTERCAT stack integration, the necessary hardware accees layer APIs shall be explicitly imp
  67:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * upon the stack provider. The XMC_ECAT lld layer provides only the hardware initialization functi
  68:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * basic functionalities.
  69:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @{
  70:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  71:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
  72:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #ifndef XMC_ECAT_H
  73:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #define XMC_ECAT_H
  74:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
  75:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
  76:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * HEADER FILES
  77:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  78:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
  79:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #include "xmc_common.h"
  80:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
  81:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #if defined (ECAT0)
  82:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
  83:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #include "xmc_ecat_map.h"
  84:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
  85:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
  86:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * MACROS
  87:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  88:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
  89:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
  90:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * ENUMS
  91:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
  92:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
  93:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
  94:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * ECAT status return values
  95:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
  96:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** typedef enum XMC_ECAT_STATUS
  97:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** {
  98:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_STATUS_OK    = 0U, /**< Driver accepted application request */
  99:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_STATUS_BUSY  = 1U, /**< Driver is busy and cannot handle request */
 100:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_STATUS_ERROR = 2U  /**< Driver could not fulfil application request */
 101:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_STATUS_t;
 102:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 103:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 104:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * EtherCAT event enumeration types
 105:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 106:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** typedef enum XMC_ECAT_EVENT
 107:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** {
 108:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_AL_CONTROL = ECAT_AL_EVENT_MASK_AL_CE_MASK_Msk, /**< Application control event mas
 109:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_DC_LATCH = ECAT_AL_EVENT_MASK_DC_LE_MASK_Msk,  /**< Distributed Clock latch event 
 110:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_DC_SYNC0 = ECAT_AL_EVENT_MASK_ST_S0_MASK_Msk, /**< State of distributed clock sync
 111:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_DC_SYNC1 = ECAT_AL_EVENT_MASK_ST_S1_MASK_Msk, /**< State of distributed clock sync
 112:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM_ACTIVATION_REGISTER = ECAT_AL_EVENT_MASK_SM_A_MASK_Msk, /**< SyncManager activa
 113:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_EEPROM = ECAT_AL_EVENT_MASK_EEP_E_MASK_Msk, /**< EEPROM Emulation event mask*/
 114:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_WATCHDOG = ECAT_AL_EVENT_MASK_WP_D_MASK_Msk, /**< WATCHDOG process data event mask
 115:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM0 = ECAT_AL_EVENT_MASK_SMI_0_MASK_Msk, /**< Sync Manager 0 event mask*/
 116:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM1 = ECAT_AL_EVENT_MASK_SMI_1_MASK_Msk, /**< Sync Manager 1 event mask*/
 117:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM2 = ECAT_AL_EVENT_MASK_SMI_2_MASK_Msk, /**< Sync Manager 2 event mask*/
 118:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM3 = ECAT_AL_EVENT_MASK_SMI_3_MASK_Msk, /**< Sync Manager 3 event mask*/
 119:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM4 = ECAT_AL_EVENT_MASK_SMI_4_MASK_Msk, /**< Sync Manager 4 event mask*/
 120:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM5 = ECAT_AL_EVENT_MASK_SMI_5_MASK_Msk, /**< Sync Manager 5 event mask*/
 121:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM6 = ECAT_AL_EVENT_MASK_SMI_6_MASK_Msk, /**< Sync Manager 6 event mask*/
 122:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   XMC_ECAT_EVENT_SM7 = ECAT_AL_EVENT_MASK_SMI_7_MASK_Msk  /**< Sync Manager 7 event mask*/
 123:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_EVENT_t;
 124:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 125:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
 126:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * DATA STRUCTURES
 127:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
 128:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 129:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /* Anonymous structure/union guard start */
 130:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #if defined (__CC_ARM)
 131:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma push
 132:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma anon_unions
 133:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #elif defined (__TASKING__)
 134:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma warning 586
 135:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #endif
 136:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 137:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 138:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * ECAT port control data structure
 139:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 140:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** typedef struct XMC_ECAT_PORT_CTRL
 141:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** {
 142:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   union 
 143:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   {
 144:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     struct
 145:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     {
 146:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t enable_rstreq: 1;     /**< Master can trigger a reset of the XMC4700 / XMC4800 (::bo
 147:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 7;                   /**< Reserved bits */
 148:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t latch_input0: 2;      /**< Latch input 0 selection (::XMC_ECAT_PORT_LATCHIN0_t) */
 149:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;                   /**< Reserved bits */
 150:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t latch_input1: 2;      /**< Latch input 1 selection (::XMC_ECAT_PORT_LATCHIN1_t) */
 151:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;                   /**< Reserved bits */
 152:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t phyaddr_offset: 5;    /**< Ethernet PHY address offset, address of port 0 */
 153:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 1;                   /**< Reserved bits */
 154:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t mdio: 2;              /**< Bidirectional, push-pull management data I/O line (::XMC_
 155:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 8;                   /**< Reserved bits */
 156:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     };
 157:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 158:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t raw;
 159:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   } common;
 160:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 161:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   union 
 162:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   {  
 163:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     struct
 164:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     {
 165:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd0: 2;     /**< Receive data bit 0 (::XMC_ECAT_PORT0_CTRL_RXD0_t) */
 166:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd1: 2;     /**< Receive data bit 1 (::XMC_ECAT_PORT0_CTRL_RXD1_t) */
 167:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd2: 2;     /**< Receive data bit 2 (::XMC_ECAT_PORT0_CTRL_RXD2_t) */
 168:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd3: 2;     /**< Receive data bit 3 (::XMC_ECAT_PORT0_CTRL_RXD3_t) */
 169:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_err: 2;   /**< RX Error (::XMC_ECAT_PORT0_CTRL_RX_ERR_t) */
 170:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_dv: 2;    /**< RX Data valid (::XMC_ECAT_PORT0_CTRL_RX_DV_t) */
 171:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_clk: 2;   /**< RX Clock (::XMC_ECAT_PORT0_CTRL_RX_CLK_t) */
 172:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;          /**< Reserved bits */
 173:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t link: 2;     /**< Link status (::XMC_ECAT_PORT0_CTRL_LINK_t) */
 174:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 10;         /**< Reserved bits */
 175:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_clk: 2;   /**< TX Clock (::XMC_ECAT_PORT0_CTRL_TX_CLK_t) */
 176:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_shift: 2; /**< TX signal delay (::XMC_ECAT_PORT0_CTRL_TX_SHIFT_t) */
 177:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     };
 178:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 179:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t raw;
 180:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   } port0;
 181:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 182:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   union 
 183:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   {      
 184:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     struct
 185:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     {
 186:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd0: 2;     /**< Receive data bit 0 (::XMC_ECAT_PORT_CTRL_RXD0_t) */
 187:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd1: 2;     /**< Receive data bit 1 (::XMC_ECAT_PORT_CTRL_RXD1_t) */
 188:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd2: 2;     /**< Receive data bit 2 (::XMC_ECAT_PORT_CTRL_RXD2_t) */
 189:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rxd3: 2;     /**< Receive data bit 3 (::XMC_ECAT_PORT_CTRL_RXD3_t) */
 190:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_err: 2;   /**< RX Error (::XMC_ECAT_PORT_CTRL_RX_ERR_t) */
 191:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_dv: 2;    /**< RX Data valid (::XMC_ECAT_PORT_CTRL_RX_DV_t) */
 192:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t rx_clk: 2;   /**< RX Clock (::XMC_ECAT_PORT_CTRL_RX_CLK_t) */
 193:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 2;          /**< Reserved bits */
 194:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t link: 2;     /**< Link status (::XMC_ECAT_PORT_CTRL_LINK_t) */
 195:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t: 10;         /**< Reserved bits */
 196:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_clk: 2;   /**< TX Clock (::XMC_ECAT_PORT_CTRL_TX_CLK_t) */
 197:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****       uint32_t tx_shift: 2; /**< TX signal delay (::XMC_ECAT_PORT1_CTRL_TX_SHIFT_t) */
 198:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     };
 199:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 200:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t raw;
 201:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   } port1;
 202:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   
 203:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_PORT_CTRL_t;
 204:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 205:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 206:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * ECAT EEPROM configuration area data structure
 207:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 208:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** typedef union XMC_ECAT_CONFIG
 209:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** {
 210:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   struct
 211:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   {
 212:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 8;
 213:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 214:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 2;
 215:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_dc_sync_out : 1;
 216:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_dc_latch_in : 1;
 217:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_enhanced_link_p0 : 1;
 218:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t enable_enhanced_link_p1 : 1;
 219:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 2;
 220:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 221:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 16;
 222:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 223:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t sync_pulse_length; /**< Initialization value for Pulse Length of SYNC Signals register
 224:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 225:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint32_t : 16;
 226:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 227:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t station_alias; /**< Initialization value for Configured Station Alias Address register
 228:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 229:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t : 16;
 230:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 231:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t : 16;
 232:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 233:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****     uint16_t checksum;
 234:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   };
 235:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 236:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   uint32_t dword[4]; /**< Four 32 bit double word equivalent to 8 16 bit configuration area word. *
 237:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** } XMC_ECAT_CONFIG_t;
 238:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 239:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /* Anonymous structure/union guard end */
 240:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #if defined (__CC_ARM)
 241:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma pop
 242:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #elif defined (__TASKING__)
 243:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #pragma warning restore
 244:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #endif
 245:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 246:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**************************************************************************************************
 247:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * API PROTOTYPES
 248:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  **************************************************************************************************
 249:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 250:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #ifdef __cplusplus
 251:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** extern "C" {
 252:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** #endif
 253:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 254:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 255:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param config XMC_ECAT_CONFIG_t
 256:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return XMC_ECAT_STATUS_t ECAT Initialization status
 257:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 258:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 259:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Initialize the Ethernet MAC peripheral <br>
 260:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 261:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 262:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function sets the link speed, applies the duplex mode, sets auto-negotiation
 263:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * and loop-back settings.
 264:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 265:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_Init(XMC_ECAT_CONFIG_t *const config);
 266:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 267:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 268:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param None
 269:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 270:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 271:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 272:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Enable the EtherCAT peripheral <br>
 273:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 274:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 275:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function de-asserts the peripheral reset.
 276:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 277:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_Enable(void);
 278:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 279:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 280:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param None
 281:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 282:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 283:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 284:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Disable the EtherCAT peripheral <br>
 285:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 286:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 287:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function asserts the peripheral reset.
 288:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 289:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_Disable(void);
 290:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 291:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 292:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param phy_addr PHY address
 293:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param reg_addr Register address
 294:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param data The destination to which the read data needs to be copied to.
 295:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 296:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return XMC_ECAT_STATUS_t EtherCAT Read PHY API return status
 297:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 298:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 299:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Read a PHY register <br>
 300:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 301:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 302:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function reads a PHY register. It essentially polls busy bit during max
 303:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * PHY_TIMEOUT time and reads the information into 'data' when not busy.
 304:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 305:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** XMC_ECAT_STATUS_t XMC_ECAT_ReadPhy(uint8_t phy_addr, uint8_t reg_addr, uint16_t *data);
 306:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 307:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 308:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param phy_addr PHY address
 309:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param reg_addr Register address
 310:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param data The data to write
 311:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return XMC_ECAT_STATUS_t EtherCAT Write PHY API return status
 312:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 313:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 314:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Write a PHY register <br>
 315:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 316:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 317:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function reads a PHY register. It essentially writes the data and polls
 318:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * the busy bit until it is no longer busy.
 319:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 320:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** XMC_ECAT_STATUS_t XMC_ECAT_WritePhy(uint8_t phy_addr, uint8_t reg_addr, uint16_t data);
 321:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 322:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 323:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param port_ctrl Port control configuration
 324:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 325:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 326:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 327:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Set port control configuration <br>
 328:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 329:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 330:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function sets the port control by writing the configuration into the ECAT CON register.
 331:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 332:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 333:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** __STATIC_INLINE void XMC_ECAT_SetPortControl(const XMC_ECAT_PORT_CTRL_t port_ctrl)
 334:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** {
 335:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   ECAT0_CON->CON = (uint32_t)port_ctrl.common.raw;
 336:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   ECAT0_CON->CONP0 = (uint32_t)port_ctrl.port0.raw;
 337:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   ECAT0_CON->CONP1 = (uint32_t)port_ctrl.port1.raw;
 338:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** }
 339:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 340:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 341:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param event Single or logically OR'd events specified in the enum type @refXMC_ECAT_EVENT_t
 342:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 343:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 344:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 345:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Enable ECAT event(s) <br>
 346:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 347:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 348:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function can be used to enable ECAT event(s).
 349:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 350:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_EnableEvent(uint32_t event);
 351:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 352:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 353:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param event Single or logically OR'd events specified in the enum type @refXMC_ECAT_EVENT_t
 354:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 355:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 356:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 357:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Disable an ECAT event(s) <br>
 358:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 359:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 360:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function can be used to disable ECAT event(s).
 361:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 362:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_DisableEvent(uint32_t event);
 363:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 364:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 365:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param None
 366:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return uint32_t Event status
 367:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 368:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 369:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Get event status <br>
 370:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 371:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 372:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * The function returns the ECAT status and interrupt status as a single word. The user
 373:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * can then check the status of the events by using an appropriate mask.
 374:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 375:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** uint32_t XMC_ECAT_GetEventStatus(void);
 376:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 377:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 378:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 379:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param channel SyncManager channel number.
 380:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 381:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 382:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 383:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Disables selected SyncManager channel <br>
 384:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 385:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 386:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Sets bit 0 of the corresponding 0x807 register.
 387:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 388:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_DisableSyncManChannel(const uint8_t channel);
 389:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 390:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 391:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param channel SyncManager channel number.
 392:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return None
 393:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 394:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 395:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Enables selected SyncManager channel <br>
 396:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 397:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 398:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Resets bit 0 of the corresponding 0x807 register.
 399:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 400:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** void XMC_ECAT_EnableSyncManChannel(const uint8_t channel);
 401:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** 
 402:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** /**
 403:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @param None
 404:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * @return uint16_t Content of register 0x220-0x221
 405:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 406:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par<b>Description: </b><br>
 407:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Get content of AL event register <br>
 408:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  *
 409:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * \par
 410:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  * Get the first two bytes of the AL Event register (0x220-0x221).
 411:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****  */
 412:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** __STATIC_INLINE uint16_t XMC_ECAT_GetALEventRegister(void)
 413:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** {
 135              	 .loc 2 413 0
 136              	 .cfi_startproc
 137              	 
 138              	 
 139              	 
 140 0000 80B4     	 push {r7}
 141              	.LCFI12:
 142              	 .cfi_def_cfa_offset 4
 143              	 .cfi_offset 7,-4
 144 0002 00AF     	 add r7,sp,#0
 145              	.LCFI13:
 146              	 .cfi_def_cfa_register 7
 414:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h ****   return ((uint16_t)ECAT0->AL_EVENT_REQ);
 147              	 .loc 2 414 0
 148 0004 044B     	 ldr r3,.L9
 149 0006 D3F82032 	 ldr r3,[r3,#544]
 150 000a 9BB2     	 uxth r3,r3
 415:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc\xmc_ecat.h **** }
 151              	 .loc 2 415 0
 152 000c 1846     	 mov r0,r3
 153 000e BD46     	 mov sp,r7
 154              	.LCFI14:
 155              	 .cfi_def_cfa_register 13
 156              	 
 157 0010 5DF8047B 	 ldr r7,[sp],#4
 158              	.LCFI15:
 159              	 .cfi_restore 7
 160              	 .cfi_def_cfa_offset 0
 161 0014 7047     	 bx lr
 162              	.L10:
 163 0016 00BF     	 .align 2
 164              	.L9:
 165 0018 00000154 	 .word 1409351680
 166              	 .cfi_endproc
 167              	.LFE129:
 169              	 .section .text.HW_EscRead,"ax",%progbits
 170              	 .align 2
 171              	 .thumb
 172              	 .thumb_func
 174              	HW_EscRead:
 175              	.LFB162:
 176              	 .file 3 "E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC/xmc_eschw.h"
   1:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
   2:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @file xmc_eschw.h
   3:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @date 2015-02-05
   4:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
   5:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * NOTE:
   6:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * This file is copied by DAVE. Any manual modification done to this file will be lost when the cod
   7:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
   8:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @cond
   9:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  **************************************************************************************************
  10:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * ECAT_SSC v4.0.6 - ECAT_SSC APP initializes the XMC ESC and sets up the interface for Beckhoff Et
  11:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  12:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Copyright (c) 2016, Infineon Technologies AG
  13:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * All rights reserved.
  14:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  15:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * following conditions are met:
  17:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  18:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   disclaimer.
  20:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  21:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.
  23:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  24:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *   products derived from this software without specific prior written permission.
  26:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  27:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  35:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  **************************************************************************************************
  38:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  39:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Change History
  40:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * --------------
  41:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  42:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * 2016-02-05:
  43:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *     - Initial version
  44:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  45:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @endcond
  46:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
  47:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
  48:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  49:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #ifndef XMC_ESCHW_H
  50:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define XMC_ESCHW_H
  51:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  52:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**************************************************************************************************
  53:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * HEADER FILES
  54:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  **************************************************************************************************
  55:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #include "SSC/Src/esc.h"
  56:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #include "xmc_ecat.h"
  57:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #include "../E_EEPROM_XMC4/e_eeprom_xmc4.h"
  58:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  59:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  /*************************************************************************************************
  60:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   * MACROS
  61:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   *************************************************************************************************
  62:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  63:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define ECAT_TIMER_INC_P_MS (1U) /**< Timer increment value */
  64:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  65:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define pEsc ((uint8_t *)ECAT0)  /**< EtherCAT module address */
  66:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  67:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** extern uint8_t aEepromData[];
  68:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  69:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**************************************************************************************************
  70:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * API Prototypes
  71:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  **************************************************************************************************
  72:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  73:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #ifdef __cplusplus
  74:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** extern "C" {
  75:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #endif
  76:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  77:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
  78:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @ingroup ECAT_SSC_apidoc
  79:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @{
  80:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
  81:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  82:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadDWord(DWordValue, Address)     ((DWordValue) = (UINT32)(((volatile UINT32 *)pEsc)
  83:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  84:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadDWordIsr(DWordValue, Address)  HW_EscReadDWord(DWordValue, Address)              
  85:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  86:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadWord(WordValue, Address)       ((WordValue) = (((volatile UINT16 *)pEsc)[((Addres
  87:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  88:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadWordIsr(WordValue, Address)    HW_EscReadWord(WordValue, Address)                
  89:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  90:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadByte(ByteValue, Address)       ((ByteValue) = (((volatile UINT8 *)pEsc)[(Address)
  91:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  92:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscReadByteIsr(ByteValue, Address)    HW_EscReadByte(ByteValue, Address)                
  93:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  94:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteDWord(DWordValue, Address)    ((((volatile UINT32 *)pEsc)[(Address>>2)]) = (DWor
  95:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  96:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteDWordIsr(DWordValue, Address) HW_EscWriteWord(DWordValue, Address)              
  97:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
  98:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteWord(WordValue, Address)      ((((volatile UINT16 *)pEsc)[((Address)>>1)]) = (Wo
  99:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 100:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteWordIsr(WordValue, Address)   HW_EscWriteWord(WordValue, Address)               
 101:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 102:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteByte(ByteValue, Address)      ((((volatile UINT8 *)pEsc)[(Address)]) = (ByteValu
 103:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 104:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** #define HW_EscWriteByteIsr(ByteValue, Address)   HW_EscWriteByte(ByteValue, Address)               
 105:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 106:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 107:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief 16Bit ESC read access
 108:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 109:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local destination buffer.
 110:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 111:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 112:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 113:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 114:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 115:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 116:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 117:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Reads from the EtherCAT Slave Controller. This function is used to access ESC registers and the 
 118:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 119:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 120:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscRead(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 121:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 177              	 .loc 3 121 0
 178              	 .cfi_startproc
 179              	 
 180              	 
 181 0000 80B5     	 push {r7,lr}
 182              	.LCFI16:
 183              	 .cfi_def_cfa_offset 8
 184              	 .cfi_offset 7,-8
 185              	 .cfi_offset 14,-4
 186 0002 82B0     	 sub sp,sp,#8
 187              	.LCFI17:
 188              	 .cfi_def_cfa_offset 16
 189 0004 00AF     	 add r7,sp,#0
 190              	.LCFI18:
 191              	 .cfi_def_cfa_register 7
 192 0006 7860     	 str r0,[r7,#4]
 193 0008 0B46     	 mov r3,r1
 194 000a 7B80     	 strh r3,[r7,#2]
 195 000c 1346     	 mov r3,r2
 196 000e 3B80     	 strh r3,[r7]
 122:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   memcpy(pData, &pEsc[Address], Len);
 197              	 .loc 3 122 0
 198 0010 7B88     	 ldrh r3,[r7,#2]
 199 0012 03F1A843 	 add r3,r3,#1409286144
 200 0016 03F58033 	 add r3,r3,#65536
 201 001a 3A88     	 ldrh r2,[r7]
 202 001c 7868     	 ldr r0,[r7,#4]
 203 001e 1946     	 mov r1,r3
 204 0020 FFF7FEFF 	 bl memcpy
 123:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 205              	 .loc 3 123 0
 206 0024 0837     	 adds r7,r7,#8
 207              	.LCFI19:
 208              	 .cfi_def_cfa_offset 8
 209 0026 BD46     	 mov sp,r7
 210              	.LCFI20:
 211              	 .cfi_def_cfa_register 13
 212              	 
 213 0028 80BD     	 pop {r7,pc}
 214              	 .cfi_endproc
 215              	.LFE162:
 217 002a 00BF     	 .section .text.HW_GetALEventRegister,"ax",%progbits
 218              	 .align 2
 219              	 .thumb
 220              	 .thumb_func
 222              	HW_GetALEventRegister:
 223              	.LFB168:
 124:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 125:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 126:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Interrupt specific 16Bit ESC read access
 127:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 128:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local destination buffer.
 129:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 130:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 131:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 132:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 133:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 134:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 135:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 136:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Reads from the EtherCAT Slave Controller. This function is used to access ESC registers and the 
 137:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 138:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 139:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscReadIsr(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 140:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 141:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   HW_EscRead(pData, Address, Len);
 142:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 143:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 144:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 145:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Reads data from the ESC and copies to slave mailbox memory.
 146:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 147:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local destination buffer.
 148:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 149:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 150:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 151:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 152:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 153:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 154:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 155:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Reads data from the ESC and copies to slave mailbox memory. If the local mailbox memory is also 
 156:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * application memory this function is equal to HW_EscRead.
 157:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 158:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 159:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscReadMbxMem(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 160:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 161:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   HW_EscRead(pData, Address, Len);
 162:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 163:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 164:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 165:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief 16Bit ESC write access
 166:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 167:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local source buffer.
 168:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 169:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 170:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 171:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 172:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 173:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 174:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 175:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Writes from the EtherCAT Slave Controller. This function is used to access ESC registers and the
 176:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 177:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 178:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscWrite(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 179:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 180:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   memcpy(&pEsc[Address], pData, Len);
 181:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 182:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 183:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 184:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Interrupt specific 16Bit ESC write access
 185:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 186:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local source buffer.
 187:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 188:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 189:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 190:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 191:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 192:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 193:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 194:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Writes from the EtherCAT Slave Controller. This function is used to access ESC registers and the
 195:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 196:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 197:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscWriteIsr(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 198:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 199:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   HW_EscWrite(pData, Address, Len);
 200:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 201:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 202:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 203:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Writes data from the slave mailbox memory to ESC memory.
 204:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 205:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param pData Pointer to local source mailbox buffer.
 206:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Address EtherCAT Slave Controller address. Specifies the offset within the ESC memory are
 207:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param Len Access size in Bytes
 208:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 209:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 210:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 211:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 212:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 213:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Writes data from the slave mailbox memory to ESC memory. If the local mailbox memory is also loc
 214:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * application memory this function is equal to HW_EscWrite.
 215:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 216:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 217:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void HW_EscWriteMbxMem(MEM_ADDR *pData, UINT16 Address, UINT16 Len)
 218:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 219:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   HW_EscWrite(pData, Address, Len);
 220:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 221:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 222:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 223:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Get the first two bytes of the AL Event register
 224:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 225:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param None
 226:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 227:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return Content of register 0x220-0x221
 228:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 229:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 230:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 231:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 232:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 233:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 234:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE UINT16 HW_GetALEventRegister(void)
 235:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 224              	 .loc 3 235 0
 225              	 .cfi_startproc
 226              	 
 227              	 
 228 0000 80B5     	 push {r7,lr}
 229              	.LCFI21:
 230              	 .cfi_def_cfa_offset 8
 231              	 .cfi_offset 7,-8
 232              	 .cfi_offset 14,-4
 233 0002 00AF     	 add r7,sp,#0
 234              	.LCFI22:
 235              	 .cfi_def_cfa_register 7
 236:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   return XMC_ECAT_GetALEventRegister();
 236              	 .loc 3 236 0
 237 0004 FFF7FEFF 	 bl XMC_ECAT_GetALEventRegister
 238 0008 0346     	 mov r3,r0
 237:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 239              	 .loc 3 237 0
 240 000a 1846     	 mov r0,r3
 241 000c 80BD     	 pop {r7,pc}
 242              	 .cfi_endproc
 243              	.LFE168:
 245 000e 00BF     	 .section .text.ENABLE_ESC_INT,"ax",%progbits
 246              	 .align 2
 247              	 .thumb
 248              	 .thumb_func
 250              	ENABLE_ESC_INT:
 251              	.LFB170:
 238:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 239:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 240:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Get the first two bytes of the AL Event register from ISR.
 241:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 242:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param None
 243:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 244:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 245:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 246:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 247:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 248:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Special function for ESC access from interrupt service routines if required, otherwise this func
 249:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * HW_GetALEventRegister.
 250:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 251:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 252:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE UINT16 HW_GetALEventRegister_Isr(void)
 253:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 254:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   return HW_GetALEventRegister();
 255:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 256:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 257:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 258:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Enables EtherCAT interrupt
 259:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 260:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param None
 261:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 262:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 263:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 264:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 265:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 266:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Function to enable the XMC EtherCAT slave controller interrupt.
 267:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 268:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 269:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void ENABLE_ESC_INT(void)
 270:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 252              	 .loc 3 270 0
 253              	 .cfi_startproc
 254              	 
 255              	 
 256 0000 80B5     	 push {r7,lr}
 257              	.LCFI23:
 258              	 .cfi_def_cfa_offset 8
 259              	 .cfi_offset 7,-8
 260              	 .cfi_offset 14,-4
 261 0002 00AF     	 add r7,sp,#0
 262              	.LCFI24:
 263              	 .cfi_def_cfa_register 7
 271:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   NVIC_EnableIRQ(ECAT0_0_IRQn);
 264              	 .loc 3 271 0
 265 0004 6D20     	 movs r0,#109
 266 0006 FFF7FEFF 	 bl NVIC_EnableIRQ
 272:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 267              	 .loc 3 272 0
 268 000a 80BD     	 pop {r7,pc}
 269              	 .cfi_endproc
 270              	.LFE170:
 272              	 .section .text.DISABLE_ESC_INT,"ax",%progbits
 273              	 .align 2
 274              	 .thumb
 275              	 .thumb_func
 277              	DISABLE_ESC_INT:
 278              	.LFB171:
 273:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** 
 274:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** /**
 275:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @brief Disables EtherCAT interrupt
 276:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 277:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @param None
 278:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 279:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * @return None
 280:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * <BR>
 281:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 282:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * \par<b>Description:</b><br>
 283:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  * Function to disable the XMC EtherCAT slave controller interrupt.
 284:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  *
 285:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****  */
 286:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** __STATIC_INLINE void DISABLE_ESC_INT(void)
 287:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** {
 279              	 .loc 3 287 0
 280              	 .cfi_startproc
 281              	 
 282              	 
 283 0000 80B5     	 push {r7,lr}
 284              	.LCFI25:
 285              	 .cfi_def_cfa_offset 8
 286              	 .cfi_offset 7,-8
 287              	 .cfi_offset 14,-4
 288 0002 00AF     	 add r7,sp,#0
 289              	.LCFI26:
 290              	 .cfi_def_cfa_register 7
 288:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h ****   NVIC_DisableIRQ(ECAT0_0_IRQn);
 291              	 .loc 3 288 0
 292 0004 6D20     	 movs r0,#109
 293 0006 FFF7FEFF 	 bl NVIC_DisableIRQ
 289:E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Dave/Generated/ECAT_SSC\xmc_eschw.h **** }
 294              	 .loc 3 289 0
 295 000a 80BD     	 pop {r7,pc}
 296              	 .cfi_endproc
 297              	.LFE171:
 299              	 .comm bEcatOutputUpdateRunning,1,1
 300              	 .comm bEcatInputUpdateRunning,1,1
 301              	 .comm bEcatFirstOutputsReceived,1,1
 302              	 .comm bWdTrigger,1,1
 303              	 .comm bDcSyncActive,1,1
 304              	 .comm EsmTimeoutCounter,2,2
 305              	 .comm bDcRunning,1,1
 306              	 .comm u16SmSync0Counter,2,2
 307              	 .comm u16SmSync0Value,2,2
 308              	 .comm bSmSyncSequenceValid,1,1
 309              	 .comm i16WaitForPllRunningTimeout,2,2
 310              	 .comm i16WaitForPllRunningCnt,2,2
 311              	 .comm Sync0WdCounter,2,2
 312              	 .comm Sync0WdValue,2,2
 313              	 .comm Sync1WdCounter,2,2
 314              	 .comm Sync1WdValue,2,2
 315              	 .comm LatchInputSync0Value,2,2
 316              	 .comm LatchInputSync0Counter,2,2
 317              	 .comm bEscIntEnabled,1,1
 318              	 .comm b3BufferMode,1,1
 319              	 .comm bLocalErrorFlag,1,1
 320              	 .comm u16LocalErrorCode,2,2
 321              	 .comm bApplEsmPending,1,1
 322              	 .comm bEcatWaitForAlControlRes,1,1
 323              	 .comm nEcatStateTrans,2,2
 324              	 .comm u8EcatErrorLed,1,1
 325              	 .comm u8EcatRunLed,1,1
 326              	 .comm nPdInputSize,2,2
 327              	 .comm nPdOutputSize,2,2
 328              	 .comm nMaxSyncMan,1,1
 329              	 .comm nMaxEscAddress,2,2
 330              	 .comm nAlStatus,1,1
 331              	 .comm EcatWdValue,2,2
 332              	 .comm nEscAddrOutputData,2,2
 333              	 .comm nEscAddrInputData,2,2
 334              	 .comm u16ALEventMask,2,2
 335              	 .comm u8dummy,1,1
 336              	 .global SMActivate
 337              	 .section .bss.SMActivate,"aw",%nobits
 340              	SMActivate:
 341 0000 00       	 .space 1
 342              	 .comm SyncManInfo,8,4
 343              	 .global EepromLoaded
 344              	 .section .bss.EepromLoaded,"aw",%nobits
 347              	EepromLoaded:
 348 0000 00       	 .space 1
 349              	 .section .text.ResetALEventMask,"ax",%progbits
 350              	 .align 2
 351              	 .global ResetALEventMask
 352              	 .thumb
 353              	 .thumb_func
 355              	ResetALEventMask:
 356              	.LFB172:
 357              	 .file 4 "../SSC/Src/ecatslv.c"
   1:../SSC/Src/ecatslv.c **** /**
   2:../SSC/Src/ecatslv.c **** \addtogroup ESM EtherCAT State Machine
   3:../SSC/Src/ecatslv.c **** @{
   4:../SSC/Src/ecatslv.c **** */
   5:../SSC/Src/ecatslv.c **** 
   6:../SSC/Src/ecatslv.c **** /**
   7:../SSC/Src/ecatslv.c **** \file ecatslv.c
   8:../SSC/Src/ecatslv.c **** \author EthercatSSC@beckhoff.com
   9:../SSC/Src/ecatslv.c **** \brief Implementation
  10:../SSC/Src/ecatslv.c **** This file contains the EtherCAT State Machine.
  11:../SSC/Src/ecatslv.c **** 
  12:../SSC/Src/ecatslv.c **** \version 5.11
  13:../SSC/Src/ecatslv.c **** 
  14:../SSC/Src/ecatslv.c **** <br>Changes to version V5.10:<br>
  15:../SSC/Src/ecatslv.c **** V5.11 COE3: change 0x10F3.2 (Sync Error limit) from UINT32 to UINT16 (according to the ETG.1020)<br
  16:../SSC/Src/ecatslv.c **** V5.11 DIAG4: change parameter handling in DIAG_CreateNewMessage()<br>
  17:../SSC/Src/ecatslv.c **** V5.11 ECAT10: change PROTO handling to prevent compiler errors<br>
  18:../SSC/Src/ecatslv.c **** V5.11 ECAT4: enhance SM/Sync monitoring for input/output only slaves<br>
  19:../SSC/Src/ecatslv.c **** V5.11 ECAT5: "Add missing ""bEscAlEventEnbaled"" initialization if ""AL_EVENT_ENBALED"" is 0"""<br>
  20:../SSC/Src/ecatslv.c **** V5.11 ECAT7: add missing big endian swapping<br>
  21:../SSC/Src/ecatslv.c **** V5.11 ESC1: update max address calculation<br>
  22:../SSC/Src/ecatslv.c **** V5.11 ESM1: update calculation of subordinated cycles<br>
  23:../SSC/Src/ecatslv.c **** V5.11 ESM2: DC_SUPPORTED, Sync0 is not supported and Sync0 is generated according register values t
  24:../SSC/Src/ecatslv.c **** V5.11 ESM3: update checking of the user configured sync type<br>
  25:../SSC/Src/ecatslv.c **** V5.11 ESM4: prevent to go from ErrSafeOP to OP without re enabling Sync0/1<br>
  26:../SSC/Src/ecatslv.c **** V5.11 ESM5: DPRAM range was double checked<br>
  27:../SSC/Src/ecatslv.c **** V5.11 ESM6: in the SO transition wait by default until the master has send process data<br>
  28:../SSC/Src/ecatslv.c **** V5.11 HW1: "move hardware independent functions ""HW_DisableSyncManChannel()"", ""HW_EnableSyncManC
  29:../SSC/Src/ecatslv.c **** V5.11 HW2: check during ESM handling if the SM address and length is aligned according the ESC acce
  30:../SSC/Src/ecatslv.c **** V5.11 TEST9: "add behaviour 0x2020.7 (SDO requests on 0x3006.0 are set to pending until an FoE read
  31:../SSC/Src/ecatslv.c **** <br>Changes to version V5.01:<br>
  32:../SSC/Src/ecatslv.c **** V5.10 COE1: Define one entry description for all 0x1C3x objects and change data type of SI11,12,13 
  33:../SSC/Src/ecatslv.c **** V5.10 DIAG1: Define diagmessage textIDs<br>
  34:../SSC/Src/ecatslv.c **** V5.10 ECAT13: Update Synchronisation handling (FreeRun,SM Sync, Sync0, Sync1)<br>
  35:../SSC/Src/ecatslv.c ****               Compare DC UINT configuration (by ESC Config data) vs. DC activation register setting
  36:../SSC/Src/ecatslv.c ****               Update 0x1C3x entries<br>
  37:../SSC/Src/ecatslv.c **** V5.10 ESC2: Check if defined SM settings do not exceed the available DPRAM range (in error case AL 
  38:../SSC/Src/ecatslv.c **** V5.10 ESC3: Handle DC cControl register values in case of 32Bit ESC access (a Sync activation mask 
  39:../SSC/Src/ecatslv.c **** V5.10 ESC4: Mask lower 4 Bit of AL status to get Run led value<br>
  40:../SSC/Src/ecatslv.c ****             Invalid RunLed code was calculated if ESC set ECAT Run Led<br>
  41:../SSC/Src/ecatslv.c **** V5.10 ESC5: Add missing swapping<br>
  42:../SSC/Src/ecatslv.c **** V5.10 ESM2: Update "bApplEsmPending" flag during a transition to a lower state<br>
  43:../SSC/Src/ecatslv.c **** V5.10 ESM3: Add "volatile" directive for ESM dummy variables<br>
  44:../SSC/Src/ecatslv.c **** V5.10 HW5: Block ESC interrupts during Timer ISR<br>
  45:../SSC/Src/ecatslv.c **** V5.10 TEST9: Add option to prevent SM3 unlock during PS<br>
  46:../SSC/Src/ecatslv.c **** <br>Changes to version V5.0:<br>
  47:../SSC/Src/ecatslv.c **** V5.01 APPL3: Include library demo application<br>
  48:../SSC/Src/ecatslv.c **** V5.01 ESC2: Add missed value swapping<br>
  49:../SSC/Src/ecatslv.c **** V5.01 ESM1: Don't overwrite the error reason in case of an failed PS transition<br>
  50:../SSC/Src/ecatslv.c **** V5.01 ESM2: Don't check the "appl trigger" flag in case on an regular transition to a lower state (
  51:../SSC/Src/ecatslv.c **** V5.01 ESM3: Call Error acknowledge indication only if error was acknowledged by the master<br>
  52:../SSC/Src/ecatslv.c **** V5.01 HW3: Update blink code of an SM watchdog error<br>
  53:../SSC/Src/ecatslv.c **** <br>Changes to version V4.42:<br>
  54:../SSC/Src/ecatslv.c **** V5.0 ECAT1: Support Explicit Device ID.<br>
  55:../SSC/Src/ecatslv.c **** V5.0 ECAT2: Application specific functions are moved to application files.<br>
  56:../SSC/Src/ecatslv.c **** V5.0 ECAT3: Global dummy variables used for dummy ESC operations.<br>
  57:../SSC/Src/ecatslv.c **** V5.0 ESC1: ESC 32Bit Access added.<br>
  58:../SSC/Src/ecatslv.c **** V5.0 ESC2: Support ESC EtherCAT LED Indication.<br>
  59:../SSC/Src/ecatslv.c **** V5.0 ESC3: Support EEPROM Emulation.<br>
  60:../SSC/Src/ecatslv.c **** V5.0 ESM1: Update "LocalErrorFlag" handling.<br>
  61:../SSC/Src/ecatslv.c **** V5.0 ESM2: Update Error Acknowledge by ALControl INIT (without error acknowledge)<br>
  62:../SSC/Src/ecatslv.c **** V5.0 ESM3: Handle pending ESM transition<br>
  63:../SSC/Src/ecatslv.c **** V5.0 ESM4: ECAT_StateChange() will only be called form application. In case of an communication err
  64:../SSC/Src/ecatslv.c **** V5.0 MBX1: Support configuration without mailbox protocol support.<br>
  65:../SSC/Src/ecatslv.c **** V5.0 TEST1: Add test application. See Application Note ET9300 for more details.<br>
  66:../SSC/Src/ecatslv.c **** <br>Changes to version V4.40:<br>
  67:../SSC/Src/ecatslv.c **** V4.42 ESM1: Reset local error flag if master set the acknowledge bit (0x120.4)<br>
  68:../SSC/Src/ecatslv.c **** <br>Changes to version V4.30:<br>
  69:../SSC/Src/ecatslv.c **** V4.40 ESM5: Enable output SyncManager if local error acknowledged<br>
  70:../SSC/Src/ecatslv.c **** V4.40 HW0: Use common hardware access functions<br>
  71:../SSC/Src/ecatslv.c **** V4.40 PDO3: Add support if only input process data is used<br>
  72:../SSC/Src/ecatslv.c **** V4.40 ECAT4: Add read SM activation register to acknowledge SM Change event<br>
  73:../SSC/Src/ecatslv.c **** V4.40 PDO2: Check if max process data size was exceed<br>
  74:../SSC/Src/ecatslv.c **** V4.40 DIAG1: add diagnosis message support<br>
  75:../SSC/Src/ecatslv.c **** V4.40 ESM4: Change Check WD setup; add define OP_PD_REQUIRED (defines if process data required in s
  76:../SSC/Src/ecatslv.c **** V4.40 WD1: change WD behaviour depending if process data required in OP state<br>
  77:../SSC/Src/ecatslv.c **** V4.40 MBX4: Change processing order of mailbox SyncManager flags<br>
  78:../SSC/Src/ecatslv.c **** V4.40 ECAT1: Merge content of HW_Main (spihw.c /mcihw.c) to ECAT_Main<br>
  79:../SSC/Src/ecatslv.c **** V4.40 ECAT2: Added CheckIfLocalError() to check local flags and set ALStatus /Al Status code if req
  80:../SSC/Src/ecatslv.c **** V4.40 ESM2: Add AL_ControlRes() to complete pending state requests. Change SafeOP to OP state respo
  81:../SSC/Src/ecatslv.c **** V4.40 ESM1: Prevent double call of StopOutputHandler()<br>
  82:../SSC/Src/ecatslv.c **** V4.40 BOOT1: Enable Mailbox SyncManger on state change to BOOT state (to enable FoE)<br>
  83:../SSC/Src/ecatslv.c **** V4.40 ESM3: Change State machine behaviour according to ETG.1000 V1.0.2 (state change #26)<br>
  84:../SSC/Src/ecatslv.c **** V4.40 LED1: Set error blink code<br>
  85:../SSC/Src/ecatslv.c **** V4.40 TIMER1: Added DC_CheckWatchdog() triggered from ECAT_CheckTimer(). Change local Sync0 watchdo
  86:../SSC/Src/ecatslv.c **** V4.40 WD1: Change check process data watchdog settings<br>
  87:../SSC/Src/ecatslv.c **** <br>Changes to version V4.20:<br>
  88:../SSC/Src/ecatslv.c **** V4.30 OBJ 3: initialize the object dictionary in state change INIT->PREOP; clear object dictionary 
  89:../SSC/Src/ecatslv.c **** V4.30 SYNC: add 0x1C32:10; 0x1C33:10 (Sync0 cycle), change synchronisation control functionality<br
  90:../SSC/Src/ecatslv.c **** V4.30 CiA402: add CiA402_Init() call in state change from PREOP to SAFEOP if DC synchronisation is 
  91:../SSC/Src/ecatslv.c ****                    else the Init function is called when bus cycle time is calculated [CalcSMCycleT
  92:../SSC/Src/ecatslv.c ****                    trigger error handling if the EtherCAT state machine gets a transition from OP t
  93:../SSC/Src/ecatslv.c **** V4.20 ECAT 1: add LEGACY_MODE behaviour in ECAT_CheckWatchdog()<br>
  94:../SSC/Src/ecatslv.c **** V4.20 DC 1: Add DC pending state machine handling and Dc watchdog functionality<br>
  95:../SSC/Src/ecatslv.c **** V4.20 ESM 2: Add State transition from BOOT to INIT<br>
  96:../SSC/Src/ecatslv.c **** V4.20 ESM 1: Non LEGACY_MODE State change handling<br>
  97:../SSC/Src/ecatslv.c **** V4.11 Renamed the function parameter "code" of Function "SendSmFailedEmergency() to avoid<br>
  98:../SSC/Src/ecatslv.c **** problems with some compilers"<br>
  99:../SSC/Src/ecatslv.c **** V4.11 ECAT 1: Fixed a possible problem with state change Init -> SafeOP. The output syncmanager<br>
 100:../SSC/Src/ecatslv.c **** was enabled by the state change-flag and not by the actual state<br>
 101:../SSC/Src/ecatslv.c **** V4.11 LED 1: Clear the error LED during error acknowledgement<br>
 102:../SSC/Src/ecatslv.c **** V4.11 ESC 1: fixed size of MBXHEADER in the TFOEMBX struct <br>
 103:../SSC/Src/ecatslv.c **** <br>Changes to version V4.08:<br>
 104:../SSC/Src/ecatslv.c **** V4.10 ECAT 1: clear bEcatOutputsReceived in startMailboxhandler()<br>
 105:../SSC/Src/ecatslv.c **** V4.10 ECAT 2: clear bEcatOutputsReceived in stopMailboxhandler()<br>
 106:../SSC/Src/ecatslv.c **** V4.10 ECAT 3: when switching from INIT to BOOT the SM settings shall be checked<br>
 107:../SSC/Src/ecatslv.c **** V4.10 ECAT 4: APPL_StartInputHandler shall always be called and bEcatInputUpdateRunning shall alway
 108:../SSC/Src/ecatslv.c ****               in StartInputHandler independent of the input size<br>
 109:../SSC/Src/ecatslv.c **** V4.10 ECAT 5: AL_ControlInd: the error acknowledge behaviour was changed<br>
 110:../SSC/Src/ecatslv.c ****               according to the protocol enhancements and the conformance test<br>
 111:../SSC/Src/ecatslv.c **** V4.10 ECAT 6: AL_ControlInd: if a state transitions failed the corresponding stop function is<br>
 112:../SSC/Src/ecatslv.c ****               called to get a consistent set of variables<br>
 113:../SSC/Src/ecatslv.c **** V4.10 ECAT 7: the local application requested to leave the state OP so we have to disable the SM2<b
 114:../SSC/Src/ecatslv.c ****                    and make the state change from OP to SAFEOP by calling StopOutputHandler<br>
 115:../SSC/Src/ecatslv.c **** V4.10 ECAT 8: the AL Status Code has to be reset if the error was acknowledged by the master<br>
 116:../SSC/Src/ecatslv.c **** V4.10 ECAT 9: ECAT_StateChange: when waiting for a State Change response from the application the<b
 117:../SSC/Src/ecatslv.c ****               AL Status shall only be written if the final state was reached<br>
 118:../SSC/Src/ecatslv.c **** <br>Changes to version V4.07:<br>
 119:../SSC/Src/ecatslv.c **** V4.08 ECAT 1: The watchdog value was not rounded up<br>
 120:../SSC/Src/ecatslv.c **** V4.08 ECAT 2: The value of u16WdValue was not set 0 if the register 0x420 is 0<br>
 121:../SSC/Src/ecatslv.c **** V4.08 ECAT 3: The AlStatusCode is changed as parameter of the function AL_ControlInd<br>
 122:../SSC/Src/ecatslv.c **** V4.08 ECAT 4: In a state transition OP2PREOP, SAFEOP2INIT or OP2INIT is requested,<br>
 123:../SSC/Src/ecatslv.c ****               this was not working correctly if one of the application functions<br>
 124:../SSC/Src/ecatslv.c ****               APPL_StopInputHandler or APPL_StopOutputHandler were returning NOERROR_INWORK<br>
 125:../SSC/Src/ecatslv.c ****               (because only the first state transition was made in that case)<br>
 126:../SSC/Src/ecatslv.c **** V4.08 AOE 1:    AoE was added<br>
 127:../SSC/Src/ecatslv.c **** <br>Changes to version V4.06:<br>
 128:../SSC/Src/ecatslv.c **** V4.07 ECAT 1: The sources for SPI and MCI were merged (in ecat_def.h<br>
 129:../SSC/Src/ecatslv.c ****                    set the switch MCI_HW to 1 when using the MCI,<br>
 130:../SSC/Src/ecatslv.c ****                    set the switch SPI_HW to 1 when using the SPI<br>
 131:../SSC/Src/ecatslv.c **** <br>Changes to version V4.00:<br>
 132:../SSC/Src/ecatslv.c **** V4.01 ECAT 1: The Output sync Manager was not disabled when the state OP was left<br>
 133:../SSC/Src/ecatslv.c ****               by a local request (watchdog or io error)<br>
 134:../SSC/Src/ecatslv.c **** V4.01 ECAT 2: APPL_StopOutputHandler returns an UINT16<br>
 135:../SSC/Src/ecatslv.c **** V4.01 ECAT 3: TwinCAT compatibility mode: The state transition to OP is allowed when the<br>
 136:../SSC/Src/ecatslv.c ****                     WD-Trigger-Bit of the SM2-Control-Byte (0x814.6) is FALSE, in that case the<br>
 137:../SSC/Src/ecatslv.c ****                     watchdog will not be started before the outputs were received the first time<br
 138:../SSC/Src/ecatslv.c **** V4.01 ECAT 4: "else" was too much<br>
 139:../SSC/Src/ecatslv.c **** <br>Changes to version V3.20:<br>
 140:../SSC/Src/ecatslv.c **** V4.00 ECAT 1: The handling of the Sync Manager Parameter was included according to<br>
 141:../SSC/Src/ecatslv.c ****               the EtherCAT Guidelines and Protocol Enhancements Specification<br>
 142:../SSC/Src/ecatslv.c **** V4.00 ECAT 2: The output sync manager is initialized during the state transition<br>
 143:../SSC/Src/ecatslv.c ****               from PREOP to SAFEOP that the master can check if the slave could update<br>
 144:../SSC/Src/ecatslv.c ****               inputs and outputs before switching the slave to OP<br>
 145:../SSC/Src/ecatslv.c ****               behaviour according to the EtherCAT Guidelines and Protocol Enhancements Specificatio
 146:../SSC/Src/ecatslv.c **** V4.00 ECAT 3: The watchdog will be enabled in SAFE-OP that it can be checked if the last SM event<b
 147:../SSC/Src/ecatslv.c ****               was received during the watchdog time before switching to OP<br>
 148:../SSC/Src/ecatslv.c **** V4.00 ECAT 4: The function CheckSmChannelParameters is included in the function<br>
 149:../SSC/Src/ecatslv.c ****               CheckSmSettings to get a better overview<br>
 150:../SSC/Src/ecatslv.c **** V4.00 ECAT 5: In synchronous mode the slave should support 1- and 3-buffer mode, 3-buffer mode<br>
 151:../SSC/Src/ecatslv.c ****               should be the standard setting, because the controlling if the process data was updat
 152:../SSC/Src/ecatslv.c ****               should be done with the TxPDO Toggle, but the 1-buffer mode should be setable too,<br
 153:../SSC/Src/ecatslv.c ****               that the master could easily check if all slaves are synchronous by checking the<br>
 154:../SSC/Src/ecatslv.c ****               the working counter (if the outputs were not read or the inputs were not written<br>
 155:../SSC/Src/ecatslv.c ****               the ESC of the slave would not increment the working counter with expected value<br>
 156:../SSC/Src/ecatslv.c ****               if the 1-buffer mode is running)<br>
 157:../SSC/Src/ecatslv.c **** V4.00 ECAT 6: The function ECAT_StateChange was added, which the application should call if a local
 158:../SSC/Src/ecatslv.c ****                    is detected (with the parameters alStatus = STATE_SAFEOP, alStatusCode = error c
 159:../SSC/Src/ecatslv.c ****                    or gone (with the parameters alStatus = STATE_OP, alStatusCode = 0)<br>
 160:../SSC/Src/ecatslv.c ****                    or if one of the functions APPL_StartMailboxHandler, APPL_StopMailboxHandler, AP
 161:../SSC/Src/ecatslv.c ****                    APPL_StopInputHandler, APPL_StartOutputHandler, APPL_StopOutputHandler has retur
 162:../SSC/Src/ecatslv.c ****                    to acknowledge the last state transition (with the parameters alStatus = new AL-
 163:../SSC/Src/ecatslv.c ****                    new AL-Status-Code)<br>
 164:../SSC/Src/ecatslv.c **** V4.00 ECAT 7: The return values for the AL-StatusCode were changed to UINT16
 165:../SSC/Src/ecatslv.c **** */
 166:../SSC/Src/ecatslv.c **** 
 167:../SSC/Src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 168:../SSC/Src/ecatslv.c **** ------
 169:../SSC/Src/ecatslv.c **** ------    Includes
 170:../SSC/Src/ecatslv.c **** ------
 171:../SSC/Src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 172:../SSC/Src/ecatslv.c **** 
 173:../SSC/Src/ecatslv.c **** #define    _ECATSLV_    1
 174:../SSC/Src/ecatslv.c **** #include "ecatslv.h"
 175:../SSC/Src/ecatslv.c **** #undef    _ECATSLV_
 176:../SSC/Src/ecatslv.c **** /* ECATCHANGE_START(V5.11) ECAT10*/
 177:../SSC/Src/ecatslv.c **** /*remove definition of _ECATSLV_ (#ifdef is used in ecatslv.h)*/
 178:../SSC/Src/ecatslv.c **** /* ECATCHANGE_END(V5.11) ECAT10*/
 179:../SSC/Src/ecatslv.c **** 
 180:../SSC/Src/ecatslv.c **** #include "ecatappl.h"
 181:../SSC/Src/ecatslv.c **** 
 182:../SSC/Src/ecatslv.c **** 
 183:../SSC/Src/ecatslv.c **** 
 184:../SSC/Src/ecatslv.c **** 
 185:../SSC/Src/ecatslv.c **** #include "mailbox.h"
 186:../SSC/Src/ecatslv.c **** 
 187:../SSC/Src/ecatslv.c **** #include "ecatcoe.h"
 188:../SSC/Src/ecatslv.c **** #include "objdef.h"
 189:../SSC/Src/ecatslv.c **** 
 190:../SSC/Src/ecatslv.c **** 
 191:../SSC/Src/ecatslv.c **** 
 192:../SSC/Src/ecatslv.c **** #include "XMC_ESC.h"
 193:../SSC/Src/ecatslv.c **** 
 194:../SSC/Src/ecatslv.c **** /*--------------------------------------------------------------------------------------
 195:../SSC/Src/ecatslv.c **** ------
 196:../SSC/Src/ecatslv.c **** ------    local Types and Defines
 197:../SSC/Src/ecatslv.c **** ------
 198:../SSC/Src/ecatslv.c **** --------------------------------------------------------------------------------------*/
 199:../SSC/Src/ecatslv.c **** 
 200:../SSC/Src/ecatslv.c **** 
 201:../SSC/Src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 202:../SSC/Src/ecatslv.c **** ------
 203:../SSC/Src/ecatslv.c **** ------    local variables and constants
 204:../SSC/Src/ecatslv.c **** ------
 205:../SSC/Src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 206:../SSC/Src/ecatslv.c **** UINT16    u16ALEventMask;                      // Value which will be written to the 0x204 register
 207:../SSC/Src/ecatslv.c **** 
 208:../SSC/Src/ecatslv.c **** /*Dummy variable to trigger read or writes events in the ESC*/
 209:../SSC/Src/ecatslv.c ****     VARVOLATILE UINT8 u8dummy;
 210:../SSC/Src/ecatslv.c **** 
 211:../SSC/Src/ecatslv.c **** 
 212:../SSC/Src/ecatslv.c ****         VARVOLATILE UINT8 SMActivate = 0;
 213:../SSC/Src/ecatslv.c **** 
 214:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 215:../SSC/Src/ecatslv.c **** TSYNCMAN		SyncManInfo;
 216:../SSC/Src/ecatslv.c **** 
 217:../SSC/Src/ecatslv.c **** //indicates if the EEPORM was loaded correct
 218:../SSC/Src/ecatslv.c **** BOOL EepromLoaded = FALSE;
 219:../SSC/Src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 220:../SSC/Src/ecatslv.c **** ------
 221:../SSC/Src/ecatslv.c **** ------    local functions
 222:../SSC/Src/ecatslv.c **** ------
 223:../SSC/Src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 224:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 225:../SSC/Src/ecatslv.c **** /**
 226:../SSC/Src/ecatslv.c ****  \param    intMask        interrupt mask (disabled interrupt shall be zero)
 227:../SSC/Src/ecatslv.c **** 
 228:../SSC/Src/ecatslv.c ****  \brief    This function makes an logical and with the AL Event Mask register (0x204)
 229:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 230:../SSC/Src/ecatslv.c **** void ResetALEventMask(UINT16 intMask)
 231:../SSC/Src/ecatslv.c **** {
 358              	 .loc 4 231 0
 359              	 .cfi_startproc
 360              	 
 361              	 
 362 0000 80B5     	 push {r7,lr}
 363              	.LCFI27:
 364              	 .cfi_def_cfa_offset 8
 365              	 .cfi_offset 7,-8
 366              	 .cfi_offset 14,-4
 367 0002 84B0     	 sub sp,sp,#16
 368              	.LCFI28:
 369              	 .cfi_def_cfa_offset 24
 370 0004 00AF     	 add r7,sp,#0
 371              	.LCFI29:
 372              	 .cfi_def_cfa_register 7
 373 0006 0346     	 mov r3,r0
 374 0008 FB80     	 strh r3,[r7,#6]
 232:../SSC/Src/ecatslv.c ****     UINT16 mask;
 233:../SSC/Src/ecatslv.c ****     HW_EscReadWord(mask, ESC_AL_EVENTMASK_OFFSET);
 375              	 .loc 4 233 0
 376 000a 084B     	 ldr r3,.L17
 377 000c 1B88     	 ldrh r3,[r3]
 378 000e FB81     	 strh r3,[r7,#14]
 234:../SSC/Src/ecatslv.c ****     
 235:../SSC/Src/ecatslv.c ****     mask &= intMask;
 379              	 .loc 4 235 0
 380 0010 FA89     	 ldrh r2,[r7,#14]
 381 0012 FB88     	 ldrh r3,[r7,#6]
 382 0014 1340     	 ands r3,r3,r2
 383 0016 FB81     	 strh r3,[r7,#14]
 236:../SSC/Src/ecatslv.c **** 
 237:../SSC/Src/ecatslv.c ****     DISABLE_ESC_INT();
 384              	 .loc 4 237 0
 385 0018 FFF7FEFF 	 bl DISABLE_ESC_INT
 238:../SSC/Src/ecatslv.c **** 
 239:../SSC/Src/ecatslv.c **** 
 240:../SSC/Src/ecatslv.c ****     HW_EscWriteWord(mask, ESC_AL_EVENTMASK_OFFSET);
 386              	 .loc 4 240 0
 387 001c 034A     	 ldr r2,.L17
 388 001e FB89     	 ldrh r3,[r7,#14]
 389 0020 1380     	 strh r3,[r2]
 241:../SSC/Src/ecatslv.c ****     ENABLE_ESC_INT();
 390              	 .loc 4 241 0
 391 0022 FFF7FEFF 	 bl ENABLE_ESC_INT
 242:../SSC/Src/ecatslv.c **** }
 392              	 .loc 4 242 0
 393 0026 1037     	 adds r7,r7,#16
 394              	.LCFI30:
 395              	 .cfi_def_cfa_offset 8
 396 0028 BD46     	 mov sp,r7
 397              	.LCFI31:
 398              	 .cfi_def_cfa_register 13
 399              	 
 400 002a 80BD     	 pop {r7,pc}
 401              	.L18:
 402              	 .align 2
 403              	.L17:
 404 002c 04020154 	 .word 1409352196
 405              	 .cfi_endproc
 406              	.LFE172:
 408              	 .section .text.SetALEventMask,"ax",%progbits
 409              	 .align 2
 410              	 .global SetALEventMask
 411              	 .thumb
 412              	 .thumb_func
 414              	SetALEventMask:
 415              	.LFB173:
 243:../SSC/Src/ecatslv.c **** 
 244:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 245:../SSC/Src/ecatslv.c **** /**
 246:../SSC/Src/ecatslv.c ****  \param    intMask        interrupt mask (enabled interrupt shall be one)
 247:../SSC/Src/ecatslv.c **** 
 248:../SSC/Src/ecatslv.c ****   \brief    This function makes an logical or with the AL Event Mask register (0x204)
 249:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 250:../SSC/Src/ecatslv.c **** void SetALEventMask(UINT16 intMask)
 251:../SSC/Src/ecatslv.c **** {
 416              	 .loc 4 251 0
 417              	 .cfi_startproc
 418              	 
 419              	 
 420 0000 80B5     	 push {r7,lr}
 421              	.LCFI32:
 422              	 .cfi_def_cfa_offset 8
 423              	 .cfi_offset 7,-8
 424              	 .cfi_offset 14,-4
 425 0002 84B0     	 sub sp,sp,#16
 426              	.LCFI33:
 427              	 .cfi_def_cfa_offset 24
 428 0004 00AF     	 add r7,sp,#0
 429              	.LCFI34:
 430              	 .cfi_def_cfa_register 7
 431 0006 0346     	 mov r3,r0
 432 0008 FB80     	 strh r3,[r7,#6]
 252:../SSC/Src/ecatslv.c ****     UINT16 mask;
 253:../SSC/Src/ecatslv.c ****     HW_EscReadWord(mask, ESC_AL_EVENTMASK_OFFSET);
 433              	 .loc 4 253 0
 434 000a 084B     	 ldr r3,.L20
 435 000c 1B88     	 ldrh r3,[r3]
 436 000e FB81     	 strh r3,[r7,#14]
 254:../SSC/Src/ecatslv.c ****     
 255:../SSC/Src/ecatslv.c ****     mask |= intMask;
 437              	 .loc 4 255 0
 438 0010 FA89     	 ldrh r2,[r7,#14]
 439 0012 FB88     	 ldrh r3,[r7,#6]
 440 0014 1343     	 orrs r3,r3,r2
 441 0016 FB81     	 strh r3,[r7,#14]
 256:../SSC/Src/ecatslv.c **** 
 257:../SSC/Src/ecatslv.c ****     DISABLE_ESC_INT();
 442              	 .loc 4 257 0
 443 0018 FFF7FEFF 	 bl DISABLE_ESC_INT
 258:../SSC/Src/ecatslv.c **** 
 259:../SSC/Src/ecatslv.c **** 
 260:../SSC/Src/ecatslv.c ****     HW_EscWriteWord(mask, ESC_AL_EVENTMASK_OFFSET);
 444              	 .loc 4 260 0
 445 001c 034A     	 ldr r2,.L20
 446 001e FB89     	 ldrh r3,[r7,#14]
 447 0020 1380     	 strh r3,[r2]
 261:../SSC/Src/ecatslv.c ****     ENABLE_ESC_INT();
 448              	 .loc 4 261 0
 449 0022 FFF7FEFF 	 bl ENABLE_ESC_INT
 262:../SSC/Src/ecatslv.c **** }
 450              	 .loc 4 262 0
 451 0026 1037     	 adds r7,r7,#16
 452              	.LCFI35:
 453              	 .cfi_def_cfa_offset 8
 454 0028 BD46     	 mov sp,r7
 455              	.LCFI36:
 456              	 .cfi_def_cfa_register 13
 457              	 
 458 002a 80BD     	 pop {r7,pc}
 459              	.L21:
 460              	 .align 2
 461              	.L20:
 462 002c 04020154 	 .word 1409352196
 463              	 .cfi_endproc
 464              	.LFE173:
 466              	 .section .text.UpdateEEPROMLoadedState,"ax",%progbits
 467              	 .align 2
 468              	 .global UpdateEEPROMLoadedState
 469              	 .thumb
 470              	 .thumb_func
 472              	UpdateEEPROMLoadedState:
 473              	.LFB174:
 263:../SSC/Src/ecatslv.c **** 
 264:../SSC/Src/ecatslv.c **** 
 265:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 266:../SSC/Src/ecatslv.c **** /**
 267:../SSC/Src/ecatslv.c **** 
 268:../SSC/Src/ecatslv.c **** \brief    This function reads the EEPROM loaded state
 269:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 270:../SSC/Src/ecatslv.c **** void UpdateEEPROMLoadedState(void)
 271:../SSC/Src/ecatslv.c **** {
 474              	 .loc 4 271 0
 475              	 .cfi_startproc
 476              	 
 477              	 
 478              	 
 479 0000 80B4     	 push {r7}
 480              	.LCFI37:
 481              	 .cfi_def_cfa_offset 4
 482              	 .cfi_offset 7,-4
 483 0002 83B0     	 sub sp,sp,#12
 484              	.LCFI38:
 485              	 .cfi_def_cfa_offset 16
 486 0004 00AF     	 add r7,sp,#0
 487              	.LCFI39:
 488              	 .cfi_def_cfa_register 7
 489              	.LBB2:
 272:../SSC/Src/ecatslv.c ****     {
 273:../SSC/Src/ecatslv.c ****        UINT16 TmpVar = 0;
 490              	 .loc 4 273 0
 491 0006 0023     	 movs r3,#0
 492 0008 FB80     	 strh r3,[r7,#6]
 274:../SSC/Src/ecatslv.c ****        //read EEPROM loaded information
 275:../SSC/Src/ecatslv.c ****        HW_EscReadWord(TmpVar, ESC_EEPROM_CONTROL_OFFSET);
 493              	 .loc 4 275 0
 494 000a 0C4B     	 ldr r3,.L26
 495 000c 1B88     	 ldrh r3,[r3]
 496 000e FB80     	 strh r3,[r7,#6]
 276:../SSC/Src/ecatslv.c ****        TmpVar = SWAPWORD(TmpVar);
 277:../SSC/Src/ecatslv.c **** 
 278:../SSC/Src/ecatslv.c ****        if (((TmpVar & ESC_EEPROM_ERROR_CRC) > 0)
 497              	 .loc 4 278 0
 498 0010 FB88     	 ldrh r3,[r7,#6]
 499 0012 03F40063 	 and r3,r3,#2048
 500 0016 002B     	 cmp r3,#0
 501 0018 04DC     	 bgt .L23
 279:../SSC/Src/ecatslv.c ****           || ((TmpVar & ESC_EEPROM_ERROR_LOAD) > 0))
 502              	 .loc 4 279 0
 503 001a FB88     	 ldrh r3,[r7,#6]
 504 001c 03F48053 	 and r3,r3,#4096
 505 0020 002B     	 cmp r3,#0
 506 0022 03DD     	 ble .L24
 507              	.L23:
 280:../SSC/Src/ecatslv.c ****        {
 281:../SSC/Src/ecatslv.c ****           EepromLoaded = FALSE;
 508              	 .loc 4 281 0
 509 0024 064B     	 ldr r3,.L26+4
 510 0026 0022     	 movs r2,#0
 511 0028 1A70     	 strb r2,[r3]
 512 002a 02E0     	 b .L22
 513              	.L24:
 282:../SSC/Src/ecatslv.c ****        }
 283:../SSC/Src/ecatslv.c ****        else
 284:../SSC/Src/ecatslv.c ****        {
 285:../SSC/Src/ecatslv.c ****           EepromLoaded = TRUE;
 514              	 .loc 4 285 0
 515 002c 044B     	 ldr r3,.L26+4
 516 002e 0122     	 movs r2,#1
 517 0030 1A70     	 strb r2,[r3]
 518              	.L22:
 519              	.LBE2:
 286:../SSC/Src/ecatslv.c ****        }
 287:../SSC/Src/ecatslv.c ****     }
 288:../SSC/Src/ecatslv.c **** }
 520              	 .loc 4 288 0
 521 0032 0C37     	 adds r7,r7,#12
 522              	.LCFI40:
 523              	 .cfi_def_cfa_offset 4
 524 0034 BD46     	 mov sp,r7
 525              	.LCFI41:
 526              	 .cfi_def_cfa_register 13
 527              	 
 528 0036 5DF8047B 	 ldr r7,[sp],#4
 529              	.LCFI42:
 530              	 .cfi_restore 7
 531              	 .cfi_def_cfa_offset 0
 532 003a 7047     	 bx lr
 533              	.L27:
 534              	 .align 2
 535              	.L26:
 536 003c 02050154 	 .word 1409352962
 537 0040 00000000 	 .word EepromLoaded
 538              	 .cfi_endproc
 539              	.LFE174:
 541              	 .section .text.GetSyncMan,"ax",%progbits
 542              	 .align 2
 543              	 .global GetSyncMan
 544              	 .thumb
 545              	 .thumb_func
 547              	GetSyncMan:
 548              	.LFB175:
 289:../SSC/Src/ecatslv.c **** 
 290:../SSC/Src/ecatslv.c **** 
 291:../SSC/Src/ecatslv.c **** /*-----------------------------------------------------------------------------------------
 292:../SSC/Src/ecatslv.c **** ------
 293:../SSC/Src/ecatslv.c **** ------    functions
 294:../SSC/Src/ecatslv.c **** ------
 295:../SSC/Src/ecatslv.c **** -----------------------------------------------------------------------------------------*/
 296:../SSC/Src/ecatslv.c **** 
 297:../SSC/Src/ecatslv.c **** 
 298:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 299:../SSC/Src/ecatslv.c **** /**
 300:../SSC/Src/ecatslv.c ****  \param     channel        Sync Manager channel
 301:../SSC/Src/ecatslv.c **** 
 302:../SSC/Src/ecatslv.c ****  \return     pPdSyncMan        Pointer to the settings of requested SYNC Manager channel
 303:../SSC/Src/ecatslv.c **** 
 304:../SSC/Src/ecatslv.c ****  \brief    This function is called to read the SYNC Manager channel descriptions of the
 305:../SSC/Src/ecatslv.c ****              process data SYNC Managers.
 306:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 307:../SSC/Src/ecatslv.c **** 
 308:../SSC/Src/ecatslv.c **** TSYNCMAN ESCMEM * GetSyncMan( UINT8 channel )
 309:../SSC/Src/ecatslv.c **** {
 549              	 .loc 4 309 0
 550              	 .cfi_startproc
 551              	 
 552              	 
 553 0000 80B5     	 push {r7,lr}
 554              	.LCFI43:
 555              	 .cfi_def_cfa_offset 8
 556              	 .cfi_offset 7,-8
 557              	 .cfi_offset 14,-4
 558 0002 82B0     	 sub sp,sp,#8
 559              	.LCFI44:
 560              	 .cfi_def_cfa_offset 16
 561 0004 00AF     	 add r7,sp,#0
 562              	.LCFI45:
 563              	 .cfi_def_cfa_register 7
 564 0006 0346     	 mov r3,r0
 565 0008 FB71     	 strb r3,[r7,#7]
 310:../SSC/Src/ecatslv.c ****     HW_EscRead((MEM_ADDR *)&SyncManInfo, ESC_SYNCMAN_REG_OFFSET + (channel * SIZEOF_SM_REGISTER), S
 566              	 .loc 4 310 0
 567 000a FB79     	 ldrb r3,[r7,#7]
 568 000c 03F58073 	 add r3,r3,#256
 569 0010 9BB2     	 uxth r3,r3
 570 0012 DB00     	 lsls r3,r3,#3
 571 0014 9BB2     	 uxth r3,r3
 572 0016 0548     	 ldr r0,.L30
 573 0018 1946     	 mov r1,r3
 574 001a 0822     	 movs r2,#8
 575 001c FFF7FEFF 	 bl HW_EscRead
 311:../SSC/Src/ecatslv.c **** 
 312:../SSC/Src/ecatslv.c **** 
 313:../SSC/Src/ecatslv.c ****     return &SyncManInfo;
 576              	 .loc 4 313 0
 577 0020 024B     	 ldr r3,.L30
 314:../SSC/Src/ecatslv.c **** }
 578              	 .loc 4 314 0
 579 0022 1846     	 mov r0,r3
 580 0024 0837     	 adds r7,r7,#8
 581              	.LCFI46:
 582              	 .cfi_def_cfa_offset 8
 583 0026 BD46     	 mov sp,r7
 584              	.LCFI47:
 585              	 .cfi_def_cfa_register 13
 586              	 
 587 0028 80BD     	 pop {r7,pc}
 588              	.L31:
 589 002a 00BF     	 .align 2
 590              	.L30:
 591 002c 00000000 	 .word SyncManInfo
 592              	 .cfi_endproc
 593              	.LFE175:
 595              	 .section .text.DisableSyncManChannel,"ax",%progbits
 596              	 .align 2
 597              	 .global DisableSyncManChannel
 598              	 .thumb
 599              	 .thumb_func
 601              	DisableSyncManChannel:
 602              	.LFB176:
 315:../SSC/Src/ecatslv.c **** 
 316:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 317:../SSC/Src/ecatslv.c **** /**
 318:../SSC/Src/ecatslv.c ****  \param     channel        Sync Manager channel
 319:../SSC/Src/ecatslv.c **** 
 320:../SSC/Src/ecatslv.c ****  \brief    This function disables a Sync Manager channel
 321:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 322:../SSC/Src/ecatslv.c **** void DisableSyncManChannel(UINT8 channel)
 323:../SSC/Src/ecatslv.c **** {
 603              	 .loc 4 323 0
 604              	 .cfi_startproc
 605              	 
 606              	 
 607              	 
 608 0000 80B4     	 push {r7}
 609              	.LCFI48:
 610              	 .cfi_def_cfa_offset 4
 611              	 .cfi_offset 7,-4
 612 0002 85B0     	 sub sp,sp,#20
 613              	.LCFI49:
 614              	 .cfi_def_cfa_offset 24
 615 0004 00AF     	 add r7,sp,#0
 616              	.LCFI50:
 617              	 .cfi_def_cfa_register 7
 618 0006 0346     	 mov r3,r0
 619 0008 FB71     	 strb r3,[r7,#7]
 324:../SSC/Src/ecatslv.c ****     UINT16 Offset;
 325:../SSC/Src/ecatslv.c ****     VARVOLATILE UINT8 smStatus = SM_SETTING_PDI_DISABLE;
 620              	 .loc 4 325 0
 621 000a 0123     	 movs r3,#1
 622 000c 7B73     	 strb r3,[r7,#13]
 326:../SSC/Src/ecatslv.c ****     Offset = (ESC_SM_PDICONTROL_OFFSET + (SIZEOF_SM_REGISTER*channel));
 623              	 .loc 4 326 0
 624 000e FB79     	 ldrb r3,[r7,#7]
 625 0010 9BB2     	 uxth r3,r3
 626 0012 DB00     	 lsls r3,r3,#3
 627 0014 9BB2     	 uxth r3,r3
 628 0016 03F60703 	 addw r3,r3,#2055
 629 001a FB81     	 strh r3,[r7,#14]
 327:../SSC/Src/ecatslv.c **** 
 328:../SSC/Src/ecatslv.c ****     HW_EscWriteByte(smStatus,Offset);
 630              	 .loc 4 328 0
 631 001c FB89     	 ldrh r3,[r7,#14]
 632 001e 03F1A843 	 add r3,r3,#1409286144
 633 0022 03F58033 	 add r3,r3,#65536
 634 0026 7A7B     	 ldrb r2,[r7,#13]
 635 0028 D2B2     	 uxtb r2,r2
 636 002a 1A70     	 strb r2,[r3]
 637              	.L33:
 329:../SSC/Src/ecatslv.c ****     
 330:../SSC/Src/ecatslv.c ****     /*wait until SyncManager is disabled*/
 331:../SSC/Src/ecatslv.c ****     do
 332:../SSC/Src/ecatslv.c ****     {
 333:../SSC/Src/ecatslv.c ****         HW_EscReadByte(smStatus, Offset);
 638              	 .loc 4 333 0 discriminator 1
 639 002c FB89     	 ldrh r3,[r7,#14]
 640 002e 03F1A843 	 add r3,r3,#1409286144
 641 0032 03F58033 	 add r3,r3,#65536
 642 0036 1B78     	 ldrb r3,[r3]
 643 0038 DBB2     	 uxtb r3,r3
 644 003a 7B73     	 strb r3,[r7,#13]
 334:../SSC/Src/ecatslv.c ****     }while(!(smStatus & SM_SETTING_PDI_DISABLE));
 645              	 .loc 4 334 0 discriminator 1
 646 003c 7B7B     	 ldrb r3,[r7,#13]
 647 003e DBB2     	 uxtb r3,r3
 648 0040 03F00103 	 and r3,r3,#1
 649 0044 002B     	 cmp r3,#0
 650 0046 F1D0     	 beq .L33
 335:../SSC/Src/ecatslv.c **** }
 651              	 .loc 4 335 0
 652 0048 1437     	 adds r7,r7,#20
 653              	.LCFI51:
 654              	 .cfi_def_cfa_offset 4
 655 004a BD46     	 mov sp,r7
 656              	.LCFI52:
 657              	 .cfi_def_cfa_register 13
 658              	 
 659 004c 5DF8047B 	 ldr r7,[sp],#4
 660              	.LCFI53:
 661              	 .cfi_restore 7
 662              	 .cfi_def_cfa_offset 0
 663 0050 7047     	 bx lr
 664              	 .cfi_endproc
 665              	.LFE176:
 667 0052 00BF     	 .section .text.EnableSyncManChannel,"ax",%progbits
 668              	 .align 2
 669              	 .global EnableSyncManChannel
 670              	 .thumb
 671              	 .thumb_func
 673              	EnableSyncManChannel:
 674              	.LFB177:
 336:../SSC/Src/ecatslv.c **** 
 337:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 338:../SSC/Src/ecatslv.c **** /**
 339:../SSC/Src/ecatslv.c ****  \param     channel        Sync Manager channel
 340:../SSC/Src/ecatslv.c **** 
 341:../SSC/Src/ecatslv.c ****  \brief    This function enables a Sync Manager channel
 342:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 343:../SSC/Src/ecatslv.c **** void EnableSyncManChannel(UINT8 channel)
 344:../SSC/Src/ecatslv.c **** {
 675              	 .loc 4 344 0
 676              	 .cfi_startproc
 677              	 
 678              	 
 679              	 
 680 0000 80B4     	 push {r7}
 681              	.LCFI54:
 682              	 .cfi_def_cfa_offset 4
 683              	 .cfi_offset 7,-4
 684 0002 85B0     	 sub sp,sp,#20
 685              	.LCFI55:
 686              	 .cfi_def_cfa_offset 24
 687 0004 00AF     	 add r7,sp,#0
 688              	.LCFI56:
 689              	 .cfi_def_cfa_register 7
 690 0006 0346     	 mov r3,r0
 691 0008 FB71     	 strb r3,[r7,#7]
 345:../SSC/Src/ecatslv.c ****     UINT16 Offset;
 346:../SSC/Src/ecatslv.c ****     VARVOLATILE UINT8 smStatus = 0x00;
 692              	 .loc 4 346 0
 693 000a 0023     	 movs r3,#0
 694 000c 7B73     	 strb r3,[r7,#13]
 347:../SSC/Src/ecatslv.c ****     Offset = (ESC_SM_PDICONTROL_OFFSET + (SIZEOF_SM_REGISTER*channel));
 695              	 .loc 4 347 0
 696 000e FB79     	 ldrb r3,[r7,#7]
 697 0010 9BB2     	 uxth r3,r3
 698 0012 DB00     	 lsls r3,r3,#3
 699 0014 9BB2     	 uxth r3,r3
 700 0016 03F60703 	 addw r3,r3,#2055
 701 001a FB81     	 strh r3,[r7,#14]
 348:../SSC/Src/ecatslv.c **** 
 349:../SSC/Src/ecatslv.c ****     HW_EscWriteByte(smStatus,Offset);
 702              	 .loc 4 349 0
 703 001c FB89     	 ldrh r3,[r7,#14]
 704 001e 03F1A843 	 add r3,r3,#1409286144
 705 0022 03F58033 	 add r3,r3,#65536
 706 0026 7A7B     	 ldrb r2,[r7,#13]
 707 0028 D2B2     	 uxtb r2,r2
 708 002a 1A70     	 strb r2,[r3]
 709              	.L35:
 350:../SSC/Src/ecatslv.c ****     
 351:../SSC/Src/ecatslv.c ****     /*wait until SyncManager is enabled*/
 352:../SSC/Src/ecatslv.c ****     do
 353:../SSC/Src/ecatslv.c ****     {
 354:../SSC/Src/ecatslv.c ****         HW_EscReadByte(smStatus,Offset);
 710              	 .loc 4 354 0 discriminator 1
 711 002c FB89     	 ldrh r3,[r7,#14]
 712 002e 03F1A843 	 add r3,r3,#1409286144
 713 0032 03F58033 	 add r3,r3,#65536
 714 0036 1B78     	 ldrb r3,[r3]
 715 0038 DBB2     	 uxtb r3,r3
 716 003a 7B73     	 strb r3,[r7,#13]
 355:../SSC/Src/ecatslv.c ****     }while((smStatus & SM_SETTING_PDI_DISABLE));
 717              	 .loc 4 355 0 discriminator 1
 718 003c 7B7B     	 ldrb r3,[r7,#13]
 719 003e DBB2     	 uxtb r3,r3
 720 0040 03F00103 	 and r3,r3,#1
 721 0044 002B     	 cmp r3,#0
 722 0046 F1D1     	 bne .L35
 356:../SSC/Src/ecatslv.c **** }
 723              	 .loc 4 356 0
 724 0048 1437     	 adds r7,r7,#20
 725              	.LCFI57:
 726              	 .cfi_def_cfa_offset 4
 727 004a BD46     	 mov sp,r7
 728              	.LCFI58:
 729              	 .cfi_def_cfa_register 13
 730              	 
 731 004c 5DF8047B 	 ldr r7,[sp],#4
 732              	.LCFI59:
 733              	 .cfi_restore 7
 734              	 .cfi_def_cfa_offset 0
 735 0050 7047     	 bx lr
 736              	 .cfi_endproc
 737              	.LFE177:
 739 0052 00BF     	 .section .text.CheckSmSettings,"ax",%progbits
 740              	 .align 2
 741              	 .global CheckSmSettings
 742              	 .thumb
 743              	 .thumb_func
 745              	CheckSmSettings:
 746              	.LFB178:
 357:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 358:../SSC/Src/ecatslv.c **** 
 359:../SSC/Src/ecatslv.c **** 
 360:../SSC/Src/ecatslv.c **** 
 361:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 362:../SSC/Src/ecatslv.c **** /**
 363:../SSC/Src/ecatslv.c ****  \param  maxChannel    last SM channel which should be checked
 364:../SSC/Src/ecatslv.c **** 
 365:../SSC/Src/ecatslv.c ****  \return                 0: okay else AL Status Code
 366:../SSC/Src/ecatslv.c **** 
 367:../SSC/Src/ecatslv.c ****  \brief    This function checks all SM channels
 368:../SSC/Src/ecatslv.c **** 
 369:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 370:../SSC/Src/ecatslv.c **** 
 371:../SSC/Src/ecatslv.c **** UINT8    CheckSmSettings(UINT8 maxChannel)
 372:../SSC/Src/ecatslv.c **** {
 747              	 .loc 4 372 0
 748              	 .cfi_startproc
 749              	 
 750              	 
 751 0000 80B5     	 push {r7,lr}
 752              	.LCFI60:
 753              	 .cfi_def_cfa_offset 8
 754              	 .cfi_offset 7,-8
 755              	 .cfi_offset 14,-4
 756 0002 86B0     	 sub sp,sp,#24
 757              	.LCFI61:
 758              	 .cfi_def_cfa_offset 32
 759 0004 00AF     	 add r7,sp,#0
 760              	.LCFI62:
 761              	 .cfi_def_cfa_register 7
 762 0006 0346     	 mov r3,r0
 763 0008 FB71     	 strb r3,[r7,#7]
 373:../SSC/Src/ecatslv.c ****     UINT8 i;
 374:../SSC/Src/ecatslv.c ****     UINT8 result = 0;
 764              	 .loc 4 374 0
 765 000a 0023     	 movs r3,#0
 766 000c BB75     	 strb r3,[r7,#22]
 375:../SSC/Src/ecatslv.c ****     TSYNCMAN ESCMEM *pSyncMan;
 376:../SSC/Src/ecatslv.c ****     UINT16 SMLength = 0;
 767              	 .loc 4 376 0
 768 000e 0023     	 movs r3,#0
 769 0010 BB82     	 strh r3,[r7,#20]
 377:../SSC/Src/ecatslv.c ****     UINT16 SMAddress = 0;
 770              	 .loc 4 377 0
 771 0012 0023     	 movs r3,#0
 772 0014 7B82     	 strh r3,[r7,#18]
 378:../SSC/Src/ecatslv.c **** 
 379:../SSC/Src/ecatslv.c ****     //Check if max address defines are within the available ESC address range
 380:../SSC/Src/ecatslv.c ****     if((nMaxEscAddress < MAX_PD_WRITE_ADDRESS)
 773              	 .loc 4 380 0
 774 0016 A04B     	 ldr r3,.L87
 775 0018 1B88     	 ldrh r3,[r3]
 776 001a 42F6FE72 	 movw r2,#12286
 777 001e 9342     	 cmp r3,r2
 778 0020 11D9     	 bls .L37
 381:../SSC/Src/ecatslv.c ****         ||(nMaxEscAddress < MAX_PD_READ_ADDRESS)
 779              	 .loc 4 381 0
 780 0022 9D4B     	 ldr r3,.L87
 781 0024 1B88     	 ldrh r3,[r3]
 782 0026 42F6FE72 	 movw r2,#12286
 783 002a 9342     	 cmp r3,r2
 784 002c 0BD9     	 bls .L37
 382:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM5*/
 383:../SSC/Src/ecatslv.c ****         ||(nMaxEscAddress < MAX_MBX_WRITE_ADDRESS)
 785              	 .loc 4 383 0
 786 002e 9A4B     	 ldr r3,.L87
 787 0030 1B88     	 ldrh r3,[r3]
 788 0032 42F6FE72 	 movw r2,#12286
 789 0036 9342     	 cmp r3,r2
 790 0038 05D9     	 bls .L37
 384:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM5*/
 385:../SSC/Src/ecatslv.c ****         ||(nMaxEscAddress < MAX_MBX_READ_ADDRESS))
 791              	 .loc 4 385 0
 792 003a 974B     	 ldr r3,.L87
 793 003c 1B88     	 ldrh r3,[r3]
 794 003e 42F6FE72 	 movw r2,#12286
 795 0042 9342     	 cmp r3,r2
 796 0044 01D8     	 bhi .L38
 797              	.L37:
 386:../SSC/Src/ecatslv.c ****     {
 387:../SSC/Src/ecatslv.c ****         /*The defines for maximum SM addresses are invalid for the used ESC (change the defines in 
 388:../SSC/Src/ecatslv.c ****         It may be also required to adapt the SM settings in the ESI file*/
 389:../SSC/Src/ecatslv.c **** 
 390:../SSC/Src/ecatslv.c ****         return ALSTATUSCODE_NOVALIDFIRMWARE;
 798              	 .loc 4 390 0
 799 0046 1423     	 movs r3,#20
 800 0048 A7E1     	 b .L39
 801              	.L38:
 391:../SSC/Src/ecatslv.c ****     }
 392:../SSC/Src/ecatslv.c **** 
 393:../SSC/Src/ecatslv.c ****     /* check the Sync Manager Parameter for the Receive Mailbox (Sync Manager Channel 0) */
 394:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 395:../SSC/Src/ecatslv.c ****     pSyncMan = GetSyncMan(MAILBOX_WRITE);
 802              	 .loc 4 395 0
 803 004a 0020     	 movs r0,#0
 804 004c FFF7FEFF 	 bl GetSyncMan
 805 0050 F860     	 str r0,[r7,#12]
 396:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 397:../SSC/Src/ecatslv.c **** 
 398:../SSC/Src/ecatslv.c ****     SMLength = pSyncMan->Length;
 806              	 .loc 4 398 0
 807 0052 FB68     	 ldr r3,[r7,#12]
 808 0054 9A78     	 ldrb r2,[r3,#2]
 809 0056 DB78     	 ldrb r3,[r3,#3]
 810 0058 1B02     	 lsls r3,r3,#8
 811 005a 1343     	 orrs r3,r3,r2
 812 005c BB82     	 strh r3,[r7,#20]
 399:../SSC/Src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 813              	 .loc 4 399 0
 814 005e FB68     	 ldr r3,[r7,#12]
 815 0060 1A78     	 ldrb r2,[r3]
 816 0062 5B78     	 ldrb r3,[r3,#1]
 817 0064 1B02     	 lsls r3,r3,#8
 818 0066 1343     	 orrs r3,r3,r2
 819 0068 7B82     	 strh r3,[r7,#18]
 400:../SSC/Src/ecatslv.c **** 
 401:../SSC/Src/ecatslv.c **** 
 402:../SSC/Src/ecatslv.c ****     if (!(pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE))
 820              	 .loc 4 402 0
 821 006a FB68     	 ldr r3,[r7,#12]
 822 006c 9B79     	 ldrb r3,[r3,#6]
 823 006e 03F00103 	 and r3,r3,#1
 824 0072 002B     	 cmp r3,#0
 825 0074 02D1     	 bne .L40
 403:../SSC/Src/ecatslv.c ****         /* receive mailbox is not enabled */
 404:../SSC/Src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 826              	 .loc 4 404 0
 827 0076 1623     	 movs r3,#22
 828 0078 BB75     	 strb r3,[r7,#22]
 829 007a 2BE0     	 b .L41
 830              	.L40:
 405:../SSC/Src/ecatslv.c ****     else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) != SM_SET
 831              	 .loc 4 405 0
 832 007c FB68     	 ldr r3,[r7,#12]
 833 007e 1B79     	 ldrb r3,[r3,#4]
 834 0080 03F00C03 	 and r3,r3,#12
 835 0084 042B     	 cmp r3,#4
 836 0086 02D0     	 beq .L42
 406:../SSC/Src/ecatslv.c ****        /* receive mailbox is not writable by the master*/
 407:../SSC/Src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 837              	 .loc 4 407 0
 838 0088 1623     	 movs r3,#22
 839 008a BB75     	 strb r3,[r7,#22]
 840 008c 22E0     	 b .L41
 841              	.L42:
 408:../SSC/Src/ecatslv.c ****     else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) != SM_SETTING_
 842              	 .loc 4 408 0
 843 008e FB68     	 ldr r3,[r7,#12]
 844 0090 1B79     	 ldrb r3,[r3,#4]
 845 0092 03F00203 	 and r3,r3,#2
 846 0096 002B     	 cmp r3,#0
 847 0098 02D1     	 bne .L43
 409:../SSC/Src/ecatslv.c ****         /* receive mailbox is not in one buffer mode */
 410:../SSC/Src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 848              	 .loc 4 410 0
 849 009a 1623     	 movs r3,#22
 850 009c BB75     	 strb r3,[r7,#22]
 851 009e 19E0     	 b .L41
 852              	.L43:
 411:../SSC/Src/ecatslv.c ****     else if ( SMLength < MIN_MBX_SIZE )
 853              	 .loc 4 411 0
 854 00a0 BB8A     	 ldrh r3,[r7,#20]
 855 00a2 212B     	 cmp r3,#33
 856 00a4 02D8     	 bhi .L44
 412:../SSC/Src/ecatslv.c ****         /* receive mailbox size is too small */
 413:../SSC/Src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 857              	 .loc 4 413 0
 858 00a6 1623     	 movs r3,#22
 859 00a8 BB75     	 strb r3,[r7,#22]
 860 00aa 13E0     	 b .L41
 861              	.L44:
 414:../SSC/Src/ecatslv.c ****     else if ( SMLength > MAX_MBX_SIZE )
 862              	 .loc 4 414 0
 863 00ac BB8A     	 ldrh r3,[r7,#20]
 864 00ae B3F5807F 	 cmp r3,#256
 865 00b2 02D9     	 bls .L45
 415:../SSC/Src/ecatslv.c ****         /* receive mailbox size is too great */
 416:../SSC/Src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 866              	 .loc 4 416 0
 867 00b4 1623     	 movs r3,#22
 868 00b6 BB75     	 strb r3,[r7,#22]
 869 00b8 0CE0     	 b .L41
 870              	.L45:
 417:../SSC/Src/ecatslv.c ****      else if ( SMAddress < MIN_MBX_WRITE_ADDRESS )
 871              	 .loc 4 417 0
 872 00ba 7B8A     	 ldrh r3,[r7,#18]
 873 00bc B3F5805F 	 cmp r3,#4096
 874 00c0 02D2     	 bcs .L46
 418:../SSC/Src/ecatslv.c ****         /* receive mailbox address is too small */
 419:../SSC/Src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 875              	 .loc 4 419 0
 876 00c2 1623     	 movs r3,#22
 877 00c4 BB75     	 strb r3,[r7,#22]
 878 00c6 05E0     	 b .L41
 879              	.L46:
 420:../SSC/Src/ecatslv.c ****     else if ( SMAddress > MAX_MBX_WRITE_ADDRESS)
 880              	 .loc 4 420 0
 881 00c8 7B8A     	 ldrh r3,[r7,#18]
 882 00ca B3F5405F 	 cmp r3,#12288
 883 00ce 01D3     	 bcc .L41
 421:../SSC/Src/ecatslv.c ****         /* receive mailbox address is too great */
 422:../SSC/Src/ecatslv.c ****         result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 884              	 .loc 4 422 0
 885 00d0 1623     	 movs r3,#22
 886 00d2 BB75     	 strb r3,[r7,#22]
 887              	.L41:
 423:../SSC/Src/ecatslv.c **** 
 424:../SSC/Src/ecatslv.c **** 
 425:../SSC/Src/ecatslv.c ****     if ( result == 0 )
 888              	 .loc 4 425 0
 889 00d4 BB7D     	 ldrb r3,[r7,#22]
 890 00d6 002B     	 cmp r3,#0
 891 00d8 44D1     	 bne .L47
 426:../SSC/Src/ecatslv.c ****     {
 427:../SSC/Src/ecatslv.c ****         /* check the Sync Manager Parameter for the Send Mailbox (Sync Manager Channel 1) */
 428:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 429:../SSC/Src/ecatslv.c ****         pSyncMan = GetSyncMan(MAILBOX_READ);
 892              	 .loc 4 429 0
 893 00da 0120     	 movs r0,#1
 894 00dc FFF7FEFF 	 bl GetSyncMan
 895 00e0 F860     	 str r0,[r7,#12]
 430:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 431:../SSC/Src/ecatslv.c **** 
 432:../SSC/Src/ecatslv.c ****     SMLength = pSyncMan->Length;
 896              	 .loc 4 432 0
 897 00e2 FB68     	 ldr r3,[r7,#12]
 898 00e4 9A78     	 ldrb r2,[r3,#2]
 899 00e6 DB78     	 ldrb r3,[r3,#3]
 900 00e8 1B02     	 lsls r3,r3,#8
 901 00ea 1343     	 orrs r3,r3,r2
 902 00ec BB82     	 strh r3,[r7,#20]
 433:../SSC/Src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 903              	 .loc 4 433 0
 904 00ee FB68     	 ldr r3,[r7,#12]
 905 00f0 1A78     	 ldrb r2,[r3]
 906 00f2 5B78     	 ldrb r3,[r3,#1]
 907 00f4 1B02     	 lsls r3,r3,#8
 908 00f6 1343     	 orrs r3,r3,r2
 909 00f8 7B82     	 strh r3,[r7,#18]
 434:../SSC/Src/ecatslv.c **** 
 435:../SSC/Src/ecatslv.c **** 
 436:../SSC/Src/ecatslv.c ****       if (!(pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE))
 910              	 .loc 4 436 0
 911 00fa FB68     	 ldr r3,[r7,#12]
 912 00fc 9B79     	 ldrb r3,[r3,#6]
 913 00fe 03F00103 	 and r3,r3,#1
 914 0102 002B     	 cmp r3,#0
 915 0104 02D1     	 bne .L48
 437:../SSC/Src/ecatslv.c ****             /* send mailbox is not enabled */
 438:../SSC/Src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 916              	 .loc 4 438 0
 917 0106 1623     	 movs r3,#22
 918 0108 BB75     	 strb r3,[r7,#22]
 919 010a 2BE0     	 b .L47
 920              	.L48:
 439:../SSC/Src/ecatslv.c ****         else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) != SM
 921              	 .loc 4 439 0
 922 010c FB68     	 ldr r3,[r7,#12]
 923 010e 1B79     	 ldrb r3,[r3,#4]
 924 0110 03F00C03 	 and r3,r3,#12
 925 0114 002B     	 cmp r3,#0
 926 0116 02D0     	 beq .L49
 440:../SSC/Src/ecatslv.c ****            /* receive mailbox is not readable by the master*/
 441:../SSC/Src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 927              	 .loc 4 441 0
 928 0118 1623     	 movs r3,#22
 929 011a BB75     	 strb r3,[r7,#22]
 930 011c 22E0     	 b .L47
 931              	.L49:
 442:../SSC/Src/ecatslv.c ****         else if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) != SM_SETT
 932              	 .loc 4 442 0
 933 011e FB68     	 ldr r3,[r7,#12]
 934 0120 1B79     	 ldrb r3,[r3,#4]
 935 0122 03F00203 	 and r3,r3,#2
 936 0126 002B     	 cmp r3,#0
 937 0128 02D1     	 bne .L50
 443:../SSC/Src/ecatslv.c ****             /* receive mailbox is not in one buffer mode */
 444:../SSC/Src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 938              	 .loc 4 444 0
 939 012a 1623     	 movs r3,#22
 940 012c BB75     	 strb r3,[r7,#22]
 941 012e 19E0     	 b .L47
 942              	.L50:
 445:../SSC/Src/ecatslv.c ****         else if ( SMLength < MIN_MBX_SIZE )
 943              	 .loc 4 445 0
 944 0130 BB8A     	 ldrh r3,[r7,#20]
 945 0132 212B     	 cmp r3,#33
 946 0134 02D8     	 bhi .L51
 446:../SSC/Src/ecatslv.c ****             /* send mailbox size is too small */
 447:../SSC/Src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 947              	 .loc 4 447 0
 948 0136 1623     	 movs r3,#22
 949 0138 BB75     	 strb r3,[r7,#22]
 950 013a 13E0     	 b .L47
 951              	.L51:
 448:../SSC/Src/ecatslv.c ****         else if ( SMLength > MAX_MBX_SIZE )
 952              	 .loc 4 448 0
 953 013c BB8A     	 ldrh r3,[r7,#20]
 954 013e B3F5807F 	 cmp r3,#256
 955 0142 02D9     	 bls .L52
 449:../SSC/Src/ecatslv.c ****             /* send mailbox size is too great */
 450:../SSC/Src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 956              	 .loc 4 450 0
 957 0144 1623     	 movs r3,#22
 958 0146 BB75     	 strb r3,[r7,#22]
 959 0148 0CE0     	 b .L47
 960              	.L52:
 451:../SSC/Src/ecatslv.c ****          else if ( SMAddress < MIN_MBX_READ_ADDRESS )
 961              	 .loc 4 451 0
 962 014a 7B8A     	 ldrh r3,[r7,#18]
 963 014c B3F5805F 	 cmp r3,#4096
 964 0150 02D2     	 bcs .L53
 452:../SSC/Src/ecatslv.c ****             /* send mailbox address is too small */
 453:../SSC/Src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 965              	 .loc 4 453 0
 966 0152 1623     	 movs r3,#22
 967 0154 BB75     	 strb r3,[r7,#22]
 968 0156 05E0     	 b .L47
 969              	.L53:
 454:../SSC/Src/ecatslv.c ****         else if ( SMAddress > MAX_MBX_READ_ADDRESS )
 970              	 .loc 4 454 0
 971 0158 7B8A     	 ldrh r3,[r7,#18]
 972 015a B3F5405F 	 cmp r3,#12288
 973 015e 01D3     	 bcc .L47
 455:../SSC/Src/ecatslv.c ****             /* send mailbox address is too great */
 456:../SSC/Src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDMBXCFGINPREOP;
 974              	 .loc 4 456 0
 975 0160 1623     	 movs r3,#22
 976 0162 BB75     	 strb r3,[r7,#22]
 977              	.L47:
 457:../SSC/Src/ecatslv.c **** 
 458:../SSC/Src/ecatslv.c ****     }
 459:../SSC/Src/ecatslv.c **** 
 460:../SSC/Src/ecatslv.c ****     if ( result == 0 && maxChannel > PROCESS_DATA_IN )
 978              	 .loc 4 460 0
 979 0164 BB7D     	 ldrb r3,[r7,#22]
 980 0166 002B     	 cmp r3,#0
 981 0168 71D1     	 bne .L54
 982              	 .loc 4 460 0 is_stmt 0 discriminator 1
 983 016a FB79     	 ldrb r3,[r7,#7]
 984 016c 032B     	 cmp r3,#3
 985 016e 6ED9     	 bls .L54
 461:../SSC/Src/ecatslv.c ****     {
 462:../SSC/Src/ecatslv.c ****         /* b3BufferMode is only set, if inputs and outputs are running in 3-Buffer-Mode when leavin
 463:../SSC/Src/ecatslv.c ****         b3BufferMode = TRUE;
 986              	 .loc 4 463 0 is_stmt 1
 987 0170 4A4B     	 ldr r3,.L87+4
 988 0172 0122     	 movs r2,#1
 989 0174 1A70     	 strb r2,[r3]
 464:../SSC/Src/ecatslv.c ****         /* check the Sync Manager Parameter for the Inputs (Sync Manager Channel 2) */
 465:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 466:../SSC/Src/ecatslv.c ****         pSyncMan = GetSyncMan(PROCESS_DATA_IN);
 990              	 .loc 4 466 0
 991 0176 0320     	 movs r0,#3
 992 0178 FFF7FEFF 	 bl GetSyncMan
 993 017c F860     	 str r0,[r7,#12]
 467:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 468:../SSC/Src/ecatslv.c **** 
 469:../SSC/Src/ecatslv.c ****     SMLength = pSyncMan->Length;
 994              	 .loc 4 469 0
 995 017e FB68     	 ldr r3,[r7,#12]
 996 0180 9A78     	 ldrb r2,[r3,#2]
 997 0182 DB78     	 ldrb r3,[r3,#3]
 998 0184 1B02     	 lsls r3,r3,#8
 999 0186 1343     	 orrs r3,r3,r2
 1000 0188 BB82     	 strh r3,[r7,#20]
 470:../SSC/Src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 1001              	 .loc 4 470 0
 1002 018a FB68     	 ldr r3,[r7,#12]
 1003 018c 1A78     	 ldrb r2,[r3]
 1004 018e 5B78     	 ldrb r3,[r3,#1]
 1005 0190 1B02     	 lsls r3,r3,#8
 1006 0192 1343     	 orrs r3,r3,r2
 1007 0194 7B82     	 strh r3,[r7,#18]
 471:../SSC/Src/ecatslv.c **** 
 472:../SSC/Src/ecatslv.c **** 
 473:../SSC/Src/ecatslv.c ****         if ((pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE) != 0 && SMLe
 1008              	 .loc 4 473 0
 1009 0196 FB68     	 ldr r3,[r7,#12]
 1010 0198 9B79     	 ldrb r3,[r3,#6]
 1011 019a 03F00103 	 and r3,r3,#1
 1012 019e 002B     	 cmp r3,#0
 1013 01a0 05D0     	 beq .L55
 1014              	 .loc 4 473 0 is_stmt 0 discriminator 1
 1015 01a2 BB8A     	 ldrh r3,[r7,#20]
 1016 01a4 002B     	 cmp r3,#0
 1017 01a6 02D1     	 bne .L55
 474:../SSC/Src/ecatslv.c ****             /* the SM3 size is 0 and the SM3 is active */
 475:../SSC/Src/ecatslv.c ****             result = SYNCMANCHSETTINGS+1;
 1018              	 .loc 4 475 0 is_stmt 1
 1019 01a8 0423     	 movs r3,#4
 1020 01aa BB75     	 strb r3,[r7,#22]
 1021 01ac 4AE0     	 b .L56
 1022              	.L55:
 476:../SSC/Src/ecatslv.c ****         else if (pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE)
 1023              	 .loc 4 476 0
 1024 01ae FB68     	 ldr r3,[r7,#12]
 1025 01b0 9B79     	 ldrb r3,[r3,#6]
 1026 01b2 03F00103 	 and r3,r3,#1
 1027 01b6 002B     	 cmp r3,#0
 1028 01b8 3BD0     	 beq .L57
 477:../SSC/Src/ecatslv.c ****         {
 478:../SSC/Src/ecatslv.c ****             /* Sync Manager Channel 3 is active, input size has to greater 0 */
 479:../SSC/Src/ecatslv.c ****             if ( SMLength != nPdInputSize || nPdInputSize == 0 || SMLength > MAX_PD_INPUT_SIZE)
 1029              	 .loc 4 479 0
 1030 01ba 394B     	 ldr r3,.L87+8
 1031 01bc 1B88     	 ldrh r3,[r3]
 1032 01be BA8A     	 ldrh r2,[r7,#20]
 1033 01c0 9A42     	 cmp r2,r3
 1034 01c2 06D1     	 bne .L58
 1035              	 .loc 4 479 0 is_stmt 0 discriminator 1
 1036 01c4 364B     	 ldr r3,.L87+8
 1037 01c6 1B88     	 ldrh r3,[r3]
 1038 01c8 002B     	 cmp r3,#0
 1039 01ca 02D0     	 beq .L58
 1040              	 .loc 4 479 0 discriminator 2
 1041 01cc BB8A     	 ldrh r3,[r7,#20]
 1042 01ce 442B     	 cmp r3,#68
 1043 01d0 02D9     	 bls .L59
 1044              	.L58:
 480:../SSC/Src/ecatslv.c ****                 /* sizes don't match */
 481:../SSC/Src/ecatslv.c ****                 result = SYNCMANCHSIZE+1;
 1045              	 .loc 4 481 0 is_stmt 1
 1046 01d2 0323     	 movs r3,#3
 1047 01d4 BB75     	 strb r3,[r7,#22]
 1048 01d6 35E0     	 b .L56
 1049              	.L59:
 482:../SSC/Src/ecatslv.c ****             else
 483:../SSC/Src/ecatslv.c ****                 /* sizes matches */
 484:../SSC/Src/ecatslv.c ****             if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) == SM_
 1050              	 .loc 4 484 0
 1051 01d8 FB68     	 ldr r3,[r7,#12]
 1052 01da 1B79     	 ldrb r3,[r3,#4]
 1053 01dc 03F00C03 	 and r3,r3,#12
 1054 01e0 002B     	 cmp r3,#0
 1055 01e2 23D1     	 bne .L61
 485:../SSC/Src/ecatslv.c ****             {
 486:../SSC/Src/ecatslv.c ****                 /* settings match */
 487:../SSC/Src/ecatslv.c ****                 if ( ( ( nAlStatus == STATE_PREOP )&&( SMAddress >= MIN_PD_READ_ADDRESS )&&( SMAddr
 1056              	 .loc 4 487 0
 1057 01e4 2F4B     	 ldr r3,.L87+12
 1058 01e6 1B78     	 ldrb r3,[r3]
 1059 01e8 022B     	 cmp r3,#2
 1060 01ea 07D1     	 bne .L62
 1061              	 .loc 4 487 0 is_stmt 0 discriminator 1
 1062 01ec 7B8A     	 ldrh r3,[r7,#18]
 1063 01ee B3F5805F 	 cmp r3,#4096
 1064 01f2 03D3     	 bcc .L62
 1065              	 .loc 4 487 0 discriminator 2
 1066 01f4 7B8A     	 ldrh r3,[r7,#18]
 1067 01f6 B3F5405F 	 cmp r3,#12288
 1068 01fa 08D3     	 bcc .L63
 1069              	.L62:
 488:../SSC/Src/ecatslv.c ****                    ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrInputData ) )
 1070              	 .loc 4 488 0 is_stmt 1
 1071 01fc 294B     	 ldr r3,.L87+12
 1072 01fe 1B78     	 ldrb r3,[r3]
 1073 0200 022B     	 cmp r3,#2
 1074 0202 0FD0     	 beq .L64
 1075              	 .loc 4 488 0 is_stmt 0 discriminator 1
 1076 0204 284B     	 ldr r3,.L87+16
 1077 0206 1B88     	 ldrh r3,[r3]
 1078 0208 7A8A     	 ldrh r2,[r7,#18]
 1079 020a 9A42     	 cmp r2,r3
 1080 020c 0AD1     	 bne .L64
 1081              	.L63:
 489:../SSC/Src/ecatslv.c ****                     )
 490:../SSC/Src/ecatslv.c ****                 {
 491:../SSC/Src/ecatslv.c ****                     /* addresses match */
 492:../SSC/Src/ecatslv.c **** 
 493:../SSC/Src/ecatslv.c ****                     if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_MASK) == 
 1082              	 .loc 4 493 0 is_stmt 1
 1083 020e FB68     	 ldr r3,[r7,#12]
 1084 0210 1B79     	 ldrb r3,[r3,#4]
 1085 0212 03F00203 	 and r3,r3,#2
 1086 0216 002B     	 cmp r3,#0
 1087 0218 03D0     	 beq .L65
 494:../SSC/Src/ecatslv.c ****                         /* inputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 495:../SSC/Src/ecatslv.c ****                         b3BufferMode = FALSE;
 1088              	 .loc 4 495 0
 1089 021a 204B     	 ldr r3,.L87+4
 1090 021c 0022     	 movs r2,#0
 1091 021e 1A70     	 strb r2,[r3]
 493:../SSC/Src/ecatslv.c ****                         /* inputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 1092              	 .loc 4 493 0
 1093 0220 03E0     	 b .L66
 1094              	.L65:
 1095 0222 02E0     	 b .L66
 1096              	.L64:
 496:../SSC/Src/ecatslv.c ****                 }
 497:../SSC/Src/ecatslv.c ****                 else
 498:../SSC/Src/ecatslv.c ****                     /* input address is out of the allowed area or has changed in SAFEOP or OP */
 499:../SSC/Src/ecatslv.c ****                     result = SYNCMANCHADDRESS+1;
 1097              	 .loc 4 499 0
 1098 0224 0223     	 movs r3,#2
 1099 0226 BB75     	 strb r3,[r7,#22]
 1100 0228 0CE0     	 b .L56
 1101              	.L66:
 1102 022a 0BE0     	 b .L56
 1103              	.L61:
 500:../SSC/Src/ecatslv.c ****             }
 501:../SSC/Src/ecatslv.c ****             else
 502:../SSC/Src/ecatslv.c ****                 /* input settings do not match */
 503:../SSC/Src/ecatslv.c ****                 result = SYNCMANCHSETTINGS+1;
 1104              	 .loc 4 503 0
 1105 022c 0423     	 movs r3,#4
 1106 022e BB75     	 strb r3,[r7,#22]
 1107 0230 08E0     	 b .L56
 1108              	.L57:
 504:../SSC/Src/ecatslv.c ****         }
 505:../SSC/Src/ecatslv.c ****         else if ( SMLength != 0 || nPdInputSize != 0 )
 1109              	 .loc 4 505 0
 1110 0232 BB8A     	 ldrh r3,[r7,#20]
 1111 0234 002B     	 cmp r3,#0
 1112 0236 03D1     	 bne .L67
 1113              	 .loc 4 505 0 is_stmt 0 discriminator 1
 1114 0238 194B     	 ldr r3,.L87+8
 1115 023a 1B88     	 ldrh r3,[r3]
 1116 023c 002B     	 cmp r3,#0
 1117 023e 01D0     	 beq .L56
 1118              	.L67:
 506:../SSC/Src/ecatslv.c ****             /* input size is not zero although the SM3 channel is not enabled */
 507:../SSC/Src/ecatslv.c ****             result = SYNCMANCHSIZE+1;
 1119              	 .loc 4 507 0 is_stmt 1
 1120 0240 0323     	 movs r3,#3
 1121 0242 BB75     	 strb r3,[r7,#22]
 1122              	.L56:
 508:../SSC/Src/ecatslv.c **** 
 509:../SSC/Src/ecatslv.c **** 
 510:../SSC/Src/ecatslv.c **** 
 511:../SSC/Src/ecatslv.c ****         if ( result != 0 )
 1123              	 .loc 4 511 0
 1124 0244 BB7D     	 ldrb r3,[r7,#22]
 1125 0246 002B     	 cmp r3,#0
 1126 0248 01D0     	 beq .L54
 512:../SSC/Src/ecatslv.c ****         {
 513:../SSC/Src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDSMINCFG;
 1127              	 .loc 4 513 0
 1128 024a 1E23     	 movs r3,#30
 1129 024c BB75     	 strb r3,[r7,#22]
 1130              	.L54:
 514:../SSC/Src/ecatslv.c ****         }
 515:../SSC/Src/ecatslv.c ****     }
 516:../SSC/Src/ecatslv.c **** 
 517:../SSC/Src/ecatslv.c **** 
 518:../SSC/Src/ecatslv.c **** //    else
 519:../SSC/Src/ecatslv.c ****     if ( result == 0 && maxChannel > PROCESS_DATA_OUT )
 1131              	 .loc 4 519 0
 1132 024e BB7D     	 ldrb r3,[r7,#22]
 1133 0250 002B     	 cmp r3,#0
 1134 0252 40F08A80 	 bne .L68
 1135              	 .loc 4 519 0 is_stmt 0 discriminator 1
 1136 0256 FB79     	 ldrb r3,[r7,#7]
 1137 0258 022B     	 cmp r3,#2
 1138 025a 40F28680 	 bls .L68
 520:../SSC/Src/ecatslv.c ****     {
 521:../SSC/Src/ecatslv.c ****         /* check the Sync Manager Parameter for the Outputs (Sync Manager Channel 2) */
 522:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 523:../SSC/Src/ecatslv.c ****         pSyncMan = GetSyncMan(PROCESS_DATA_OUT);
 1139              	 .loc 4 523 0 is_stmt 1
 1140 025e 0220     	 movs r0,#2
 1141 0260 FFF7FEFF 	 bl GetSyncMan
 1142 0264 F860     	 str r0,[r7,#12]
 524:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 525:../SSC/Src/ecatslv.c **** 
 526:../SSC/Src/ecatslv.c ****     SMLength = pSyncMan->Length;
 1143              	 .loc 4 526 0
 1144 0266 FB68     	 ldr r3,[r7,#12]
 1145 0268 9A78     	 ldrb r2,[r3,#2]
 1146 026a DB78     	 ldrb r3,[r3,#3]
 1147 026c 1B02     	 lsls r3,r3,#8
 1148 026e 1343     	 orrs r3,r3,r2
 1149 0270 BB82     	 strh r3,[r7,#20]
 527:../SSC/Src/ecatslv.c ****     SMAddress = pSyncMan->PhysicalStartAddress;
 1150              	 .loc 4 527 0
 1151 0272 FB68     	 ldr r3,[r7,#12]
 1152 0274 1A78     	 ldrb r2,[r3]
 1153 0276 5B78     	 ldrb r3,[r3,#1]
 1154 0278 1B02     	 lsls r3,r3,#8
 1155 027a 1343     	 orrs r3,r3,r2
 1156 027c 7B82     	 strh r3,[r7,#18]
 528:../SSC/Src/ecatslv.c **** 
 529:../SSC/Src/ecatslv.c **** 
 530:../SSC/Src/ecatslv.c ****     if ( (pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE) != 0 && SMLengt
 1157              	 .loc 4 530 0
 1158 027e FB68     	 ldr r3,[r7,#12]
 1159 0280 9B79     	 ldrb r3,[r3,#6]
 1160 0282 03F00103 	 and r3,r3,#1
 1161 0286 002B     	 cmp r3,#0
 1162 0288 10D0     	 beq .L69
 1163              	 .loc 4 530 0 is_stmt 0 discriminator 1
 1164 028a BB8A     	 ldrh r3,[r7,#20]
 1165 028c 002B     	 cmp r3,#0
 1166 028e 0DD1     	 bne .L69
 531:../SSC/Src/ecatslv.c ****             /* the SM2 size is 0 and the SM2 is active */
 532:../SSC/Src/ecatslv.c ****             result = SYNCMANCHSETTINGS+1;
 1167              	 .loc 4 532 0 is_stmt 1
 1168 0290 0423     	 movs r3,#4
 1169 0292 BB75     	 strb r3,[r7,#22]
 1170 0294 64E0     	 b .L70
 1171              	.L88:
 1172 0296 00BF     	 .align 2
 1173              	.L87:
 1174 0298 00000000 	 .word nMaxEscAddress
 1175 029c 00000000 	 .word b3BufferMode
 1176 02a0 00000000 	 .word nPdInputSize
 1177 02a4 00000000 	 .word nAlStatus
 1178 02a8 00000000 	 .word nEscAddrInputData
 1179              	.L69:
 533:../SSC/Src/ecatslv.c ****         else if (pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET] & SM_SETTING_ENABLE_VALUE)
 1180              	 .loc 4 533 0
 1181 02ac FB68     	 ldr r3,[r7,#12]
 1182 02ae 9B79     	 ldrb r3,[r3,#6]
 1183 02b0 03F00103 	 and r3,r3,#1
 1184 02b4 002B     	 cmp r3,#0
 1185 02b6 4AD0     	 beq .L71
 534:../SSC/Src/ecatslv.c ****         {
 535:../SSC/Src/ecatslv.c ****             /* Sync Manager Channel 2 is active, output size has to greater 0 */
 536:../SSC/Src/ecatslv.c ****             if ( SMLength == nPdOutputSize && nPdOutputSize != 0 && SMLength <= ((UINT16)MAX_PD_OUT
 1186              	 .loc 4 536 0
 1187 02b8 3A4B     	 ldr r3,.L89
 1188 02ba 1B88     	 ldrh r3,[r3]
 1189 02bc BA8A     	 ldrh r2,[r7,#20]
 1190 02be 9A42     	 cmp r2,r3
 1191 02c0 41D1     	 bne .L72
 1192              	 .loc 4 536 0 is_stmt 0 discriminator 1
 1193 02c2 384B     	 ldr r3,.L89
 1194 02c4 1B88     	 ldrh r3,[r3]
 1195 02c6 002B     	 cmp r3,#0
 1196 02c8 3DD0     	 beq .L72
 1197              	 .loc 4 536 0 discriminator 2
 1198 02ca BB8A     	 ldrh r3,[r7,#20]
 1199 02cc 442B     	 cmp r3,#68
 1200 02ce 3AD8     	 bhi .L72
 537:../SSC/Src/ecatslv.c **** 
 538:../SSC/Src/ecatslv.c ****             {
 539:../SSC/Src/ecatslv.c ****                 /* sizes match */
 540:../SSC/Src/ecatslv.c ****                 if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_DIRECTION_MASK) ==
 1201              	 .loc 4 540 0 is_stmt 1
 1202 02d0 FB68     	 ldr r3,[r7,#12]
 1203 02d2 1B79     	 ldrb r3,[r3,#4]
 1204 02d4 03F00C03 	 and r3,r3,#12
 1205 02d8 042B     	 cmp r3,#4
 1206 02da 30D1     	 bne .L73
 541:../SSC/Src/ecatslv.c ****                 {
 542:../SSC/Src/ecatslv.c ****                     /* settings match */
 543:../SSC/Src/ecatslv.c ****                     if ( ( ( nAlStatus == STATE_PREOP )&&( SMAddress >= MIN_PD_WRITE_ADDRESS )&&( S
 1207              	 .loc 4 543 0
 1208 02dc 324B     	 ldr r3,.L89+4
 1209 02de 1B78     	 ldrb r3,[r3]
 1210 02e0 022B     	 cmp r3,#2
 1211 02e2 07D1     	 bne .L74
 1212              	 .loc 4 543 0 is_stmt 0 discriminator 1
 1213 02e4 7B8A     	 ldrh r3,[r7,#18]
 1214 02e6 B3F5805F 	 cmp r3,#4096
 1215 02ea 03D3     	 bcc .L74
 1216              	 .loc 4 543 0 discriminator 2
 1217 02ec 7B8A     	 ldrh r3,[r7,#18]
 1218 02ee B3F5405F 	 cmp r3,#12288
 1219 02f2 08D3     	 bcc .L75
 1220              	.L74:
 544:../SSC/Src/ecatslv.c ****                        ||( ( nAlStatus != STATE_PREOP )&&( SMAddress == nEscAddrOutputData ) )
 1221              	 .loc 4 544 0 is_stmt 1
 1222 02f4 2C4B     	 ldr r3,.L89+4
 1223 02f6 1B78     	 ldrb r3,[r3]
 1224 02f8 022B     	 cmp r3,#2
 1225 02fa 1CD0     	 beq .L76
 1226              	 .loc 4 544 0 is_stmt 0 discriminator 1
 1227 02fc 2B4B     	 ldr r3,.L89+8
 1228 02fe 1B88     	 ldrh r3,[r3]
 1229 0300 7A8A     	 ldrh r2,[r7,#18]
 1230 0302 9A42     	 cmp r2,r3
 1231 0304 17D1     	 bne .L76
 1232              	.L75:
 545:../SSC/Src/ecatslv.c ****                         )
 546:../SSC/Src/ecatslv.c ****                     {
 547:../SSC/Src/ecatslv.c ****                         /* addresses match */
 548:../SSC/Src/ecatslv.c ****                         {
 549:../SSC/Src/ecatslv.c ****                             /* check, if watchdog trigger is enabled */
 550:../SSC/Src/ecatslv.c ****                             if (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_WATCHDOG
 1233              	 .loc 4 550 0 is_stmt 1
 1234 0306 FB68     	 ldr r3,[r7,#12]
 1235 0308 1B79     	 ldrb r3,[r3,#4]
 1236 030a 03F04003 	 and r3,r3,#64
 1237 030e 002B     	 cmp r3,#0
 1238 0310 03D0     	 beq .L77
 551:../SSC/Src/ecatslv.c ****                             {
 552:../SSC/Src/ecatslv.c ****                                 bWdTrigger = TRUE;
 1239              	 .loc 4 552 0
 1240 0312 274B     	 ldr r3,.L89+12
 1241 0314 0122     	 movs r2,#1
 1242 0316 1A70     	 strb r2,[r3]
 1243 0318 02E0     	 b .L78
 1244              	.L77:
 553:../SSC/Src/ecatslv.c ****                             }
 554:../SSC/Src/ecatslv.c ****                             else
 555:../SSC/Src/ecatslv.c ****                             {
 556:../SSC/Src/ecatslv.c ****                                 bWdTrigger = FALSE;
 1245              	 .loc 4 556 0
 1246 031a 254B     	 ldr r3,.L89+12
 1247 031c 0022     	 movs r2,#0
 1248 031e 1A70     	 strb r2,[r3]
 1249              	.L78:
 557:../SSC/Src/ecatslv.c ****                             }
 558:../SSC/Src/ecatslv.c **** 
 559:../SSC/Src/ecatslv.c ****                             if ( (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_M
 1250              	 .loc 4 559 0
 1251 0320 FB68     	 ldr r3,[r7,#12]
 1252 0322 1B79     	 ldrb r3,[r3,#4]
 1253 0324 03F00203 	 and r3,r3,#2
 1254 0328 002B     	 cmp r3,#0
 1255 032a 03D0     	 beq .L79
 560:../SSC/Src/ecatslv.c ****                                 /* outputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 561:../SSC/Src/ecatslv.c ****                                 b3BufferMode = FALSE;
 1256              	 .loc 4 561 0
 1257 032c 214B     	 ldr r3,.L89+16
 1258 032e 0022     	 movs r2,#0
 1259 0330 1A70     	 strb r2,[r3]
 559:../SSC/Src/ecatslv.c ****                                 /* outputs are running in 1-Buffer-Mode, reset flag b3BufferMode */
 1260              	 .loc 4 559 0
 1261 0332 03E0     	 b .L80
 1262              	.L79:
 1263 0334 02E0     	 b .L80
 1264              	.L76:
 562:../SSC/Src/ecatslv.c ****                         }
 563:../SSC/Src/ecatslv.c ****                     }
 564:../SSC/Src/ecatslv.c ****                     else
 565:../SSC/Src/ecatslv.c ****                         /* output address is out of the allowed area or has changed in SAFEOP or OP
 566:../SSC/Src/ecatslv.c ****                         result = SYNCMANCHADDRESS+1;
 1265              	 .loc 4 566 0
 1266 0336 0223     	 movs r3,#2
 1267 0338 BB75     	 strb r3,[r7,#22]
 1268 033a 03E0     	 b .L81
 1269              	.L80:
 1270 033c 02E0     	 b .L81
 1271              	.L73:
 567:../SSC/Src/ecatslv.c ****                 }
 568:../SSC/Src/ecatslv.c ****                 else
 569:../SSC/Src/ecatslv.c ****                     /* output settings do not match */
 570:../SSC/Src/ecatslv.c ****                     result = SYNCMANCHSETTINGS+1;
 1272              	 .loc 4 570 0
 1273 033e 0423     	 movs r3,#4
 1274 0340 BB75     	 strb r3,[r7,#22]
 540:../SSC/Src/ecatslv.c ****                 {
 1275              	 .loc 4 540 0
 1276 0342 03E0     	 b .L82
 1277              	.L81:
 540:../SSC/Src/ecatslv.c ****                 {
 1278              	 .loc 4 540 0 is_stmt 0 discriminator 4
 1279 0344 02E0     	 b .L82
 1280              	.L72:
 571:../SSC/Src/ecatslv.c ****             }
 572:../SSC/Src/ecatslv.c ****             else
 573:../SSC/Src/ecatslv.c ****                 /* output sizes don't match */
 574:../SSC/Src/ecatslv.c ****                 result = SYNCMANCHSIZE+1;
 1281              	 .loc 4 574 0 is_stmt 1
 1282 0346 0323     	 movs r3,#3
 1283 0348 BB75     	 strb r3,[r7,#22]
 1284 034a 09E0     	 b .L70
 1285              	.L82:
 1286 034c 08E0     	 b .L70
 1287              	.L71:
 575:../SSC/Src/ecatslv.c ****         }
 576:../SSC/Src/ecatslv.c ****         else if ( SMLength != 0 || nPdOutputSize != 0 )
 1288              	 .loc 4 576 0
 1289 034e BB8A     	 ldrh r3,[r7,#20]
 1290 0350 002B     	 cmp r3,#0
 1291 0352 03D1     	 bne .L83
 1292              	 .loc 4 576 0 is_stmt 0 discriminator 1
 1293 0354 134B     	 ldr r3,.L89
 1294 0356 1B88     	 ldrh r3,[r3]
 1295 0358 002B     	 cmp r3,#0
 1296 035a 01D0     	 beq .L70
 1297              	.L83:
 577:../SSC/Src/ecatslv.c ****             /* output size is not zero although the SM2 channel is not enabled */
 578:../SSC/Src/ecatslv.c ****             result = SYNCMANCHSIZE+1;
 1298              	 .loc 4 578 0 is_stmt 1
 1299 035c 0323     	 movs r3,#3
 1300 035e BB75     	 strb r3,[r7,#22]
 1301              	.L70:
 579:../SSC/Src/ecatslv.c **** 
 580:../SSC/Src/ecatslv.c ****         if ( result != 0 )
 1302              	 .loc 4 580 0
 1303 0360 BB7D     	 ldrb r3,[r7,#22]
 1304 0362 002B     	 cmp r3,#0
 1305 0364 01D0     	 beq .L68
 581:../SSC/Src/ecatslv.c ****         {
 582:../SSC/Src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDSMOUTCFG;
 1306              	 .loc 4 582 0
 1307 0366 1D23     	 movs r3,#29
 1308 0368 BB75     	 strb r3,[r7,#22]
 1309              	.L68:
 583:../SSC/Src/ecatslv.c ****         }
 584:../SSC/Src/ecatslv.c ****     }
 585:../SSC/Src/ecatslv.c **** 
 586:../SSC/Src/ecatslv.c **** 
 587:../SSC/Src/ecatslv.c ****     if ( result == 0 )
 1310              	 .loc 4 587 0
 1311 036a BB7D     	 ldrb r3,[r7,#22]
 1312 036c 002B     	 cmp r3,#0
 1313 036e 13D1     	 bne .L84
 588:../SSC/Src/ecatslv.c ****     {
 589:../SSC/Src/ecatslv.c ****         /* the Enable-Byte of the rest of the SM channels has to be read to acknowledge the SM-Chan
 590:../SSC/Src/ecatslv.c ****         for (i = maxChannel; i < nMaxSyncMan; i++)
 1314              	 .loc 4 590 0
 1315 0370 FB79     	 ldrb r3,[r7,#7]
 1316 0372 FB75     	 strb r3,[r7,#23]
 1317 0374 0BE0     	 b .L85
 1318              	.L86:
 591:../SSC/Src/ecatslv.c ****         {
 592:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 593:../SSC/Src/ecatslv.c ****             pSyncMan = GetSyncMan(i);
 1319              	 .loc 4 593 0 discriminator 3
 1320 0376 FB7D     	 ldrb r3,[r7,#23]
 1321 0378 1846     	 mov r0,r3
 1322 037a FFF7FEFF 	 bl GetSyncMan
 1323 037e F860     	 str r0,[r7,#12]
 594:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 595:../SSC/Src/ecatslv.c ****             SMActivate = pSyncMan->Settings[SM_SETTING_ACTIVATE_OFFSET];
 1324              	 .loc 4 595 0 discriminator 3
 1325 0380 FB68     	 ldr r3,[r7,#12]
 1326 0382 9A79     	 ldrb r2,[r3,#6]
 1327 0384 0C4B     	 ldr r3,.L89+20
 1328 0386 1A70     	 strb r2,[r3]
 590:../SSC/Src/ecatslv.c ****         {
 1329              	 .loc 4 590 0 discriminator 3
 1330 0388 FB7D     	 ldrb r3,[r7,#23]
 1331 038a 0133     	 adds r3,r3,#1
 1332 038c FB75     	 strb r3,[r7,#23]
 1333              	.L85:
 590:../SSC/Src/ecatslv.c ****         {
 1334              	 .loc 4 590 0 is_stmt 0 discriminator 1
 1335 038e 0B4B     	 ldr r3,.L89+24
 1336 0390 1B78     	 ldrb r3,[r3]
 1337 0392 FA7D     	 ldrb r2,[r7,#23]
 1338 0394 9A42     	 cmp r2,r3
 1339 0396 EED3     	 bcc .L86
 1340              	.L84:
 596:../SSC/Src/ecatslv.c ****         }
 597:../SSC/Src/ecatslv.c ****     }
 598:../SSC/Src/ecatslv.c ****     return result;
 1341              	 .loc 4 598 0 is_stmt 1
 1342 0398 BB7D     	 ldrb r3,[r7,#22]
 1343              	.L39:
 599:../SSC/Src/ecatslv.c **** }
 1344              	 .loc 4 599 0
 1345 039a 1846     	 mov r0,r3
 1346 039c 1837     	 adds r7,r7,#24
 1347              	.LCFI63:
 1348              	 .cfi_def_cfa_offset 8
 1349 039e BD46     	 mov sp,r7
 1350              	.LCFI64:
 1351              	 .cfi_def_cfa_register 13
 1352              	 
 1353 03a0 80BD     	 pop {r7,pc}
 1354              	.L90:
 1355 03a2 00BF     	 .align 2
 1356              	.L89:
 1357 03a4 00000000 	 .word nPdOutputSize
 1358 03a8 00000000 	 .word nAlStatus
 1359 03ac 00000000 	 .word nEscAddrOutputData
 1360 03b0 00000000 	 .word bWdTrigger
 1361 03b4 00000000 	 .word b3BufferMode
 1362 03b8 00000000 	 .word SMActivate
 1363 03bc 00000000 	 .word nMaxSyncMan
 1364              	 .cfi_endproc
 1365              	.LFE178:
 1367              	 .section .text.StartInputHandler,"ax",%progbits
 1368              	 .align 2
 1369              	 .global StartInputHandler
 1370              	 .thumb
 1371              	 .thumb_func
 1373              	StartInputHandler:
 1374              	.LFB179:
 600:../SSC/Src/ecatslv.c **** 
 601:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
 602:../SSC/Src/ecatslv.c **** /**
 603:../SSC/Src/ecatslv.c ****  \return    AL Status Code (see ecatslv.h ALSTATUSCODE_....)
 604:../SSC/Src/ecatslv.c **** 
 605:../SSC/Src/ecatslv.c ****  \brief    This function is called in case of the state transition from PREOP to SAFEOP.
 606:../SSC/Src/ecatslv.c ****  |brief  the areas of the Sync Managers will be checked for overlapping,
 607:../SSC/Src/ecatslv.c ****  \brief  the synchronization mode (Free Run, Synchron, Distributed Clocks) is selected,
 608:../SSC/Src/ecatslv.c ****  \brief  the requested cycle time will be checked, the watchdog is started
 609:../SSC/Src/ecatslv.c ****  \brief  and the AL Event Mask register will be set
 610:../SSC/Src/ecatslv.c **** 
 611:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
 612:../SSC/Src/ecatslv.c **** 
 613:../SSC/Src/ecatslv.c **** UINT16 StartInputHandler(void)
 614:../SSC/Src/ecatslv.c **** {
 1375              	 .loc 4 614 0
 1376              	 .cfi_startproc
 1377              	 
 1378              	 
 1379 0000 80B5     	 push {r7,lr}
 1380              	.LCFI65:
 1381              	 .cfi_def_cfa_offset 8
 1382              	 .cfi_offset 7,-8
 1383              	 .cfi_offset 14,-4
 1384 0002 8CB0     	 sub sp,sp,#48
 1385              	.LCFI66:
 1386              	 .cfi_def_cfa_offset 56
 1387 0004 00AF     	 add r7,sp,#0
 1388              	.LCFI67:
 1389              	 .cfi_def_cfa_register 7
 615:../SSC/Src/ecatslv.c ****     TSYNCMAN ESCMEM * pSyncMan;
 616:../SSC/Src/ecatslv.c ****     UINT8        dcControl;
 617:../SSC/Src/ecatslv.c ****     UINT16     wdiv = 0;
 1390              	 .loc 4 617 0
 1391 0006 0023     	 movs r3,#0
 1392 0008 BB84     	 strh r3,[r7,#36]
 618:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 619:../SSC/Src/ecatslv.c ****     UINT16     wd = 0;
 1393              	 .loc 4 619 0
 1394 000a 0023     	 movs r3,#0
 1395 000c 7B84     	 strh r3,[r7,#34]
 620:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 621:../SSC/Src/ecatslv.c ****     UINT32     cycleTimeSync0 = 0; /* Sync0 cycle time */
 1396              	 .loc 4 621 0
 1397 000e 0023     	 movs r3,#0
 1398 0010 FB61     	 str r3,[r7,#28]
 622:../SSC/Src/ecatslv.c ****     UINT32     cycleTimeSync1 = 0; /* Delay between the Sync0 and Sycn1 signal. A new Sync1 cycle s
 1399              	 .loc 4 622 0
 1400 0012 0023     	 movs r3,#0
 1401 0014 BB61     	 str r3,[r7,#24]
 623:../SSC/Src/ecatslv.c ****     BOOL bSubordinatedCycles = FALSE;
 1402              	 .loc 4 623 0
 1403 0016 0023     	 movs r3,#0
 1404 0018 87F82F30 	 strb r3,[r7,#47]
 624:../SSC/Src/ecatslv.c **** 
 625:../SSC/Src/ecatslv.c ****     UINT16    nPdInputBuffer = 3;
 1405              	 .loc 4 625 0
 1406 001c 0323     	 movs r3,#3
 1407 001e BB85     	 strh r3,[r7,#44]
 626:../SSC/Src/ecatslv.c ****     UINT16    nPdOutputBuffer = 3;
 1408              	 .loc 4 626 0
 1409 0020 0323     	 movs r3,#3
 1410 0022 7B85     	 strh r3,[r7,#42]
 627:../SSC/Src/ecatslv.c **** 
 628:../SSC/Src/ecatslv.c ****     UINT16 SyncType0x1C32 = 0; /* Helper variable for sync type for SM2 (required if no CoE is supp
 1411              	 .loc 4 628 0
 1412 0024 0023     	 movs r3,#0
 1413 0026 3B85     	 strh r3,[r7,#40]
 629:../SSC/Src/ecatslv.c ****     UINT16 SyncType0x1C33 = 0; /* Helper variable for sync type for SM3 (required if no CoE is supp
 1414              	 .loc 4 629 0
 1415 0028 0023     	 movs r3,#0
 1416 002a FB84     	 strh r3,[r7,#38]
 630:../SSC/Src/ecatslv.c **** 
 631:../SSC/Src/ecatslv.c ****     UINT16 u16MinSuppSyncType = 0xFFFF;  /* Minimum supported Sync Types */
 1417              	 .loc 4 631 0
 1418 002c 4FF6FF73 	 movw r3,#65535
 1419 0030 FB82     	 strh r3,[r7,#22]
 632:../SSC/Src/ecatslv.c **** 
 633:../SSC/Src/ecatslv.c ****     u16MinSuppSyncType &= sSyncManOutPar.u16SyncTypesSupported;
 1420              	 .loc 4 633 0
 1421 0032 A24B     	 ldr r3,.L165
 1422 0034 9A89     	 ldrh r2,[r3,#12]
 1423 0036 FB8A     	 ldrh r3,[r7,#22]
 1424 0038 1340     	 ands r3,r3,r2
 1425 003a FB82     	 strh r3,[r7,#22]
 634:../SSC/Src/ecatslv.c ****     u16MinSuppSyncType &= sSyncManInPar.u16SyncTypesSupported;
 1426              	 .loc 4 634 0
 1427 003c A04B     	 ldr r3,.L165+4
 1428 003e 9A89     	 ldrh r2,[r3,#12]
 1429 0040 FB8A     	 ldrh r3,[r7,#22]
 1430 0042 1340     	 ands r3,r3,r2
 1431 0044 FB82     	 strh r3,[r7,#22]
 635:../SSC/Src/ecatslv.c **** 
 636:../SSC/Src/ecatslv.c ****     u16ALEventMask = 0;
 1432              	 .loc 4 636 0
 1433 0046 9F4B     	 ldr r3,.L165+8
 1434 0048 0022     	 movs r2,#0
 1435 004a 1A80     	 strh r2,[r3]
 637:../SSC/Src/ecatslv.c **** 
 638:../SSC/Src/ecatslv.c ****     /* 
 639:../SSC/Src/ecatslv.c ****         --- Check if SyncManager areas overlapping --- 
 640:../SSC/Src/ecatslv.c ****     */
 641:../SSC/Src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 1436              	 .loc 4 641 0
 1437 004c 9E4B     	 ldr r3,.L165+12
 1438 004e 0022     	 movs r2,#0
 1439 0050 1A70     	 strb r2,[r3]
 642:../SSC/Src/ecatslv.c **** 
 643:../SSC/Src/ecatslv.c ****     /* get a pointer to the Sync Manager Channel 2 (Outputs) */
 644:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 645:../SSC/Src/ecatslv.c ****     pSyncMan = GetSyncMan(PROCESS_DATA_OUT);
 1440              	 .loc 4 645 0
 1441 0052 0220     	 movs r0,#2
 1442 0054 FFF7FEFF 	 bl GetSyncMan
 1443 0058 3861     	 str r0,[r7,#16]
 646:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 647:../SSC/Src/ecatslv.c ****     /* store the address of the Sync Manager Channel 2 (Outputs) */
 648:../SSC/Src/ecatslv.c ****     nEscAddrOutputData = pSyncMan->PhysicalStartAddress;
 1444              	 .loc 4 648 0
 1445 005a 3B69     	 ldr r3,[r7,#16]
 1446 005c 1B88     	 ldrh r3,[r3]
 1447 005e 9AB2     	 uxth r2,r3
 1448 0060 9A4B     	 ldr r3,.L165+16
 1449 0062 1A80     	 strh r2,[r3]
 649:../SSC/Src/ecatslv.c ****     /* get the number of output buffer used for calculating the address areas */
 650:../SSC/Src/ecatslv.c ****     if (pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_ONE_BUFFER_VALUE)
 1450              	 .loc 4 650 0
 1451 0064 3B69     	 ldr r3,[r7,#16]
 1452 0066 1B79     	 ldrb r3,[r3,#4]
 1453 0068 03F00203 	 and r3,r3,#2
 1454 006c 002B     	 cmp r3,#0
 1455 006e 01D0     	 beq .L92
 651:../SSC/Src/ecatslv.c ****     {
 652:../SSC/Src/ecatslv.c ****        nPdOutputBuffer = 1;
 1456              	 .loc 4 652 0
 1457 0070 0123     	 movs r3,#1
 1458 0072 7B85     	 strh r3,[r7,#42]
 1459              	.L92:
 653:../SSC/Src/ecatslv.c ****     }
 654:../SSC/Src/ecatslv.c **** 
 655:../SSC/Src/ecatslv.c **** 
 656:../SSC/Src/ecatslv.c ****     /* get a pointer to the Sync Manager Channel 3 (Inputs) */
 657:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
 658:../SSC/Src/ecatslv.c ****     pSyncMan = GetSyncMan(PROCESS_DATA_IN);
 1460              	 .loc 4 658 0
 1461 0074 0320     	 movs r0,#3
 1462 0076 FFF7FEFF 	 bl GetSyncMan
 1463 007a 3861     	 str r0,[r7,#16]
 659:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
 660:../SSC/Src/ecatslv.c ****     /* store the address of the Sync Manager Channel 3 (Inputs)*/
 661:../SSC/Src/ecatslv.c ****     nEscAddrInputData = pSyncMan->PhysicalStartAddress;
 1464              	 .loc 4 661 0
 1465 007c 3B69     	 ldr r3,[r7,#16]
 1466 007e 1B88     	 ldrh r3,[r3]
 1467 0080 9AB2     	 uxth r2,r3
 1468 0082 934B     	 ldr r3,.L165+20
 1469 0084 1A80     	 strh r2,[r3]
 662:../SSC/Src/ecatslv.c ****     
 663:../SSC/Src/ecatslv.c ****     /* get the number of input buffer used for calculating the address areas */
 664:../SSC/Src/ecatslv.c ****     if ( pSyncMan->Settings[SM_SETTING_CONTROL_OFFSET] & SM_SETTING_MODE_ONE_BUFFER_VALUE )
 1470              	 .loc 4 664 0
 1471 0086 3B69     	 ldr r3,[r7,#16]
 1472 0088 1B79     	 ldrb r3,[r3,#4]
 1473 008a 03F00203 	 and r3,r3,#2
 1474 008e 002B     	 cmp r3,#0
 1475 0090 01D0     	 beq .L93
 665:../SSC/Src/ecatslv.c ****         nPdInputBuffer = 1;
 1476              	 .loc 4 665 0
 1477 0092 0123     	 movs r3,#1
 1478 0094 BB85     	 strh r3,[r7,#44]
 1479              	.L93:
 666:../SSC/Src/ecatslv.c **** 
 667:../SSC/Src/ecatslv.c ****     /* it has be checked if the Sync Manager memory areas for Inputs and Outputs will not overlap
 668:../SSC/Src/ecatslv.c ****        the Sync Manager memory areas for the Mailbox */
 669:../SSC/Src/ecatslv.c **** 
 670:../SSC/Src/ecatslv.c ****     if (((nEscAddrInputData + nPdInputSize * nPdInputBuffer) > u16EscAddrSendMbx && (nEscAddrInputD
 1480              	 .loc 4 670 0
 1481 0096 8E4B     	 ldr r3,.L165+20
 1482 0098 1B88     	 ldrh r3,[r3]
 1483 009a 1A46     	 mov r2,r3
 1484 009c 8D4B     	 ldr r3,.L165+24
 1485 009e 1B88     	 ldrh r3,[r3]
 1486 00a0 1946     	 mov r1,r3
 1487 00a2 BB8D     	 ldrh r3,[r7,#44]
 1488 00a4 03FB01F3 	 mul r3,r3,r1
 1489 00a8 1344     	 add r3,r3,r2
 1490 00aa 8B4A     	 ldr r2,.L165+28
 1491 00ac 1288     	 ldrh r2,[r2]
 1492 00ae 9342     	 cmp r3,r2
 1493 00b0 0ADD     	 ble .L94
 1494              	 .loc 4 670 0 is_stmt 0 discriminator 1
 1495 00b2 874B     	 ldr r3,.L165+20
 1496 00b4 1B88     	 ldrh r3,[r3]
 1497 00b6 1A46     	 mov r2,r3
 1498 00b8 874B     	 ldr r3,.L165+28
 1499 00ba 1B88     	 ldrh r3,[r3]
 1500 00bc 1946     	 mov r1,r3
 1501 00be 874B     	 ldr r3,.L165+32
 1502 00c0 1B88     	 ldrh r3,[r3]
 1503 00c2 0B44     	 add r3,r3,r1
 1504 00c4 9A42     	 cmp r2,r3
 1505 00c6 18DB     	 blt .L95
 1506              	.L94:
 671:../SSC/Src/ecatslv.c ****        || ((nEscAddrInputData + nPdInputSize * nPdInputBuffer) > u16EscAddrReceiveMbx && (nEscAddrI
 1507              	 .loc 4 671 0 is_stmt 1
 1508 00c8 814B     	 ldr r3,.L165+20
 1509 00ca 1B88     	 ldrh r3,[r3]
 1510 00cc 1A46     	 mov r2,r3
 1511 00ce 814B     	 ldr r3,.L165+24
 1512 00d0 1B88     	 ldrh r3,[r3]
 1513 00d2 1946     	 mov r1,r3
 1514 00d4 BB8D     	 ldrh r3,[r7,#44]
 1515 00d6 03FB01F3 	 mul r3,r3,r1
 1516 00da 1344     	 add r3,r3,r2
 1517 00dc 804A     	 ldr r2,.L165+36
 1518 00de 1288     	 ldrh r2,[r2]
 1519 00e0 9342     	 cmp r3,r2
 1520 00e2 0CDD     	 ble .L96
 1521              	 .loc 4 671 0 is_stmt 0 discriminator 1
 1522 00e4 7A4B     	 ldr r3,.L165+20
 1523 00e6 1B88     	 ldrh r3,[r3]
 1524 00e8 1A46     	 mov r2,r3
 1525 00ea 7D4B     	 ldr r3,.L165+36
 1526 00ec 1B88     	 ldrh r3,[r3]
 1527 00ee 1946     	 mov r1,r3
 1528 00f0 7C4B     	 ldr r3,.L165+40
 1529 00f2 1B88     	 ldrh r3,[r3]
 1530 00f4 0B44     	 add r3,r3,r1
 1531 00f6 9A42     	 cmp r2,r3
 1532 00f8 01DA     	 bge .L96
 1533              	.L95:
 672:../SSC/Src/ecatslv.c ****         )
 673:../SSC/Src/ecatslv.c ****     {
 674:../SSC/Src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMINCFG;
 1534              	 .loc 4 674 0 is_stmt 1
 1535 00fa 1E23     	 movs r3,#30
 1536 00fc 0AE3     	 b .L97
 1537              	.L96:
 675:../SSC/Src/ecatslv.c ****     }
 676:../SSC/Src/ecatslv.c **** 
 677:../SSC/Src/ecatslv.c ****     if (
 678:../SSC/Src/ecatslv.c ****         ((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > u16EscAddrSendMbx && (nEscAddrOut
 1538              	 .loc 4 678 0
 1539 00fe 734B     	 ldr r3,.L165+16
 1540 0100 1B88     	 ldrh r3,[r3]
 1541 0102 1A46     	 mov r2,r3
 1542 0104 784B     	 ldr r3,.L165+44
 1543 0106 1B88     	 ldrh r3,[r3]
 1544 0108 1946     	 mov r1,r3
 1545 010a 7B8D     	 ldrh r3,[r7,#42]
 1546 010c 03FB01F3 	 mul r3,r3,r1
 1547 0110 1344     	 add r3,r3,r2
 1548 0112 714A     	 ldr r2,.L165+28
 1549 0114 1288     	 ldrh r2,[r2]
 677:../SSC/Src/ecatslv.c ****         ((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > u16EscAddrSendMbx && (nEscAddrOut
 1550              	 .loc 4 677 0
 1551 0116 9342     	 cmp r3,r2
 1552 0118 0ADD     	 ble .L98
 1553              	 .loc 4 678 0
 1554 011a 6C4B     	 ldr r3,.L165+16
 1555 011c 1B88     	 ldrh r3,[r3]
 1556 011e 1A46     	 mov r2,r3
 1557 0120 6D4B     	 ldr r3,.L165+28
 1558 0122 1B88     	 ldrh r3,[r3]
 1559 0124 1946     	 mov r1,r3
 1560 0126 6D4B     	 ldr r3,.L165+32
 1561 0128 1B88     	 ldrh r3,[r3]
 1562 012a 0B44     	 add r3,r3,r1
 1563 012c 9A42     	 cmp r2,r3
 1564 012e 31DB     	 blt .L99
 1565              	.L98:
 679:../SSC/Src/ecatslv.c ****         ||((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > u16EscAddrReceiveMbx && (nEscAd
 1566              	 .loc 4 679 0
 1567 0130 664B     	 ldr r3,.L165+16
 1568 0132 1B88     	 ldrh r3,[r3]
 1569 0134 1A46     	 mov r2,r3
 1570 0136 6C4B     	 ldr r3,.L165+44
 1571 0138 1B88     	 ldrh r3,[r3]
 1572 013a 1946     	 mov r1,r3
 1573 013c 7B8D     	 ldrh r3,[r7,#42]
 1574 013e 03FB01F3 	 mul r3,r3,r1
 1575 0142 1344     	 add r3,r3,r2
 1576 0144 664A     	 ldr r2,.L165+36
 1577 0146 1288     	 ldrh r2,[r2]
 1578 0148 9342     	 cmp r3,r2
 1579 014a 0ADD     	 ble .L100
 1580              	 .loc 4 679 0 is_stmt 0 discriminator 1
 1581 014c 5F4B     	 ldr r3,.L165+16
 1582 014e 1B88     	 ldrh r3,[r3]
 1583 0150 1A46     	 mov r2,r3
 1584 0152 634B     	 ldr r3,.L165+36
 1585 0154 1B88     	 ldrh r3,[r3]
 1586 0156 1946     	 mov r1,r3
 1587 0158 624B     	 ldr r3,.L165+40
 1588 015a 1B88     	 ldrh r3,[r3]
 1589 015c 0B44     	 add r3,r3,r1
 1590 015e 9A42     	 cmp r2,r3
 1591 0160 18DB     	 blt .L99
 1592              	.L100:
 680:../SSC/Src/ecatslv.c ****         ||
 681:../SSC/Src/ecatslv.c ****         ((nEscAddrOutputData + nPdOutputSize * nPdOutputBuffer) > nEscAddrInputData && (nEscAddrOut
 1593              	 .loc 4 681 0 is_stmt 1
 1594 0162 5A4B     	 ldr r3,.L165+16
 1595 0164 1B88     	 ldrh r3,[r3]
 1596 0166 1A46     	 mov r2,r3
 1597 0168 5F4B     	 ldr r3,.L165+44
 1598 016a 1B88     	 ldrh r3,[r3]
 1599 016c 1946     	 mov r1,r3
 1600 016e 7B8D     	 ldrh r3,[r7,#42]
 1601 0170 03FB01F3 	 mul r3,r3,r1
 1602 0174 1344     	 add r3,r3,r2
 1603 0176 564A     	 ldr r2,.L165+20
 1604 0178 1288     	 ldrh r2,[r2]
 680:../SSC/Src/ecatslv.c ****         ||
 1605              	 .loc 4 680 0
 1606 017a 9342     	 cmp r3,r2
 1607 017c 0CDD     	 ble .L101
 1608              	 .loc 4 681 0
 1609 017e 534B     	 ldr r3,.L165+16
 1610 0180 1B88     	 ldrh r3,[r3]
 1611 0182 1A46     	 mov r2,r3
 1612 0184 524B     	 ldr r3,.L165+20
 1613 0186 1B88     	 ldrh r3,[r3]
 1614 0188 1946     	 mov r1,r3
 1615 018a 524B     	 ldr r3,.L165+24
 1616 018c 1B88     	 ldrh r3,[r3]
 1617 018e 0B44     	 add r3,r3,r1
 1618 0190 9A42     	 cmp r2,r3
 1619 0192 01DA     	 bge .L101
 1620              	.L99:
 682:../SSC/Src/ecatslv.c ****         )
 683:../SSC/Src/ecatslv.c ****     {
 684:../SSC/Src/ecatslv.c ****         /* Sync Manager Channel 2 memory area (Outputs) overlaps the Sync Manager memory areas for 
 685:../SSC/Src/ecatslv.c ****            or the Sync Manager Channel 3 memory area (Inputs) */
 686:../SSC/Src/ecatslv.c ****         return ALSTATUSCODE_INVALIDSMOUTCFG;
 1621              	 .loc 4 686 0
 1622 0194 1D23     	 movs r3,#29
 1623 0196 BDE2     	 b .L97
 1624              	.L101:
 687:../SSC/Src/ecatslv.c ****     }
 688:../SSC/Src/ecatslv.c **** 
 689:../SSC/Src/ecatslv.c ****     /* 
 690:../SSC/Src/ecatslv.c ****         --- Check configured synchronisation ---
 691:../SSC/Src/ecatslv.c ****     */
 692:../SSC/Src/ecatslv.c **** 
 693:../SSC/Src/ecatslv.c ****     /* Get the DC Control/Activation register value*/
 694:../SSC/Src/ecatslv.c ****     /*Read register 0x981 (corresponding masks are adapted)*/
 695:../SSC/Src/ecatslv.c ****     HW_EscReadByte(dcControl, ESC_DC_SYNC_ACTIVATION_OFFSET);
 1625              	 .loc 4 695 0
 1626 0198 544B     	 ldr r3,.L165+48
 1627 019a 1B78     	 ldrb r3,[r3]
 1628 019c FB73     	 strb r3,[r7,#15]
 696:../SSC/Src/ecatslv.c **** 
 697:../SSC/Src/ecatslv.c ****     // Cycle time for Sync0
 698:../SSC/Src/ecatslv.c ****         HW_EscReadDWord(cycleTimeSync0, ESC_DC_SYNC0_CYCLETIME_OFFSET);
 1629              	 .loc 4 698 0
 1630 019e 544B     	 ldr r3,.L165+52
 1631 01a0 1B68     	 ldr r3,[r3]
 1632 01a2 FB61     	 str r3,[r7,#28]
 699:../SSC/Src/ecatslv.c ****         cycleTimeSync0 = SWAPDWORD(cycleTimeSync0);
 700:../SSC/Src/ecatslv.c **** 
 701:../SSC/Src/ecatslv.c ****     // Cycle time for Sync1
 702:../SSC/Src/ecatslv.c ****         HW_EscReadDWord(cycleTimeSync1, ESC_DC_SYNC1_CYCLETIME_OFFSET);
 1633              	 .loc 4 702 0
 1634 01a4 534B     	 ldr r3,.L165+56
 1635 01a6 1B68     	 ldr r3,[r3]
 1636 01a8 BB61     	 str r3,[r7,#24]
 703:../SSC/Src/ecatslv.c ****         cycleTimeSync1 = SWAPDWORD(cycleTimeSync1);
 704:../SSC/Src/ecatslv.c **** 
 705:../SSC/Src/ecatslv.c **** 
 706:../SSC/Src/ecatslv.c ****     SyncType0x1C32 = sSyncManOutPar.u16SyncType;
 1637              	 .loc 4 706 0
 1638 01aa 444B     	 ldr r3,.L165
 1639 01ac 5B88     	 ldrh r3,[r3,#2]
 1640 01ae 3B85     	 strh r3,[r7,#40]
 707:../SSC/Src/ecatslv.c ****     SyncType0x1C33 = sSyncManInPar.u16SyncType;
 1641              	 .loc 4 707 0
 1642 01b0 434B     	 ldr r3,.L165+4
 1643 01b2 5B88     	 ldrh r3,[r3,#2]
 1644 01b4 FB84     	 strh r3,[r7,#38]
 708:../SSC/Src/ecatslv.c **** 
 709:../SSC/Src/ecatslv.c **** 
 710:../SSC/Src/ecatslv.c **** 
 711:../SSC/Src/ecatslv.c ****     /* check general DC register plausibility and if configuration is supported
 712:../SSC/Src/ecatslv.c ****        - 0x981 DC Active
 713:../SSC/Src/ecatslv.c ****        - 0x9A0:0x9A3 Sync0 Cycle
 714:../SSC/Src/ecatslv.c ****        - 0x9A4:0x9A7 Sync1 Cycle
 715:../SSC/Src/ecatslv.c ****     */
 716:../SSC/Src/ecatslv.c ****     if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) != 0)
 1645              	 .loc 4 716 0
 1646 01b6 FB7B     	 ldrb r3,[r7,#15]
 1647 01b8 03F00903 	 and r3,r3,#9
 1648 01bc 002B     	 cmp r3,#0
 1649 01be 58D0     	 beq .L102
 717:../SSC/Src/ecatslv.c ****     {
 718:../SSC/Src/ecatslv.c ****         /* DC unit is active at least one Sync signal shall be generated */
 719:../SSC/Src/ecatslv.c ****         if((dcControl & (ESC_DC_SYNC0_ACTIVE_MASK | ESC_DC_SYNC1_ACTIVE_MASK)) == 0)
 1650              	 .loc 4 719 0
 1651 01c0 FB7B     	 ldrb r3,[r7,#15]
 1652 01c2 03F00603 	 and r3,r3,#6
 1653 01c6 002B     	 cmp r3,#0
 1654 01c8 01D1     	 bne .L103
 720:../SSC/Src/ecatslv.c ****         {
 721:../SSC/Src/ecatslv.c ****             return ALSTATUSCODE_DCINVALIDSYNCCFG;
 1655              	 .loc 4 721 0
 1656 01ca 3023     	 movs r3,#48
 1657 01cc A2E2     	 b .L97
 1658              	.L103:
 722:../SSC/Src/ecatslv.c ****         }
 723:../SSC/Src/ecatslv.c **** 
 724:../SSC/Src/ecatslv.c ****         /* If Sync1 shall only be active if also Sync0 will be generated*/
 725:../SSC/Src/ecatslv.c ****         if(((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) == 0)
 1659              	 .loc 4 725 0
 1660 01ce FB7B     	 ldrb r3,[r7,#15]
 1661 01d0 03F00203 	 and r3,r3,#2
 1662 01d4 002B     	 cmp r3,#0
 1663 01d6 06D1     	 bne .L104
 726:../SSC/Src/ecatslv.c ****             && ((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) != 0))
 1664              	 .loc 4 726 0
 1665 01d8 FB7B     	 ldrb r3,[r7,#15]
 1666 01da 03F00403 	 and r3,r3,#4
 1667 01de 002B     	 cmp r3,#0
 1668 01e0 01D0     	 beq .L104
 727:../SSC/Src/ecatslv.c ****         {
 728:../SSC/Src/ecatslv.c ****             return ALSTATUSCODE_DCINVALIDSYNCCFG;
 1669              	 .loc 4 728 0
 1670 01e2 3023     	 movs r3,#48
 1671 01e4 96E2     	 b .L97
 1672              	.L104:
 729:../SSC/Src/ecatslv.c ****         }
 730:../SSC/Src/ecatslv.c **** 
 731:../SSC/Src/ecatslv.c ****         if(u16MinSuppSyncType != 0)
 1673              	 .loc 4 731 0
 1674 01e6 FB8A     	 ldrh r3,[r7,#22]
 1675 01e8 002B     	 cmp r3,#0
 1676 01ea 15D0     	 beq .L105
 732:../SSC/Src/ecatslv.c ****         {
 733:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM2*/
 734:../SSC/Src/ecatslv.c ****             if((((u16MinSuppSyncType & SYNCTYPE_DCSYNC0SUPP) == 0) && ((dcControl & ESC_DC_SYNC0_AC
 1677              	 .loc 4 734 0
 1678 01ec FB8A     	 ldrh r3,[r7,#22]
 1679 01ee 03F00403 	 and r3,r3,#4
 1680 01f2 002B     	 cmp r3,#0
 1681 01f4 04D1     	 bne .L106
 1682              	 .loc 4 734 0 is_stmt 0 discriminator 1
 1683 01f6 FB7B     	 ldrb r3,[r7,#15]
 1684 01f8 03F00203 	 and r3,r3,#2
 1685 01fc 002B     	 cmp r3,#0
 1686 01fe 09D1     	 bne .L107
 1687              	.L106:
 735:../SSC/Src/ecatslv.c ****                 ||(((u16MinSuppSyncType & SYNCTYPE_DCSYNC1SUPP) == 0) && ((dcControl & ESC_DC_SYNC1
 1688              	 .loc 4 735 0 is_stmt 1
 1689 0200 FB8A     	 ldrh r3,[r7,#22]
 1690 0202 03F00803 	 and r3,r3,#8
 1691 0206 002B     	 cmp r3,#0
 1692 0208 06D1     	 bne .L105
 1693              	 .loc 4 735 0 is_stmt 0 discriminator 1
 1694 020a FB7B     	 ldrb r3,[r7,#15]
 1695 020c 03F00403 	 and r3,r3,#4
 1696 0210 002B     	 cmp r3,#0
 1697 0212 01D0     	 beq .L105
 1698              	.L107:
 736:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM2*/
 737:../SSC/Src/ecatslv.c ****             {
 738:../SSC/Src/ecatslv.c ****                 /* Sync0 is not supported but will be generated*/
 739:../SSC/Src/ecatslv.c ****                 return ALSTATUSCODE_DCINVALIDSYNCCFG;                   
 1699              	 .loc 4 739 0 is_stmt 1
 1700 0214 3023     	 movs r3,#48
 1701 0216 7DE2     	 b .L97
 1702              	.L105:
 740:../SSC/Src/ecatslv.c ****     }
 741:../SSC/Src/ecatslv.c ****         }
 742:../SSC/Src/ecatslv.c **** 
 743:../SSC/Src/ecatslv.c ****         /*Check if Sync0 cycle time is supported*/
 744:../SSC/Src/ecatslv.c ****         if ( cycleTimeSync0 != 0 && (cycleTimeSync0 < MIN_PD_CYCLE_TIME || cycleTimeSync0 > MAX_PD_
 1703              	 .loc 4 744 0
 1704 0218 FB69     	 ldr r3,[r7,#28]
 1705 021a 002B     	 cmp r3,#0
 1706 021c 0AD0     	 beq .L108
 1707              	 .loc 4 744 0 is_stmt 0 discriminator 1
 1708 021e FB69     	 ldr r3,[r7,#28]
 1709 0220 42F20F72 	 movw r2,#9999
 1710 0224 9342     	 cmp r3,r2
 1711 0226 03D9     	 bls .L109
 1712              	 .loc 4 744 0 discriminator 2
 1713 0228 FB69     	 ldr r3,[r7,#28]
 1714 022a 334A     	 ldr r2,.L165+60
 1715 022c 9342     	 cmp r3,r2
 1716 022e 01D9     	 bls .L108
 1717              	.L109:
 745:../SSC/Src/ecatslv.c ****             return ALSTATUSCODE_DCSYNC0CYCLETIME;
 1718              	 .loc 4 745 0 is_stmt 1
 1719 0230 3623     	 movs r3,#54
 1720 0232 6FE2     	 b .L97
 1721              	.L108:
 746:../SSC/Src/ecatslv.c **** 
 747:../SSC/Src/ecatslv.c **** 
 748:../SSC/Src/ecatslv.c ****         /* Check if Subordinated cycles are configured */
 749:../SSC/Src/ecatslv.c ****         if(((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) != 0) && ((dcControl & ESC_DC_SYNC1_ACTIVE_MASK)
 1722              	 .loc 4 749 0
 1723 0234 FB7B     	 ldrb r3,[r7,#15]
 1724 0236 03F00203 	 and r3,r3,#2
 1725 023a 002B     	 cmp r3,#0
 1726 023c 0ED0     	 beq .L110
 1727              	 .loc 4 749 0 is_stmt 0 discriminator 1
 1728 023e FB7B     	 ldrb r3,[r7,#15]
 1729 0240 03F00403 	 and r3,r3,#4
 1730 0244 002B     	 cmp r3,#0
 1731 0246 09D0     	 beq .L110
 750:../SSC/Src/ecatslv.c ****         {
 751:../SSC/Src/ecatslv.c ****             /* For Subordinated cycles both Sync signals shall be active and Sync0 is not configure
 752:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM1*/
 753:../SSC/Src/ecatslv.c ****             if((cycleTimeSync1 > 0) && (cycleTimeSync1 >= cycleTimeSync0))
 1732              	 .loc 4 753 0 is_stmt 1
 1733 0248 BB69     	 ldr r3,[r7,#24]
 1734 024a 002B     	 cmp r3,#0
 1735 024c 06D0     	 beq .L110
 1736              	 .loc 4 753 0 is_stmt 0 discriminator 1
 1737 024e BA69     	 ldr r2,[r7,#24]
 1738 0250 FB69     	 ldr r3,[r7,#28]
 1739 0252 9A42     	 cmp r2,r3
 1740 0254 02D3     	 bcc .L110
 754:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM1*/
 755:../SSC/Src/ecatslv.c ****             {
 756:../SSC/Src/ecatslv.c ****                 bSubordinatedCycles = TRUE;
 1741              	 .loc 4 756 0 is_stmt 1
 1742 0256 0123     	 movs r3,#1
 1743 0258 87F82F30 	 strb r3,[r7,#47]
 1744              	.L110:
 757:../SSC/Src/ecatslv.c ****             }
 758:../SSC/Src/ecatslv.c ****         }
 759:../SSC/Src/ecatslv.c **** 
 760:../SSC/Src/ecatslv.c ****         /* Dump an error if subordinated cycles are configured but not supported */
 761:../SSC/Src/ecatslv.c ****         if(bSubordinatedCycles && ((u16MinSuppSyncType & SYNCTYPE_SUBCYCLESUPP) == 0))
 1745              	 .loc 4 761 0
 1746 025c 97F82F30 	 ldrb r3,[r7,#47]
 1747 0260 002B     	 cmp r3,#0
 1748 0262 06D0     	 beq .L102
 1749              	 .loc 4 761 0 is_stmt 0 discriminator 1
 1750 0264 FB8A     	 ldrh r3,[r7,#22]
 1751 0266 03F01003 	 and r3,r3,#16
 1752 026a 002B     	 cmp r3,#0
 1753 026c 01D1     	 bne .L102
 762:../SSC/Src/ecatslv.c ****         {
 763:../SSC/Src/ecatslv.c ****              return ALSTATUSCODE_DCINVALIDSYNCCFG;
 1754              	 .loc 4 763 0 is_stmt 1
 1755 026e 3023     	 movs r3,#48
 1756 0270 50E2     	 b .L97
 1757              	.L102:
 764:../SSC/Src/ecatslv.c ****         }
 765:../SSC/Src/ecatslv.c ****     }
 766:../SSC/Src/ecatslv.c **** 
 767:../SSC/Src/ecatslv.c **** 
 768:../SSC/Src/ecatslv.c ****     /*
 769:../SSC/Src/ecatslv.c ****         Check if the user configured Sync Type matches the DC register values (if the Sync Type is 
 770:../SSC/Src/ecatslv.c ****     */
 771:../SSC/Src/ecatslv.c ****     if(bSyncSetByUser)
 1758              	 .loc 4 771 0
 1759 0272 224B     	 ldr r3,.L165+64
 1760 0274 1B78     	 ldrb r3,[r3]
 1761 0276 002B     	 cmp r3,#0
 1762 0278 4FD0     	 beq .L111
 772:../SSC/Src/ecatslv.c ****     {
 773:../SSC/Src/ecatslv.c ****         if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) == 0)
 1763              	 .loc 4 773 0
 1764 027a FB7B     	 ldrb r3,[r7,#15]
 1765 027c 03F00903 	 and r3,r3,#9
 1766 0280 002B     	 cmp r3,#0
 1767 0282 0ED1     	 bne .L112
 774:../SSC/Src/ecatslv.c ****         {
 775:../SSC/Src/ecatslv.c ****             /* DC out unit not enabled => no DC mode shall be set */
 776:../SSC/Src/ecatslv.c ****             if((SyncType0x1C32 == SYNCTYPE_DCSYNC0) || (SyncType0x1C32 == SYNCTYPE_DCSYNC1)
 1768              	 .loc 4 776 0
 1769 0284 3B8D     	 ldrh r3,[r7,#40]
 1770 0286 022B     	 cmp r3,#2
 1771 0288 09D0     	 beq .L113
 1772              	 .loc 4 776 0 is_stmt 0 discriminator 1
 1773 028a 3B8D     	 ldrh r3,[r7,#40]
 1774 028c 032B     	 cmp r3,#3
 1775 028e 06D0     	 beq .L113
 777:../SSC/Src/ecatslv.c ****                 ||(SyncType0x1C33 == SYNCTYPE_DCSYNC0) || (SyncType0x1C33 == SYNCTYPE_DCSYNC1))
 1776              	 .loc 4 777 0 is_stmt 1
 1777 0290 FB8C     	 ldrh r3,[r7,#38]
 1778 0292 022B     	 cmp r3,#2
 1779 0294 03D0     	 beq .L113
 1780              	 .loc 4 777 0 is_stmt 0 discriminator 1
 1781 0296 FB8C     	 ldrh r3,[r7,#38]
 1782 0298 032B     	 cmp r3,#3
 1783 029a 40F08580 	 bne .L114
 1784              	.L113:
 778:../SSC/Src/ecatslv.c ****             {
 779:../SSC/Src/ecatslv.c ****                 return ALSTATUSCODE_DCINVALIDSYNCCFG;
 1785              	 .loc 4 779 0 is_stmt 1
 1786 029e 3023     	 movs r3,#48
 1787 02a0 38E2     	 b .L97
 1788              	.L112:
 780:../SSC/Src/ecatslv.c ****             }
 781:../SSC/Src/ecatslv.c ****         } //if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) == 
 782:../SSC/Src/ecatslv.c ****     else
 783:../SSC/Src/ecatslv.c ****     {
 784:../SSC/Src/ecatslv.c ****             if((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) == 0)
 1789              	 .loc 4 784 0
 1790 02a2 FB7B     	 ldrb r3,[r7,#15]
 1791 02a4 03F00403 	 and r3,r3,#4
 1792 02a8 002B     	 cmp r3,#0
 1793 02aa 29D1     	 bne .L115
 785:../SSC/Src/ecatslv.c ****             {
 786:../SSC/Src/ecatslv.c ****                 /* No Sync 1 is generated => No Sync1 Sync Type shall configured*/
 787:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM3*/
 788:../SSC/Src/ecatslv.c ****                 if((SyncType0x1C32 == (UINT16)SYNCTYPE_DCSYNC1)
 1794              	 .loc 4 788 0
 1795 02ac 3B8D     	 ldrh r3,[r7,#40]
 1796 02ae 032B     	 cmp r3,#3
 1797 02b0 02D0     	 beq .L116
 789:../SSC/Src/ecatslv.c ****                     ||(SyncType0x1C33 == (UINT16)SYNCTYPE_DCSYNC1))
 1798              	 .loc 4 789 0
 1799 02b2 FB8C     	 ldrh r3,[r7,#38]
 1800 02b4 032B     	 cmp r3,#3
 1801 02b6 23D1     	 bne .L115
 1802              	.L116:
 790:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM3*/
 791:../SSC/Src/ecatslv.c ****                 {
 792:../SSC/Src/ecatslv.c ****                     return ALSTATUSCODE_DCINVALIDSYNCCFG;
 1803              	 .loc 4 792 0
 1804 02b8 3023     	 movs r3,#48
 1805 02ba 2BE2     	 b .L97
 1806              	.L166:
 1807              	 .align 2
 1808              	.L165:
 1809 02bc 00000000 	 .word sSyncManOutPar
 1810 02c0 00000000 	 .word sSyncManInPar
 1811 02c4 00000000 	 .word u16ALEventMask
 1812 02c8 00000000 	 .word bEcatFirstOutputsReceived
 1813 02cc 00000000 	 .word nEscAddrOutputData
 1814 02d0 00000000 	 .word nEscAddrInputData
 1815 02d4 00000000 	 .word nPdInputSize
 1816 02d8 00000000 	 .word u16EscAddrSendMbx
 1817 02dc 00000000 	 .word u16SendMbxSize
 1818 02e0 00000000 	 .word u16EscAddrReceiveMbx
 1819 02e4 00000000 	 .word u16ReceiveMbxSize
 1820 02e8 00000000 	 .word nPdOutputSize
 1821 02ec 81090154 	 .word 1409354113
 1822 02f0 A0090154 	 .word 1409354144
 1823 02f4 A4090154 	 .word 1409354148
 1824 02f8 000050C3 	 .word -1018167296
 1825 02fc 00000000 	 .word bSyncSetByUser
 1826              	.L115:
 793:../SSC/Src/ecatslv.c ****                 }
 794:../SSC/Src/ecatslv.c ****             } //if((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) == 0)
 795:../SSC/Src/ecatslv.c **** 
 796:../SSC/Src/ecatslv.c ****             if((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) == 0)
 1827              	 .loc 4 796 0
 1828 0300 FB7B     	 ldrb r3,[r7,#15]
 1829 0302 03F00203 	 and r3,r3,#2
 1830 0306 002B     	 cmp r3,#0
 1831 0308 4ED1     	 bne .L114
 797:../SSC/Src/ecatslv.c ****             {
 798:../SSC/Src/ecatslv.c ****                 /* No Sync 0 is generated => No Sync0 Sync Type shall configured*/
 799:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM3*/
 800:../SSC/Src/ecatslv.c ****                 if((SyncType0x1C32 == (UINT16)SYNCTYPE_DCSYNC0)
 1832              	 .loc 4 800 0
 1833 030a 3B8D     	 ldrh r3,[r7,#40]
 1834 030c 022B     	 cmp r3,#2
 1835 030e 02D0     	 beq .L117
 801:../SSC/Src/ecatslv.c ****                     ||(SyncType0x1C33 == (UINT16)SYNCTYPE_DCSYNC0))
 1836              	 .loc 4 801 0
 1837 0310 FB8C     	 ldrh r3,[r7,#38]
 1838 0312 022B     	 cmp r3,#2
 1839 0314 48D1     	 bne .L114
 1840              	.L117:
 802:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM3*/
 803:../SSC/Src/ecatslv.c ****                 {
 804:../SSC/Src/ecatslv.c ****                     return ALSTATUSCODE_DCINVALIDSYNCCFG;
 1841              	 .loc 4 804 0
 1842 0316 3023     	 movs r3,#48
 1843 0318 FCE1     	 b .L97
 1844              	.L111:
 805:../SSC/Src/ecatslv.c ****                 }
 806:../SSC/Src/ecatslv.c ****             } //if((dcControl & ESC_DC_SYNC0_ACTIVE_MASK) == 0)
 807:../SSC/Src/ecatslv.c **** 
 808:../SSC/Src/ecatslv.c ****         }
 809:../SSC/Src/ecatslv.c ****     } //if(bSyncSetByUser)
 810:../SSC/Src/ecatslv.c ****     else
 811:../SSC/Src/ecatslv.c ****     {
 812:../SSC/Src/ecatslv.c ****         /* No Sync Type selected by user => Configure Sync Type based on DC register values*/
 813:../SSC/Src/ecatslv.c ****         if((dcControl & (ESC_DC_SYNC_UNIT_ACTIVE_MASK | ESC_DC_SYNC_UNIT_AUTO_ACTIVE_MASK)) == 0)
 1845              	 .loc 4 813 0
 1846 031a FB7B     	 ldrb r3,[r7,#15]
 1847 031c 03F00903 	 and r3,r3,#9
 1848 0320 002B     	 cmp r3,#0
 1849 0322 20D1     	 bne .L118
 814:../SSC/Src/ecatslv.c ****         {
 815:../SSC/Src/ecatslv.c ****             /* Activation or auto activation of the Sync Out Unit is disabled => Free Run or SM Syn
 816:../SSC/Src/ecatslv.c **** 
 817:../SSC/Src/ecatslv.c ****             /* AL Event enabled => Configure SM Sync*/
 818:../SSC/Src/ecatslv.c ****             if (nPdOutputSize > 0)
 1850              	 .loc 4 818 0
 1851 0324 924B     	 ldr r3,.L167
 1852 0326 1B88     	 ldrh r3,[r3]
 1853 0328 002B     	 cmp r3,#0
 1854 032a 0BD0     	 beq .L119
 819:../SSC/Src/ecatslv.c ****             {
 820:../SSC/Src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_SM_SYNCHRON;
 1855              	 .loc 4 820 0
 1856 032c 0123     	 movs r3,#1
 1857 032e 3B85     	 strh r3,[r7,#40]
 821:../SSC/Src/ecatslv.c ****                 
 822:../SSC/Src/ecatslv.c ****                 if (nPdInputSize > 0)
 1858              	 .loc 4 822 0
 1859 0330 904B     	 ldr r3,.L167+4
 1860 0332 1B88     	 ldrh r3,[r3]
 1861 0334 002B     	 cmp r3,#0
 1862 0336 02D0     	 beq .L120
 823:../SSC/Src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_SM2_SYNCHRON;
 1863              	 .loc 4 823 0
 1864 0338 2223     	 movs r3,#34
 1865 033a FB84     	 strh r3,[r7,#38]
 1866 033c 0FE0     	 b .L122
 1867              	.L120:
 824:../SSC/Src/ecatslv.c ****                 else
 825:../SSC/Src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_FREERUN;
 1868              	 .loc 4 825 0
 1869 033e 0023     	 movs r3,#0
 1870 0340 FB84     	 strh r3,[r7,#38]
 1871 0342 0CE0     	 b .L122
 1872              	.L119:
 826:../SSC/Src/ecatslv.c ****             }
 827:../SSC/Src/ecatslv.c ****             else if (nPdInputSize > 0)
 1873              	 .loc 4 827 0
 1874 0344 8B4B     	 ldr r3,.L167+4
 1875 0346 1B88     	 ldrh r3,[r3]
 1876 0348 002B     	 cmp r3,#0
 1877 034a 04D0     	 beq .L123
 828:../SSC/Src/ecatslv.c ****             {
 829:../SSC/Src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_FREERUN;
 1878              	 .loc 4 829 0
 1879 034c 0023     	 movs r3,#0
 1880 034e 3B85     	 strh r3,[r7,#40]
 830:../SSC/Src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_SM_SYNCHRON;
 1881              	 .loc 4 830 0
 1882 0350 0123     	 movs r3,#1
 1883 0352 FB84     	 strh r3,[r7,#38]
 1884 0354 03E0     	 b .L122
 1885              	.L123:
 831:../SSC/Src/ecatslv.c ****             }
 832:../SSC/Src/ecatslv.c ****             else
 833:../SSC/Src/ecatslv.c ****             {
 834:../SSC/Src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_FREERUN;
 1886              	 .loc 4 834 0
 1887 0356 0023     	 movs r3,#0
 1888 0358 3B85     	 strh r3,[r7,#40]
 835:../SSC/Src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_FREERUN;
 1889              	 .loc 4 835 0
 1890 035a 0023     	 movs r3,#0
 1891 035c FB84     	 strh r3,[r7,#38]
 1892              	.L122:
 836:../SSC/Src/ecatslv.c ****             }
 837:../SSC/Src/ecatslv.c ****             sSyncManOutPar.u16GetCycleTime = 1;
 1893              	 .loc 4 837 0
 1894 035e 864B     	 ldr r3,.L167+8
 1895 0360 0122     	 movs r2,#1
 1896 0362 9A83     	 strh r2,[r3,#28]
 1897 0364 20E0     	 b .L114
 1898              	.L118:
 838:../SSC/Src/ecatslv.c **** 
 839:../SSC/Src/ecatslv.c ****         }
 840:../SSC/Src/ecatslv.c ****         else
 841:../SSC/Src/ecatslv.c ****         {
 842:../SSC/Src/ecatslv.c ****             if (nPdOutputSize > 0)
 1899              	 .loc 4 842 0
 1900 0366 824B     	 ldr r3,.L167
 1901 0368 1B88     	 ldrh r3,[r3]
 1902 036a 002B     	 cmp r3,#0
 1903 036c 09D0     	 beq .L124
 843:../SSC/Src/ecatslv.c ****             {
 844:../SSC/Src/ecatslv.c ****                 /* Sync Signal generation is active*/
 845:../SSC/Src/ecatslv.c ****                 if (bSubordinatedCycles)
 1904              	 .loc 4 845 0
 1905 036e 97F82F30 	 ldrb r3,[r7,#47]
 1906 0372 002B     	 cmp r3,#0
 1907 0374 02D0     	 beq .L125
 846:../SSC/Src/ecatslv.c ****                 {
 847:../SSC/Src/ecatslv.c ****                     SyncType0x1C32 = SYNCTYPE_DCSYNC1;
 1908              	 .loc 4 847 0
 1909 0376 0323     	 movs r3,#3
 1910 0378 3B85     	 strh r3,[r7,#40]
 1911 037a 04E0     	 b .L127
 1912              	.L125:
 848:../SSC/Src/ecatslv.c ****                 }
 849:../SSC/Src/ecatslv.c ****                 else
 850:../SSC/Src/ecatslv.c ****                 {
 851:../SSC/Src/ecatslv.c ****                     SyncType0x1C32 = SYNCTYPE_DCSYNC0;
 1913              	 .loc 4 851 0
 1914 037c 0223     	 movs r3,#2
 1915 037e 3B85     	 strh r3,[r7,#40]
 1916 0380 01E0     	 b .L127
 1917              	.L124:
 852:../SSC/Src/ecatslv.c ****                 }
 853:../SSC/Src/ecatslv.c ****             }
 854:../SSC/Src/ecatslv.c ****             else
 855:../SSC/Src/ecatslv.c ****             {
 856:../SSC/Src/ecatslv.c ****                 SyncType0x1C32 = SYNCTYPE_FREERUN;
 1918              	 .loc 4 856 0
 1919 0382 0023     	 movs r3,#0
 1920 0384 3B85     	 strh r3,[r7,#40]
 1921              	.L127:
 857:../SSC/Src/ecatslv.c ****             }
 858:../SSC/Src/ecatslv.c **** 
 859:../SSC/Src/ecatslv.c **** 
 860:../SSC/Src/ecatslv.c ****             if (nPdInputSize > 0)
 1922              	 .loc 4 860 0
 1923 0386 7B4B     	 ldr r3,.L167+4
 1924 0388 1B88     	 ldrh r3,[r3]
 1925 038a 002B     	 cmp r3,#0
 1926 038c 0AD0     	 beq .L128
 861:../SSC/Src/ecatslv.c ****             {
 862:../SSC/Src/ecatslv.c ****                 if ((dcControl & ESC_DC_SYNC1_ACTIVE_MASK) != 0)
 1927              	 .loc 4 862 0
 1928 038e FB7B     	 ldrb r3,[r7,#15]
 1929 0390 03F00403 	 and r3,r3,#4
 1930 0394 002B     	 cmp r3,#0
 1931 0396 02D0     	 beq .L129
 863:../SSC/Src/ecatslv.c ****                 {
 864:../SSC/Src/ecatslv.c ****                     /* If Sync1 is available the inputs will always be mapped with Sync1 */
 865:../SSC/Src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_DCSYNC1;
 1932              	 .loc 4 865 0
 1933 0398 0323     	 movs r3,#3
 1934 039a FB84     	 strh r3,[r7,#38]
 1935 039c 04E0     	 b .L114
 1936              	.L129:
 866:../SSC/Src/ecatslv.c ****                 }
 867:../SSC/Src/ecatslv.c ****                 else
 868:../SSC/Src/ecatslv.c ****                 {
 869:../SSC/Src/ecatslv.c ****                     /* Map Inputs based on Sync0*/
 870:../SSC/Src/ecatslv.c ****                     SyncType0x1C33 = SYNCTYPE_DCSYNC0;
 1937              	 .loc 4 870 0
 1938 039e 0223     	 movs r3,#2
 1939 03a0 FB84     	 strh r3,[r7,#38]
 1940 03a2 01E0     	 b .L114
 1941              	.L128:
 871:../SSC/Src/ecatslv.c ****                 }
 872:../SSC/Src/ecatslv.c ****             }
 873:../SSC/Src/ecatslv.c ****             else
 874:../SSC/Src/ecatslv.c ****             {
 875:../SSC/Src/ecatslv.c ****                 SyncType0x1C33 = SYNCTYPE_FREERUN;
 1942              	 .loc 4 875 0
 1943 03a4 0023     	 movs r3,#0
 1944 03a6 FB84     	 strh r3,[r7,#38]
 1945              	.L114:
 876:../SSC/Src/ecatslv.c ****             }
 877:../SSC/Src/ecatslv.c ****         }
 878:../SSC/Src/ecatslv.c ****     }
 879:../SSC/Src/ecatslv.c **** 
 880:../SSC/Src/ecatslv.c ****     /* Update Cycle time entries if DC Sync Mode enabled */
 881:../SSC/Src/ecatslv.c ****     if(SyncType0x1C32 == SYNCTYPE_DCSYNC1)
 1946              	 .loc 4 881 0
 1947 03a8 3B8D     	 ldrh r3,[r7,#40]
 1948 03aa 032B     	 cmp r3,#3
 1949 03ac 06D1     	 bne .L131
 882:../SSC/Src/ecatslv.c ****     {
 883:../SSC/Src/ecatslv.c ****         sSyncManOutPar.u32Sync0CycleTime = (UINT32)cycleTimeSync0;
 1950              	 .loc 4 883 0
 1951 03ae 724A     	 ldr r2,.L167+8
 1952 03b0 FB69     	 ldr r3,[r7,#28]
 1953 03b2 5362     	 str r3,[r2,#36]
 884:../SSC/Src/ecatslv.c **** 
 885:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 886:../SSC/Src/ecatslv.c ****         sSyncManInPar.u32Sync0CycleTime = (UINT32)cycleTimeSync0;
 1954              	 .loc 4 886 0
 1955 03b4 714A     	 ldr r2,.L167+12
 1956 03b6 FB69     	 ldr r3,[r7,#28]
 1957 03b8 5362     	 str r3,[r2,#36]
 1958 03ba 0AE0     	 b .L132
 1959              	.L131:
 887:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 888:../SSC/Src/ecatslv.c ****     }
 889:../SSC/Src/ecatslv.c ****     else if(SyncType0x1C32 == SYNCTYPE_DCSYNC0)
 1960              	 .loc 4 889 0
 1961 03bc 3B8D     	 ldrh r3,[r7,#40]
 1962 03be 022B     	 cmp r3,#2
 1963 03c0 07D1     	 bne .L132
 890:../SSC/Src/ecatslv.c ****     {
 891:../SSC/Src/ecatslv.c ****         sSyncManOutPar.u32Sync0CycleTime = (UINT32)cycleTimeSync0;
 1964              	 .loc 4 891 0
 1965 03c2 6D4A     	 ldr r2,.L167+8
 1966 03c4 FB69     	 ldr r3,[r7,#28]
 1967 03c6 5362     	 str r3,[r2,#36]
 892:../SSC/Src/ecatslv.c **** 
 893:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 894:../SSC/Src/ecatslv.c ****         sSyncManInPar.u32Sync0CycleTime = (UINT16)cycleTimeSync0;
 1968              	 .loc 4 894 0
 1969 03c8 FB69     	 ldr r3,[r7,#28]
 1970 03ca 9BB2     	 uxth r3,r3
 1971 03cc 1A46     	 mov r2,r3
 1972 03ce 6B4B     	 ldr r3,.L167+12
 1973 03d0 5A62     	 str r2,[r3,#36]
 1974              	.L132:
 895:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 896:../SSC/Src/ecatslv.c ****     }
 897:../SSC/Src/ecatslv.c **** 
 898:../SSC/Src/ecatslv.c ****     /* Set global flags based on Sync Type */
 899:../SSC/Src/ecatslv.c ****     if ( !b3BufferMode )
 1975              	 .loc 4 899 0
 1976 03d2 6B4B     	 ldr r3,.L167+16
 1977 03d4 1B78     	 ldrb r3,[r3]
 1978 03d6 83F00103 	 eor r3,r3,#1
 1979 03da DBB2     	 uxtb r3,r3
 1980 03dc 002B     	 cmp r3,#0
 1981 03de 07D0     	 beq .L133
 900:../SSC/Src/ecatslv.c ****     {
 901:../SSC/Src/ecatslv.c ****         /* 1-Buffer-Mode configured => For free run it shall be 3Buffer mode*/
 902:../SSC/Src/ecatslv.c ****         if (( SyncType0x1C32 == SYNCTYPE_FREERUN ) || ( SyncType0x1C33 == SYNCTYPE_FREERUN ))
 1982              	 .loc 4 902 0
 1983 03e0 3B8D     	 ldrh r3,[r7,#40]
 1984 03e2 002B     	 cmp r3,#0
 1985 03e4 02D0     	 beq .L134
 1986              	 .loc 4 902 0 is_stmt 0 discriminator 1
 1987 03e6 FB8C     	 ldrh r3,[r7,#38]
 1988 03e8 002B     	 cmp r3,#0
 1989 03ea 01D1     	 bne .L133
 1990              	.L134:
 903:../SSC/Src/ecatslv.c ****         {
 904:../SSC/Src/ecatslv.c ****                 return ALSTATUSCODE_FREERUNNEEDS3BUFFERMODE;
 1991              	 .loc 4 904 0 is_stmt 1
 1992 03ec 2923     	 movs r3,#41
 1993 03ee 91E1     	 b .L97
 1994              	.L133:
 905:../SSC/Src/ecatslv.c ****         }
 906:../SSC/Src/ecatslv.c ****     }
 907:../SSC/Src/ecatslv.c **** 
 908:../SSC/Src/ecatslv.c ****     /* If no free run is supported the EscInt is always enabled*/
 909:../SSC/Src/ecatslv.c ****         if (( SyncType0x1C32 != SYNCTYPE_FREERUN ) || ( SyncType0x1C33 != SYNCTYPE_FREERUN ))
 1995              	 .loc 4 909 0
 1996 03f0 3B8D     	 ldrh r3,[r7,#40]
 1997 03f2 002B     	 cmp r3,#0
 1998 03f4 02D1     	 bne .L135
 1999              	 .loc 4 909 0 is_stmt 0 discriminator 1
 2000 03f6 FB8C     	 ldrh r3,[r7,#38]
 2001 03f8 002B     	 cmp r3,#0
 2002 03fa 02D0     	 beq .L136
 2003              	.L135:
 910:../SSC/Src/ecatslv.c ****         {
 911:../SSC/Src/ecatslv.c ****         /* ECAT Synchron Mode, the ESC interrupt is enabled */
 912:../SSC/Src/ecatslv.c ****         bEscIntEnabled = TRUE;
 2004              	 .loc 4 912 0 is_stmt 1
 2005 03fc 614B     	 ldr r3,.L167+20
 2006 03fe 0122     	 movs r2,#1
 2007 0400 1A70     	 strb r2,[r3]
 2008              	.L136:
 913:../SSC/Src/ecatslv.c ****     }
 914:../SSC/Src/ecatslv.c **** 
 915:../SSC/Src/ecatslv.c ****         /* Update value for AL Event Mask register (0x204) */
 916:../SSC/Src/ecatslv.c ****         if(bEscIntEnabled)
 2009              	 .loc 4 916 0
 2010 0402 604B     	 ldr r3,.L167+20
 2011 0404 1B78     	 ldrb r3,[r3]
 2012 0406 002B     	 cmp r3,#0
 2013 0408 10D0     	 beq .L137
 917:../SSC/Src/ecatslv.c ****         {
 918:../SSC/Src/ecatslv.c ****             if(nPdOutputSize > 0)
 2014              	 .loc 4 918 0
 2015 040a 594B     	 ldr r3,.L167
 2016 040c 1B88     	 ldrh r3,[r3]
 2017 040e 002B     	 cmp r3,#0
 2018 0410 04D0     	 beq .L138
 919:../SSC/Src/ecatslv.c ****             {
 920:../SSC/Src/ecatslv.c ****                 u16ALEventMask = PROCESS_OUTPUT_EVENT;
 2019              	 .loc 4 920 0
 2020 0412 5D4B     	 ldr r3,.L167+24
 2021 0414 4FF48062 	 mov r2,#1024
 2022 0418 1A80     	 strh r2,[r3]
 2023 041a 07E0     	 b .L137
 2024              	.L138:
 921:../SSC/Src/ecatslv.c ****             }
 922:../SSC/Src/ecatslv.c ****             else if(nPdInputSize > 0)
 2025              	 .loc 4 922 0
 2026 041c 554B     	 ldr r3,.L167+4
 2027 041e 1B88     	 ldrh r3,[r3]
 2028 0420 002B     	 cmp r3,#0
 2029 0422 03D0     	 beq .L137
 923:../SSC/Src/ecatslv.c ****             {
 924:../SSC/Src/ecatslv.c ****                 u16ALEventMask = PROCESS_INPUT_EVENT;
 2030              	 .loc 4 924 0
 2031 0424 584B     	 ldr r3,.L167+24
 2032 0426 4FF40062 	 mov r2,#2048
 2033 042a 1A80     	 strh r2,[r3]
 2034              	.L137:
 925:../SSC/Src/ecatslv.c ****             }
 926:../SSC/Src/ecatslv.c **** 
 927:../SSC/Src/ecatslv.c ****         }
 928:../SSC/Src/ecatslv.c **** 
 929:../SSC/Src/ecatslv.c ****         if ((SyncType0x1C32 == SYNCTYPE_DCSYNC0) || (SyncType0x1C32 == SYNCTYPE_DCSYNC1)
 2035              	 .loc 4 929 0
 2036 042c 3B8D     	 ldrh r3,[r7,#40]
 2037 042e 022B     	 cmp r3,#2
 2038 0430 08D0     	 beq .L139
 2039              	 .loc 4 929 0 is_stmt 0 discriminator 1
 2040 0432 3B8D     	 ldrh r3,[r7,#40]
 2041 0434 032B     	 cmp r3,#3
 2042 0436 05D0     	 beq .L139
 930:../SSC/Src/ecatslv.c ****             || (SyncType0x1C33 == SYNCTYPE_DCSYNC0) || (SyncType0x1C33 == SYNCTYPE_DCSYNC1))/* Sync
 2043              	 .loc 4 930 0 is_stmt 1
 2044 0438 FB8C     	 ldrh r3,[r7,#38]
 2045 043a 022B     	 cmp r3,#2
 2046 043c 02D0     	 beq .L139
 2047              	 .loc 4 930 0 is_stmt 0 discriminator 1
 2048 043e FB8C     	 ldrh r3,[r7,#38]
 2049 0440 032B     	 cmp r3,#3
 2050 0442 09D1     	 bne .L140
 2051              	.L139:
 931:../SSC/Src/ecatslv.c ****         {
 932:../SSC/Src/ecatslv.c ****             /* slave is running in DC-mode */
 933:../SSC/Src/ecatslv.c ****             bDcSyncActive = TRUE;
 2052              	 .loc 4 933 0 is_stmt 1
 2053 0444 514B     	 ldr r3,.L167+28
 2054 0446 0122     	 movs r2,#1
 2055 0448 1A70     	 strb r2,[r3]
 934:../SSC/Src/ecatslv.c **** 
 935:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
 936:../SSC/Src/ecatslv.c ****             /*In case of an Input only application with DC no PDI Isr handling is required*/
 937:../SSC/Src/ecatslv.c ****             if (nPdOutputSize == 0)
 2056              	 .loc 4 937 0
 2057 044a 494B     	 ldr r3,.L167
 2058 044c 1B88     	 ldrh r3,[r3]
 2059 044e 002B     	 cmp r3,#0
 2060 0450 02D1     	 bne .L140
 938:../SSC/Src/ecatslv.c ****             {
 939:../SSC/Src/ecatslv.c ****                u16ALEventMask = 0;
 2061              	 .loc 4 939 0
 2062 0452 4D4B     	 ldr r3,.L167+24
 2063 0454 0022     	 movs r2,#0
 2064 0456 1A80     	 strh r2,[r3]
 2065              	.L140:
 940:../SSC/Src/ecatslv.c ****             }
 941:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
 942:../SSC/Src/ecatslv.c ****         }
 943:../SSC/Src/ecatslv.c **** 
 944:../SSC/Src/ecatslv.c ****     sSyncManOutPar.u16SyncType = SyncType0x1C32;
 2066              	 .loc 4 944 0
 2067 0458 474A     	 ldr r2,.L167+8
 2068 045a 3B8D     	 ldrh r3,[r7,#40]
 2069 045c 5380     	 strh r3,[r2,#2]
 945:../SSC/Src/ecatslv.c ****     sSyncManInPar.u16SyncType = SyncType0x1C33;
 2070              	 .loc 4 945 0
 2071 045e 474A     	 ldr r2,.L167+12
 2072 0460 FB8C     	 ldrh r3,[r7,#38]
 2073 0462 5380     	 strh r3,[r2,#2]
 946:../SSC/Src/ecatslv.c **** 
 947:../SSC/Src/ecatslv.c ****     /* Calculate number of Sync0 events within one SM cycle and the Sync0 events on which the input
 948:../SSC/Src/ecatslv.c ****     LatchInputSync0Value = 0;
 2074              	 .loc 4 948 0
 2075 0464 4A4B     	 ldr r3,.L167+32
 2076 0466 0022     	 movs r2,#0
 2077 0468 1A80     	 strh r2,[r3]
 949:../SSC/Src/ecatslv.c ****     LatchInputSync0Counter = 0;
 2078              	 .loc 4 949 0
 2079 046a 4A4B     	 ldr r3,.L167+36
 2080 046c 0022     	 movs r2,#0
 2081 046e 1A80     	 strh r2,[r3]
 950:../SSC/Src/ecatslv.c ****     u16SmSync0Value = 0;
 2082              	 .loc 4 950 0
 2083 0470 494B     	 ldr r3,.L167+40
 2084 0472 0022     	 movs r2,#0
 2085 0474 1A80     	 strh r2,[r3]
 951:../SSC/Src/ecatslv.c ****     u16SmSync0Counter = 0;
 2086              	 .loc 4 951 0
 2087 0476 494B     	 ldr r3,.L167+44
 2088 0478 0022     	 movs r2,#0
 2089 047a 1A80     	 strh r2,[r3]
 952:../SSC/Src/ecatslv.c **** 
 953:../SSC/Src/ecatslv.c **** 
 954:../SSC/Src/ecatslv.c ****     if(bSubordinatedCycles == TRUE)
 2090              	 .loc 4 954 0
 2091 047c 97F82F30 	 ldrb r3,[r7,#47]
 2092 0480 002B     	 cmp r3,#0
 2093 0482 36D0     	 beq .L141
 955:../SSC/Src/ecatslv.c ****     {
 956:../SSC/Src/ecatslv.c ****         /* get the number of Sync0 event within on SM cycle */
 957:../SSC/Src/ecatslv.c ****         if(cycleTimeSync1 >= cycleTimeSync0)
 2094              	 .loc 4 957 0
 2095 0484 BA69     	 ldr r2,[r7,#24]
 2096 0486 FB69     	 ldr r3,[r7,#28]
 2097 0488 9A42     	 cmp r2,r3
 2098 048a 17D3     	 bcc .L142
 958:../SSC/Src/ecatslv.c ****         {
 959:../SSC/Src/ecatslv.c ****             u16SmSync0Value = (UINT16)(cycleTimeSync1 / cycleTimeSync0);
 2099              	 .loc 4 959 0
 2100 048c BA69     	 ldr r2,[r7,#24]
 2101 048e FB69     	 ldr r3,[r7,#28]
 2102 0490 B2FBF3F3 	 udiv r3,r2,r3
 2103 0494 9AB2     	 uxth r2,r3
 2104 0496 404B     	 ldr r3,.L167+40
 2105 0498 1A80     	 strh r2,[r3]
 960:../SSC/Src/ecatslv.c ****             
 961:../SSC/Src/ecatslv.c ****             if((cycleTimeSync1 % cycleTimeSync0) == 0)
 2106              	 .loc 4 961 0
 2107 049a BB69     	 ldr r3,[r7,#24]
 2108 049c FA69     	 ldr r2,[r7,#28]
 2109 049e B3FBF2F2 	 udiv r2,r3,r2
 2110 04a2 F969     	 ldr r1,[r7,#28]
 2111 04a4 01FB02F2 	 mul r2,r1,r2
 2112 04a8 9B1A     	 subs r3,r3,r2
 2113 04aa 002B     	 cmp r3,#0
 2114 04ac 09D1     	 bne .L144
 962:../SSC/Src/ecatslv.c ****             {
 963:../SSC/Src/ecatslv.c ****                 /* if the Sync1cycletime/Sync0cycletime ratio is even one additional tick */
 964:../SSC/Src/ecatslv.c ****                 u16SmSync0Value ++;
 2115              	 .loc 4 964 0
 2116 04ae 3A4B     	 ldr r3,.L167+40
 2117 04b0 1B88     	 ldrh r3,[r3]
 2118 04b2 0133     	 adds r3,r3,#1
 2119 04b4 9AB2     	 uxth r2,r3
 2120 04b6 384B     	 ldr r3,.L167+40
 2121 04b8 1A80     	 strh r2,[r3]
 2122 04ba 02E0     	 b .L144
 2123              	.L142:
 965:../SSC/Src/ecatslv.c ****         }
 966:../SSC/Src/ecatslv.c ****         }
 967:../SSC/Src/ecatslv.c ****         else
 968:../SSC/Src/ecatslv.c ****         {
 969:../SSC/Src/ecatslv.c ****             u16SmSync0Value = 1;
 2124              	 .loc 4 969 0
 2125 04bc 364B     	 ldr r3,.L167+40
 2126 04be 0122     	 movs r2,#1
 2127 04c0 1A80     	 strh r2,[r3]
 2128              	.L144:
 970:../SSC/Src/ecatslv.c ****         }
 971:../SSC/Src/ecatslv.c **** 
 972:../SSC/Src/ecatslv.c ****         /* Calculate the Sync0 tick on which the inputs shall be latched (last Sync0 before the nex
 973:../SSC/Src/ecatslv.c ****         LatchInputSync0Value = (UINT16) (cycleTimeSync1 / cycleTimeSync0);
 2129              	 .loc 4 973 0
 2130 04c2 BA69     	 ldr r2,[r7,#24]
 2131 04c4 FB69     	 ldr r3,[r7,#28]
 2132 04c6 B2FBF3F3 	 udiv r3,r2,r3
 2133 04ca 9AB2     	 uxth r2,r3
 2134 04cc 304B     	 ldr r3,.L167+32
 2135 04ce 1A80     	 strh r2,[r3]
 974:../SSC/Src/ecatslv.c **** 
 975:../SSC/Src/ecatslv.c ****         if((cycleTimeSync1 % cycleTimeSync0) > 0)
 2136              	 .loc 4 975 0
 2137 04d0 BB69     	 ldr r3,[r7,#24]
 2138 04d2 FA69     	 ldr r2,[r7,#28]
 2139 04d4 B3FBF2F2 	 udiv r2,r3,r2
 2140 04d8 F969     	 ldr r1,[r7,#28]
 2141 04da 01FB02F2 	 mul r2,r1,r2
 2142 04de 9B1A     	 subs r3,r3,r2
 2143 04e0 002B     	 cmp r3,#0
 2144 04e2 12D0     	 beq .L146
 976:../SSC/Src/ecatslv.c ****             LatchInputSync0Value++;
 2145              	 .loc 4 976 0
 2146 04e4 2A4B     	 ldr r3,.L167+32
 2147 04e6 1B88     	 ldrh r3,[r3]
 2148 04e8 0133     	 adds r3,r3,#1
 2149 04ea 9AB2     	 uxth r2,r3
 2150 04ec 284B     	 ldr r3,.L167+32
 2151 04ee 1A80     	 strh r2,[r3]
 2152 04f0 0BE0     	 b .L146
 2153              	.L141:
 977:../SSC/Src/ecatslv.c **** 
 978:../SSC/Src/ecatslv.c ****     }
 979:../SSC/Src/ecatslv.c ****     else 
 980:../SSC/Src/ecatslv.c ****     {
 981:../SSC/Src/ecatslv.c ****         if(SyncType0x1C32 == SYNCTYPE_DCSYNC0)
 2154              	 .loc 4 981 0
 2155 04f2 3B8D     	 ldrh r3,[r7,#40]
 2156 04f4 022B     	 cmp r3,#2
 2157 04f6 02D1     	 bne .L147
 982:../SSC/Src/ecatslv.c ****         {
 983:../SSC/Src/ecatslv.c ****             /* if SyncType of 0x1C32 is 2 the Sync0 event is trigger once during a SM cycle */
 984:../SSC/Src/ecatslv.c ****             u16SmSync0Value = 1;
 2158              	 .loc 4 984 0
 2159 04f8 274B     	 ldr r3,.L167+40
 2160 04fa 0122     	 movs r2,#1
 2161 04fc 1A80     	 strh r2,[r3]
 2162              	.L147:
 985:../SSC/Src/ecatslv.c ****         }   
 986:../SSC/Src/ecatslv.c **** 
 987:../SSC/Src/ecatslv.c ****         if(SyncType0x1C33 != SYNCTYPE_DCSYNC1)
 2163              	 .loc 4 987 0
 2164 04fe FB8C     	 ldrh r3,[r7,#38]
 2165 0500 032B     	 cmp r3,#3
 2166 0502 02D0     	 beq .L146
 988:../SSC/Src/ecatslv.c ****         {
 989:../SSC/Src/ecatslv.c ****             LatchInputSync0Value = 1;
 2167              	 .loc 4 989 0
 2168 0504 224B     	 ldr r3,.L167+32
 2169 0506 0122     	 movs r2,#1
 2170 0508 1A80     	 strh r2,[r3]
 2171              	.L146:
 990:../SSC/Src/ecatslv.c ****         }
 991:../SSC/Src/ecatslv.c ****     }
 992:../SSC/Src/ecatslv.c **** 
 993:../SSC/Src/ecatslv.c **** 
 994:../SSC/Src/ecatslv.c **** 
 995:../SSC/Src/ecatslv.c ****     /* reset the error counter indicating synchronization problems */
 996:../SSC/Src/ecatslv.c ****     sCycleDiag.syncFailedCounter = 0;
 2172              	 .loc 4 996 0
 2173 050a 254B     	 ldr r3,.L167+48
 2174 050c 0022     	 movs r2,#0
 2175 050e 1A80     	 strh r2,[r3]
 997:../SSC/Src/ecatslv.c **** 
 998:../SSC/Src/ecatslv.c **** 
 999:../SSC/Src/ecatslv.c ****     /*
1000:../SSC/Src/ecatslv.c ****         --- Check watchdog settings ---
1001:../SSC/Src/ecatslv.c ****     */
1002:../SSC/Src/ecatslv.c **** 
1003:../SSC/Src/ecatslv.c ****     /*get the watchdog time (register 0x420). if value is > 0 watchdog is active*/
1004:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1005:../SSC/Src/ecatslv.c ****     HW_EscReadWord(wd, ESC_PD_WD_TIME);
 2176              	 .loc 4 1005 0
 2177 0510 244B     	 ldr r3,.L167+52
 2178 0512 1B88     	 ldrh r3,[r3]
 2179 0514 7B84     	 strh r3,[r7,#34]
1006:../SSC/Src/ecatslv.c ****     wd = SWAPWORD(wd);
1007:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1008:../SSC/Src/ecatslv.c **** 
1009:../SSC/Src/ecatslv.c ****     if (nPdOutputSize > 0 &&  wd != 0 )
 2180              	 .loc 4 1009 0
 2181 0516 164B     	 ldr r3,.L167
 2182 0518 1B88     	 ldrh r3,[r3]
 2183 051a 002B     	 cmp r3,#0
 2184 051c 4AD0     	 beq .L148
 2185              	 .loc 4 1009 0 is_stmt 0 discriminator 1
 2186 051e 7B8C     	 ldrh r3,[r7,#34]
 2187 0520 002B     	 cmp r3,#0
 2188 0522 47D0     	 beq .L148
1010:../SSC/Src/ecatslv.c ****     {
1011:../SSC/Src/ecatslv.c ****     /*get watchdog divider (register 0x400)*/
1012:../SSC/Src/ecatslv.c ****     HW_EscReadWord(wdiv, ESC_WD_DIVIDER_OFFSET);
 2189              	 .loc 4 1012 0 is_stmt 1
 2190 0524 204B     	 ldr r3,.L167+56
 2191 0526 1B88     	 ldrh r3,[r3]
 2192 0528 BB84     	 strh r3,[r7,#36]
1013:../SSC/Src/ecatslv.c ****     wdiv = SWAPWORD(wdiv);
1014:../SSC/Src/ecatslv.c ****         if ( wdiv != 0 )
 2193              	 .loc 4 1014 0
 2194 052a BB8C     	 ldrh r3,[r7,#36]
 2195 052c 002B     	 cmp r3,#0
 2196 052e 18D0     	 beq .L149
 2197              	.LBB3:
1015:../SSC/Src/ecatslv.c ****         {
1016:../SSC/Src/ecatslv.c ****             /* the ESC subtracts 2 in register 0x400 so it has to be added here */
1017:../SSC/Src/ecatslv.c ****             UINT32 d = wdiv+2;
 2198              	 .loc 4 1017 0
 2199 0530 BB8C     	 ldrh r3,[r7,#36]
 2200 0532 0233     	 adds r3,r3,#2
 2201 0534 BB60     	 str r3,[r7,#8]
1018:../SSC/Src/ecatslv.c **** 
1019:../SSC/Src/ecatslv.c ****             d *= wd;
 2202              	 .loc 4 1019 0
 2203 0536 7A8C     	 ldrh r2,[r7,#34]
 2204 0538 BB68     	 ldr r3,[r7,#8]
 2205 053a 02FB03F3 	 mul r3,r2,r3
 2206 053e BB60     	 str r3,[r7,#8]
1020:../SSC/Src/ecatslv.c ****             /* store watchdog in ms in variable u16WdValue */
1021:../SSC/Src/ecatslv.c ****             /* watchdog value has to be rounded up */
1022:../SSC/Src/ecatslv.c ****             d += 24999;
 2207              	 .loc 4 1022 0
 2208 0540 BB68     	 ldr r3,[r7,#8]
 2209 0542 03F5C343 	 add r3,r3,#24960
 2210 0546 2733     	 adds r3,r3,#39
 2211 0548 BB60     	 str r3,[r7,#8]
1023:../SSC/Src/ecatslv.c ****             d /= 25000;
 2212              	 .loc 4 1023 0
 2213 054a BB68     	 ldr r3,[r7,#8]
 2214 054c DB08     	 lsrs r3,r3,#3
 2215 054e 174A     	 ldr r2,.L167+60
 2216 0550 A2FB0323 	 umull r2,r3,r2,r3
 2217 0554 1B0A     	 lsrs r3,r3,#8
 2218 0556 BB60     	 str r3,[r7,#8]
1024:../SSC/Src/ecatslv.c ****             EcatWdValue = (UINT16) d;
 2219              	 .loc 4 1024 0
 2220 0558 BB68     	 ldr r3,[r7,#8]
 2221 055a 9AB2     	 uxth r2,r3
 2222 055c 144B     	 ldr r3,.L167+64
 2223 055e 1A80     	 strh r2,[r3]
 2224              	.LBE3:
1014:../SSC/Src/ecatslv.c ****         {
 2225              	 .loc 4 1014 0
 2226 0560 2DE0     	 b .L151
 2227              	.L149:
1025:../SSC/Src/ecatslv.c ****         }
1026:../SSC/Src/ecatslv.c ****         else
1027:../SSC/Src/ecatslv.c ****         {
1028:../SSC/Src/ecatslv.c ****             wd = 0;
 2228              	 .loc 4 1028 0
 2229 0562 0023     	 movs r3,#0
 2230 0564 7B84     	 strh r3,[r7,#34]
1029:../SSC/Src/ecatslv.c ****             /* wd value has to be set to zero, if the wd is 0 */
1030:../SSC/Src/ecatslv.c ****             EcatWdValue = 0;
 2231              	 .loc 4 1030 0
 2232 0566 124B     	 ldr r3,.L167+64
 2233 0568 0022     	 movs r2,#0
 2234 056a 1A80     	 strh r2,[r3]
1014:../SSC/Src/ecatslv.c ****         {
 2235              	 .loc 4 1014 0
 2236 056c 27E0     	 b .L151
 2237              	.L168:
 2238 056e 00BF     	 .align 2
 2239              	.L167:
 2240 0570 00000000 	 .word nPdOutputSize
 2241 0574 00000000 	 .word nPdInputSize
 2242 0578 00000000 	 .word sSyncManOutPar
 2243 057c 00000000 	 .word sSyncManInPar
 2244 0580 00000000 	 .word b3BufferMode
 2245 0584 00000000 	 .word bEscIntEnabled
 2246 0588 00000000 	 .word u16ALEventMask
 2247 058c 00000000 	 .word bDcSyncActive
 2248 0590 00000000 	 .word LatchInputSync0Value
 2249 0594 00000000 	 .word LatchInputSync0Counter
 2250 0598 00000000 	 .word u16SmSync0Value
 2251 059c 00000000 	 .word u16SmSync0Counter
 2252 05a0 00000000 	 .word sCycleDiag
 2253 05a4 20040154 	 .word 1409352736
 2254 05a8 00040154 	 .word 1409352704
 2255 05ac 89B5F814 	 .word 351843721
 2256 05b0 00000000 	 .word EcatWdValue
 2257              	.L148:
1031:../SSC/Src/ecatslv.c ****         }
1032:../SSC/Src/ecatslv.c ****     }
1033:../SSC/Src/ecatslv.c ****     else
1034:../SSC/Src/ecatslv.c ****     {
1035:../SSC/Src/ecatslv.c ****         /* the watchdog is deactivated or slave has no output process data*/
1036:../SSC/Src/ecatslv.c ****         wdiv = 0;
 2258              	 .loc 4 1036 0
 2259 05b4 0023     	 movs r3,#0
 2260 05b6 BB84     	 strh r3,[r7,#36]
1037:../SSC/Src/ecatslv.c ****         EcatWdValue = 0;
 2261              	 .loc 4 1037 0
 2262 05b8 584B     	 ldr r3,.L169
 2263 05ba 0022     	 movs r2,#0
 2264 05bc 1A80     	 strh r2,[r3]
 2265              	.L151:
1038:../SSC/Src/ecatslv.c ****     }
1039:../SSC/Src/ecatslv.c **** 
1040:../SSC/Src/ecatslv.c ****     if((EcatWdValue == 0 && bWdTrigger) || (EcatWdValue != 0 && !bWdTrigger))
 2266              	 .loc 4 1040 0
 2267 05be 574B     	 ldr r3,.L169
 2268 05c0 1B88     	 ldrh r3,[r3]
 2269 05c2 002B     	 cmp r3,#0
 2270 05c4 03D1     	 bne .L152
 2271              	 .loc 4 1040 0 is_stmt 0 discriminator 1
 2272 05c6 564B     	 ldr r3,.L169+4
 2273 05c8 1B78     	 ldrb r3,[r3]
 2274 05ca 002B     	 cmp r3,#0
 2275 05cc 0AD1     	 bne .L153
 2276              	.L152:
 2277              	 .loc 4 1040 0 discriminator 3
 2278 05ce 534B     	 ldr r3,.L169
 2279 05d0 1B88     	 ldrh r3,[r3]
 2280 05d2 002B     	 cmp r3,#0
 2281 05d4 08D0     	 beq .L154
 2282              	 .loc 4 1040 0 discriminator 4
 2283 05d6 524B     	 ldr r3,.L169+4
 2284 05d8 1B78     	 ldrb r3,[r3]
 2285 05da 83F00103 	 eor r3,r3,#1
 2286 05de DBB2     	 uxtb r3,r3
 2287 05e0 002B     	 cmp r3,#0
 2288 05e2 01D0     	 beq .L154
 2289              	.L153:
1041:../SSC/Src/ecatslv.c ****     {
1042:../SSC/Src/ecatslv.c ****         /* if the WD-Trigger in the Sync Manager Channel 2 Control-Byte is set (Bit 6 of Register 0
1043:../SSC/Src/ecatslv.c ****             an error has to be returned */
1044:../SSC/Src/ecatslv.c ****         return ALSTATUSCODE_INVALIDWDCFG;
 2290              	 .loc 4 1044 0 is_stmt 1
 2291 05e4 1F23     	 movs r3,#31
 2292 05e6 95E0     	 b .L97
 2293              	.L154:
1045:../SSC/Src/ecatslv.c ****     }
1046:../SSC/Src/ecatslv.c **** 
1047:../SSC/Src/ecatslv.c ****     if ( bEscIntEnabled && nPdOutputSize != 0 )
 2294              	 .loc 4 1047 0
 2295 05e8 4E4B     	 ldr r3,.L169+8
 2296 05ea 1B78     	 ldrb r3,[r3]
 2297 05ec 002B     	 cmp r3,#0
 2298 05ee 0AD0     	 beq .L155
 2299              	 .loc 4 1047 0 is_stmt 0 discriminator 1
 2300 05f0 4D4B     	 ldr r3,.L169+12
 2301 05f2 1B88     	 ldrh r3,[r3]
 2302 05f4 002B     	 cmp r3,#0
 2303 05f6 06D0     	 beq .L155
1048:../SSC/Src/ecatslv.c ****     {
1049:../SSC/Src/ecatslv.c ****         /* ECAT synchron Mode is active, the Sync Manager Channel 2 event
1050:../SSC/Src/ecatslv.c ****            has to activated in the AL-Event mask register */
1051:../SSC/Src/ecatslv.c ****         u16ALEventMask |= PROCESS_OUTPUT_EVENT;
 2304              	 .loc 4 1051 0 is_stmt 1
 2305 05f8 4C4B     	 ldr r3,.L169+16
 2306 05fa 1B88     	 ldrh r3,[r3]
 2307 05fc 43F48063 	 orr r3,r3,#1024
 2308 0600 9AB2     	 uxth r2,r3
 2309 0602 4A4B     	 ldr r3,.L169+16
 2310 0604 1A80     	 strh r2,[r3]
 2311              	.L155:
1052:../SSC/Src/ecatslv.c ****     }
1053:../SSC/Src/ecatslv.c **** /*The application ESM function is separated from this function to handle pending transitions*/
1054:../SSC/Src/ecatslv.c **** 
1055:../SSC/Src/ecatslv.c ****     Sync0WdValue = 0;
 2312              	 .loc 4 1055 0
 2313 0606 4A4B     	 ldr r3,.L169+20
 2314 0608 0022     	 movs r2,#0
 2315 060a 1A80     	 strh r2,[r3]
1056:../SSC/Src/ecatslv.c ****     Sync0WdCounter = 0;
 2316              	 .loc 4 1056 0
 2317 060c 494B     	 ldr r3,.L169+24
 2318 060e 0022     	 movs r2,#0
 2319 0610 1A80     	 strh r2,[r3]
1057:../SSC/Src/ecatslv.c ****     Sync1WdCounter = 0;
 2320              	 .loc 4 1057 0
 2321 0612 494B     	 ldr r3,.L169+28
 2322 0614 0022     	 movs r2,#0
 2323 0616 1A80     	 strh r2,[r3]
1058:../SSC/Src/ecatslv.c ****     Sync1WdValue = 0;
 2324              	 .loc 4 1058 0
 2325 0618 484B     	 ldr r3,.L169+32
 2326 061a 0022     	 movs r2,#0
 2327 061c 1A80     	 strh r2,[r3]
1059:../SSC/Src/ecatslv.c ****     bDcRunning = FALSE;
 2328              	 .loc 4 1059 0
 2329 061e 484B     	 ldr r3,.L169+36
 2330 0620 0022     	 movs r2,#0
 2331 0622 1A70     	 strb r2,[r3]
1060:../SSC/Src/ecatslv.c ****     bSmSyncSequenceValid = FALSE;
 2332              	 .loc 4 1060 0
 2333 0624 474B     	 ldr r3,.L169+40
 2334 0626 0022     	 movs r2,#0
 2335 0628 1A70     	 strb r2,[r3]
1061:../SSC/Src/ecatslv.c ****     i16WaitForPllRunningTimeout = 0;
 2336              	 .loc 4 1061 0
 2337 062a 474B     	 ldr r3,.L169+44
 2338 062c 0022     	 movs r2,#0
 2339 062e 1A80     	 strh r2,[r3]
1062:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1063:../SSC/Src/ecatslv.c ****     sSyncManInPar.u8SyncError = 0;
 2340              	 .loc 4 1063 0
 2341 0630 464B     	 ldr r3,.L169+48
 2342 0632 0022     	 movs r2,#0
 2343 0634 83F84020 	 strb r2,[r3,#64]
1064:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1065:../SSC/Src/ecatslv.c ****     sSyncManOutPar.u8SyncError = 0;
 2344              	 .loc 4 1065 0
 2345 0638 454B     	 ldr r3,.L169+52
 2346 063a 0022     	 movs r2,#0
 2347 063c 83F84020 	 strb r2,[r3,#64]
1066:../SSC/Src/ecatslv.c ****     sSyncManOutPar.u16SmEventMissedCounter = 0;
 2348              	 .loc 4 1066 0
 2349 0640 434B     	 ldr r3,.L169+52
 2350 0642 0022     	 movs r2,#0
 2351 0644 1A85     	 strh r2,[r3,#40]
1067:../SSC/Src/ecatslv.c **** 
1068:../SSC/Src/ecatslv.c ****     /* calculate the Sync0/Sync1 watchdog timeouts */
1069:../SSC/Src/ecatslv.c ****     if ( (dcControl & ESC_DC_SYNC0_ACTIVE_MASK) != 0 )
 2352              	 .loc 4 1069 0
 2353 0646 FB7B     	 ldrb r3,[r7,#15]
 2354 0648 03F00203 	 and r3,r3,#2
 2355 064c 002B     	 cmp r3,#0
 2356 064e 50D0     	 beq .L156
1070:../SSC/Src/ecatslv.c ****     {
1071:../SSC/Src/ecatslv.c ****         /*calculate the Sync0 Watchdog counter value the minimum value is 1 ms
1072:../SSC/Src/ecatslv.c ****             if the sync0 cycle is greater 500us the Sync0 Wd value is 2*Sycn0 cycle */
1073:../SSC/Src/ecatslv.c ****         if(cycleTimeSync0 == 0)
 2357              	 .loc 4 1073 0
 2358 0650 FB69     	 ldr r3,[r7,#28]
 2359 0652 002B     	 cmp r3,#0
 2360 0654 03D1     	 bne .L157
1074:../SSC/Src/ecatslv.c ****         {
1075:../SSC/Src/ecatslv.c ****             Sync0WdValue = 0;
 2361              	 .loc 4 1075 0
 2362 0656 364B     	 ldr r3,.L169+20
 2363 0658 0022     	 movs r2,#0
 2364 065a 1A80     	 strh r2,[r3]
 2365 065c 18E0     	 b .L158
 2366              	.L157:
 2367              	.LBB4:
1076:../SSC/Src/ecatslv.c ****         }
1077:../SSC/Src/ecatslv.c ****         else
1078:../SSC/Src/ecatslv.c ****         {
1079:../SSC/Src/ecatslv.c ****             UINT32 Sync0Cycle = cycleTimeSync0/100000;
 2368              	 .loc 4 1079 0
 2369 065e FB69     	 ldr r3,[r7,#28]
 2370 0660 5B09     	 lsrs r3,r3,#5
 2371 0662 3C4A     	 ldr r2,.L169+56
 2372 0664 A2FB0323 	 umull r2,r3,r2,r3
 2373 0668 DB09     	 lsrs r3,r3,#7
 2374 066a 7B60     	 str r3,[r7,#4]
1080:../SSC/Src/ecatslv.c ****             if(Sync0Cycle < 5)
 2375              	 .loc 4 1080 0
 2376 066c 7B68     	 ldr r3,[r7,#4]
 2377 066e 042B     	 cmp r3,#4
 2378 0670 03D8     	 bhi .L159
1081:../SSC/Src/ecatslv.c ****             {
1082:../SSC/Src/ecatslv.c ****                 /*Sync0 cycle less than 500us*/
1083:../SSC/Src/ecatslv.c ****                 Sync0WdValue = 1;
 2379              	 .loc 4 1083 0
 2380 0672 2F4B     	 ldr r3,.L169+20
 2381 0674 0122     	 movs r2,#1
 2382 0676 1A80     	 strh r2,[r3]
 2383 0678 0AE0     	 b .L158
 2384              	.L159:
1084:../SSC/Src/ecatslv.c ****             }
1085:../SSC/Src/ecatslv.c ****             else
1086:../SSC/Src/ecatslv.c ****             {
1087:../SSC/Src/ecatslv.c ****                 Sync0WdValue = (UINT16)(Sync0Cycle*2)/10;
 2385              	 .loc 4 1087 0
 2386 067a 7B68     	 ldr r3,[r7,#4]
 2387 067c 9BB2     	 uxth r3,r3
 2388 067e 5B00     	 lsls r3,r3,#1
 2389 0680 9BB2     	 uxth r3,r3
 2390 0682 354A     	 ldr r2,.L169+60
 2391 0684 A2FB0323 	 umull r2,r3,r2,r3
 2392 0688 DB08     	 lsrs r3,r3,#3
 2393 068a 9AB2     	 uxth r2,r3
 2394 068c 284B     	 ldr r3,.L169+20
 2395 068e 1A80     	 strh r2,[r3]
 2396              	.L158:
 2397              	.LBE4:
1088:../SSC/Src/ecatslv.c ****             }
1089:../SSC/Src/ecatslv.c ****         }
1090:../SSC/Src/ecatslv.c **** 
1091:../SSC/Src/ecatslv.c ****         /* Calculate also the watchdog time for Sync1*/
1092:../SSC/Src/ecatslv.c ****         if ( (dcControl & ESC_DC_SYNC1_ACTIVE_MASK) != 0 )
 2398              	 .loc 4 1092 0
 2399 0690 FB7B     	 ldrb r3,[r7,#15]
 2400 0692 03F00403 	 and r3,r3,#4
 2401 0696 002B     	 cmp r3,#0
 2402 0698 2BD0     	 beq .L156
1093:../SSC/Src/ecatslv.c ****         {
1094:../SSC/Src/ecatslv.c ****             if(cycleTimeSync1 < cycleTimeSync0)
 2403              	 .loc 4 1094 0
 2404 069a BA69     	 ldr r2,[r7,#24]
 2405 069c FB69     	 ldr r3,[r7,#28]
 2406 069e 9A42     	 cmp r2,r3
 2407 06a0 04D2     	 bcs .L160
1095:../SSC/Src/ecatslv.c ****         {
1096:../SSC/Src/ecatslv.c ****                 /* Sync 1 has the same cycle time than Sync0 (maybe with a shift (cycleTimeSync1 > 
1097:../SSC/Src/ecatslv.c ****                 Sync1WdValue = Sync0WdValue;
 2408              	 .loc 4 1097 0
 2409 06a2 234B     	 ldr r3,.L169+20
 2410 06a4 1A88     	 ldrh r2,[r3]
 2411 06a6 254B     	 ldr r3,.L169+32
 2412 06a8 1A80     	 strh r2,[r3]
 2413 06aa 22E0     	 b .L156
 2414              	.L160:
 2415              	.LBB5:
1098:../SSC/Src/ecatslv.c ****         }
1099:../SSC/Src/ecatslv.c ****         else
1100:../SSC/Src/ecatslv.c ****         {
1101:../SSC/Src/ecatslv.c ****                 /* Sync1 cycle is larger than Sync0 (e.g. subordinated Sync0 cycles) */
1102:../SSC/Src/ecatslv.c ****                 UINT32 Sync1Cycle = cycleTimeSync1/100000;
 2416              	 .loc 4 1102 0
 2417 06ac BB69     	 ldr r3,[r7,#24]
 2418 06ae 5B09     	 lsrs r3,r3,#5
 2419 06b0 284A     	 ldr r2,.L169+56
 2420 06b2 A2FB0323 	 umull r2,r3,r2,r3
 2421 06b6 DB09     	 lsrs r3,r3,#7
 2422 06b8 3B60     	 str r3,[r7]
1103:../SSC/Src/ecatslv.c ****                 if(Sync1Cycle < 5)
 2423              	 .loc 4 1103 0
 2424 06ba 3B68     	 ldr r3,[r7]
 2425 06bc 042B     	 cmp r3,#4
 2426 06be 03D8     	 bhi .L161
1104:../SSC/Src/ecatslv.c ****                 {
1105:../SSC/Src/ecatslv.c ****                     /*Sync0 cycle less than 500us*/
1106:../SSC/Src/ecatslv.c ****                     Sync1WdValue = 1;
 2427              	 .loc 4 1106 0
 2428 06c0 1E4B     	 ldr r3,.L169+32
 2429 06c2 0122     	 movs r2,#1
 2430 06c4 1A80     	 strh r2,[r3]
 2431 06c6 0AE0     	 b .L162
 2432              	.L161:
1107:../SSC/Src/ecatslv.c ****     }
1108:../SSC/Src/ecatslv.c ****     else
1109:../SSC/Src/ecatslv.c ****     {
1110:../SSC/Src/ecatslv.c ****                     Sync1WdValue = (UINT16)(Sync1Cycle*2)/10;
 2433              	 .loc 4 1110 0
 2434 06c8 3B68     	 ldr r3,[r7]
 2435 06ca 9BB2     	 uxth r3,r3
 2436 06cc 5B00     	 lsls r3,r3,#1
 2437 06ce 9BB2     	 uxth r3,r3
 2438 06d0 214A     	 ldr r2,.L169+60
 2439 06d2 A2FB0323 	 umull r2,r3,r2,r3
 2440 06d6 DB08     	 lsrs r3,r3,#3
 2441 06d8 9AB2     	 uxth r2,r3
 2442 06da 184B     	 ldr r3,.L169+32
 2443 06dc 1A80     	 strh r2,[r3]
 2444              	.L162:
1111:../SSC/Src/ecatslv.c ****                 }
1112:../SSC/Src/ecatslv.c **** 
1113:../SSC/Src/ecatslv.c ****                 /* add one Sync0 cycle because the Sync1 cycle starts on the next Sync0 after the S
1114:../SSC/Src/ecatslv.c ****                 Sync1WdValue += Sync0WdValue/2;
 2445              	 .loc 4 1114 0
 2446 06de 144B     	 ldr r3,.L169+20
 2447 06e0 1B88     	 ldrh r3,[r3]
 2448 06e2 5B08     	 lsrs r3,r3,#1
 2449 06e4 9AB2     	 uxth r2,r3
 2450 06e6 154B     	 ldr r3,.L169+32
 2451 06e8 1B88     	 ldrh r3,[r3]
 2452 06ea 1344     	 add r3,r3,r2
 2453 06ec 9AB2     	 uxth r2,r3
 2454 06ee 134B     	 ldr r3,.L169+32
 2455 06f0 1A80     	 strh r2,[r3]
 2456              	.L156:
 2457              	.LBE5:
1115:../SSC/Src/ecatslv.c ****             }
1116:../SSC/Src/ecatslv.c ****     }
1117:../SSC/Src/ecatslv.c ****     }
1118:../SSC/Src/ecatslv.c **** 
1119:../SSC/Src/ecatslv.c **** 
1120:../SSC/Src/ecatslv.c **** 
1121:../SSC/Src/ecatslv.c **** 
1122:../SSC/Src/ecatslv.c **** 
1123:../SSC/Src/ecatslv.c ****     if(nPdOutputSize > 0)
 2458              	 .loc 4 1123 0
 2459 06f2 0D4B     	 ldr r3,.L169+12
 2460 06f4 1B88     	 ldrh r3,[r3]
 2461 06f6 002B     	 cmp r3,#0
 2462 06f8 02D0     	 beq .L163
1124:../SSC/Src/ecatslv.c ****     {
1125:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1126:../SSC/Src/ecatslv.c ****         EnableSyncManChannel(PROCESS_DATA_OUT);
 2463              	 .loc 4 1126 0
 2464 06fa 0220     	 movs r0,#2
 2465 06fc FFF7FEFF 	 bl EnableSyncManChannel
 2466              	.L163:
1127:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1128:../SSC/Src/ecatslv.c ****     }
1129:../SSC/Src/ecatslv.c **** 
1130:../SSC/Src/ecatslv.c ****     if(nPdInputSize > 0)
 2467              	 .loc 4 1130 0
 2468 0700 164B     	 ldr r3,.L169+64
 2469 0702 1B88     	 ldrh r3,[r3]
 2470 0704 002B     	 cmp r3,#0
 2471 0706 02D0     	 beq .L164
1131:../SSC/Src/ecatslv.c ****     {
1132:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1133:../SSC/Src/ecatslv.c ****         EnableSyncManChannel(PROCESS_DATA_IN);
 2472              	 .loc 4 1133 0
 2473 0708 0320     	 movs r0,#3
 2474 070a FFF7FEFF 	 bl EnableSyncManChannel
 2475              	.L164:
1134:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1135:../SSC/Src/ecatslv.c ****     }
1136:../SSC/Src/ecatslv.c **** 
1137:../SSC/Src/ecatslv.c ****     /*write initial input data*/
1138:../SSC/Src/ecatslv.c ****     PDO_InputMapping();
 2476              	 .loc 4 1138 0
 2477 070e FFF7FEFF 	 bl PDO_InputMapping
1139:../SSC/Src/ecatslv.c **** 
1140:../SSC/Src/ecatslv.c ****     return ALSTATUSCODE_NOERROR;
 2478              	 .loc 4 1140 0
 2479 0712 0023     	 movs r3,#0
 2480              	.L97:
1141:../SSC/Src/ecatslv.c **** }
 2481              	 .loc 4 1141 0
 2482 0714 1846     	 mov r0,r3
 2483 0716 3037     	 adds r7,r7,#48
 2484              	.LCFI68:
 2485              	 .cfi_def_cfa_offset 8
 2486 0718 BD46     	 mov sp,r7
 2487              	.LCFI69:
 2488              	 .cfi_def_cfa_register 13
 2489              	 
 2490 071a 80BD     	 pop {r7,pc}
 2491              	.L170:
 2492              	 .align 2
 2493              	.L169:
 2494 071c 00000000 	 .word EcatWdValue
 2495 0720 00000000 	 .word bWdTrigger
 2496 0724 00000000 	 .word bEscIntEnabled
 2497 0728 00000000 	 .word nPdOutputSize
 2498 072c 00000000 	 .word u16ALEventMask
 2499 0730 00000000 	 .word Sync0WdValue
 2500 0734 00000000 	 .word Sync0WdCounter
 2501 0738 00000000 	 .word Sync1WdCounter
 2502 073c 00000000 	 .word Sync1WdValue
 2503 0740 00000000 	 .word bDcRunning
 2504 0744 00000000 	 .word bSmSyncSequenceValid
 2505 0748 00000000 	 .word i16WaitForPllRunningTimeout
 2506 074c 00000000 	 .word sSyncManInPar
 2507 0750 00000000 	 .word sSyncManOutPar
 2508 0754 C55A7C0A 	 .word 175921861
 2509 0758 CDCCCCCC 	 .word -858993459
 2510 075c 00000000 	 .word nPdInputSize
 2511              	 .cfi_endproc
 2512              	.LFE179:
 2514              	 .section .text.StartOutputHandler,"ax",%progbits
 2515              	 .align 2
 2516              	 .global StartOutputHandler
 2517              	 .thumb
 2518              	 .thumb_func
 2520              	StartOutputHandler:
 2521              	.LFB180:
1142:../SSC/Src/ecatslv.c **** 
1143:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1144:../SSC/Src/ecatslv.c **** /**
1145:../SSC/Src/ecatslv.c ****  \return    AL Status Code (see ecatslv.h ALSTATUSCODE_....)
1146:../SSC/Src/ecatslv.c **** 
1147:../SSC/Src/ecatslv.c ****  \brief    This function is called in case of the state transition from SAFEOP to OP.
1148:../SSC/Src/ecatslv.c ****  \brief  It will be checked if outputs had to be received before switching to OP
1149:../SSC/Src/ecatslv.c ****  \brief  and the state transition would be refused if outputs are missing
1150:../SSC/Src/ecatslv.c **** 
1151:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1152:../SSC/Src/ecatslv.c **** 
1153:../SSC/Src/ecatslv.c **** UINT16 StartOutputHandler(void)
1154:../SSC/Src/ecatslv.c **** {
 2522              	 .loc 4 1154 0
 2523              	 .cfi_startproc
 2524              	 
 2525              	 
 2526              	 
 2527 0000 80B4     	 push {r7}
 2528              	.LCFI70:
 2529              	 .cfi_def_cfa_offset 4
 2530              	 .cfi_offset 7,-4
 2531 0002 83B0     	 sub sp,sp,#12
 2532              	.LCFI71:
 2533              	 .cfi_def_cfa_offset 16
 2534 0004 00AF     	 add r7,sp,#0
 2535              	.LCFI72:
 2536              	 .cfi_def_cfa_register 7
1155:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM6*/
1156:../SSC/Src/ecatslv.c ****     /* by default the SO transition should be completed in AlControlRes().
1157:../SSC/Src/ecatslv.c ****        required to support also masters which starts to send process data after the SO transition w
1158:../SSC/Src/ecatslv.c ****        (if the master don't send process data within "SAFEOP2OPTIMEOUT" the transition is rejected)
1159:../SSC/Src/ecatslv.c ****     UINT16 result = NOERROR_INWORK;
 2537              	 .loc 4 1159 0
 2538 0006 FF23     	 movs r3,#255
 2539 0008 FB80     	 strh r3,[r7,#6]
1160:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM6*/
1161:../SSC/Src/ecatslv.c ****     if(bLocalErrorFlag)
 2540              	 .loc 4 1161 0
 2541 000a 0C4B     	 ldr r3,.L175
 2542 000c 1B78     	 ldrb r3,[r3]
 2543 000e 002B     	 cmp r3,#0
 2544 0010 02D0     	 beq .L172
1162:../SSC/Src/ecatslv.c ****     {
1163:../SSC/Src/ecatslv.c ****         /*Local error still exists => skip state request to OP and response with "u16LocalErrorCode
1164:../SSC/Src/ecatslv.c ****         return u16LocalErrorCode;
 2545              	 .loc 4 1164 0
 2546 0012 0B4B     	 ldr r3,.L175+4
 2547 0014 1B88     	 ldrh r3,[r3]
 2548 0016 0AE0     	 b .L173
 2549              	.L172:
1165:../SSC/Src/ecatslv.c ****     }
1166:../SSC/Src/ecatslv.c **** /*The application ESM function is separated from this function to handle pending transitions*/
1167:../SSC/Src/ecatslv.c **** 
1168:../SSC/Src/ecatslv.c **** 
1169:../SSC/Src/ecatslv.c ****     /*DC synchronisation is active wait until pll is valid*/
1170:../SSC/Src/ecatslv.c ****     if(bDcSyncActive)
 2550              	 .loc 4 1170 0
 2551 0018 0A4B     	 ldr r3,.L175+8
 2552 001a 1B78     	 ldrb r3,[r3]
 2553 001c 002B     	 cmp r3,#0
 2554 001e 05D0     	 beq .L174
1171:../SSC/Src/ecatslv.c ****     {
1172:../SSC/Src/ecatslv.c ****         i16WaitForPllRunningTimeout = 200;
 2555              	 .loc 4 1172 0
 2556 0020 094B     	 ldr r3,.L175+12
 2557 0022 C822     	 movs r2,#200
 2558 0024 1A80     	 strh r2,[r3]
1173:../SSC/Src/ecatslv.c ****         i16WaitForPllRunningCnt = 0;
 2559              	 .loc 4 1173 0
 2560 0026 094B     	 ldr r3,.L175+16
 2561 0028 0022     	 movs r2,#0
 2562 002a 1A80     	 strh r2,[r3]
 2563              	.L174:
1174:../SSC/Src/ecatslv.c ****     }
1175:../SSC/Src/ecatslv.c **** 
1176:../SSC/Src/ecatslv.c **** 
1177:../SSC/Src/ecatslv.c ****     return result;
 2564              	 .loc 4 1177 0
 2565 002c FB88     	 ldrh r3,[r7,#6]
 2566              	.L173:
1178:../SSC/Src/ecatslv.c **** }
 2567              	 .loc 4 1178 0
 2568 002e 1846     	 mov r0,r3
 2569 0030 0C37     	 adds r7,r7,#12
 2570              	.LCFI73:
 2571              	 .cfi_def_cfa_offset 4
 2572 0032 BD46     	 mov sp,r7
 2573              	.LCFI74:
 2574              	 .cfi_def_cfa_register 13
 2575              	 
 2576 0034 5DF8047B 	 ldr r7,[sp],#4
 2577              	.LCFI75:
 2578              	 .cfi_restore 7
 2579              	 .cfi_def_cfa_offset 0
 2580 0038 7047     	 bx lr
 2581              	.L176:
 2582 003a 00BF     	 .align 2
 2583              	.L175:
 2584 003c 00000000 	 .word bLocalErrorFlag
 2585 0040 00000000 	 .word u16LocalErrorCode
 2586 0044 00000000 	 .word bDcSyncActive
 2587 0048 00000000 	 .word i16WaitForPllRunningTimeout
 2588 004c 00000000 	 .word i16WaitForPllRunningCnt
 2589              	 .cfi_endproc
 2590              	.LFE180:
 2592              	 .section .text.StopOutputHandler,"ax",%progbits
 2593              	 .align 2
 2594              	 .global StopOutputHandler
 2595              	 .thumb
 2596              	 .thumb_func
 2598              	StopOutputHandler:
 2599              	.LFB181:
1179:../SSC/Src/ecatslv.c **** 
1180:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1181:../SSC/Src/ecatslv.c **** /**
1182:../SSC/Src/ecatslv.c ****  \brief    This function is called in case of the state transition from OP to SAFEOP
1183:../SSC/Src/ecatslv.c ****  \brief  the outputs can be set to an application specific safe state,
1184:../SSC/Src/ecatslv.c ****  \brief  the state transition can be delayed by returning NOERROR_INWORK
1185:../SSC/Src/ecatslv.c **** 
1186:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1187:../SSC/Src/ecatslv.c **** 
1188:../SSC/Src/ecatslv.c **** void StopOutputHandler(void)
1189:../SSC/Src/ecatslv.c **** {
 2600              	 .loc 4 1189 0
 2601              	 .cfi_startproc
 2602              	 
 2603              	 
 2604              	 
 2605 0000 80B4     	 push {r7}
 2606              	.LCFI76:
 2607              	 .cfi_def_cfa_offset 4
 2608              	 .cfi_offset 7,-4
 2609 0002 00AF     	 add r7,sp,#0
 2610              	.LCFI77:
 2611              	 .cfi_def_cfa_register 7
1190:../SSC/Src/ecatslv.c ****     /* reset the flags that outputs were received and that the slave is in OP */
1191:../SSC/Src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 2612              	 .loc 4 1191 0
 2613 0004 044B     	 ldr r3,.L178
 2614 0006 0022     	 movs r2,#0
 2615 0008 1A70     	 strb r2,[r3]
1192:../SSC/Src/ecatslv.c ****     bEcatOutputUpdateRunning = FALSE;
 2616              	 .loc 4 1192 0
 2617 000a 044B     	 ldr r3,.L178+4
 2618 000c 0022     	 movs r2,#0
 2619 000e 1A70     	 strb r2,[r3]
1193:../SSC/Src/ecatslv.c **** }
 2620              	 .loc 4 1193 0
 2621 0010 BD46     	 mov sp,r7
 2622              	.LCFI78:
 2623              	 .cfi_def_cfa_register 13
 2624              	 
 2625 0012 5DF8047B 	 ldr r7,[sp],#4
 2626              	.LCFI79:
 2627              	 .cfi_restore 7
 2628              	 .cfi_def_cfa_offset 0
 2629 0016 7047     	 bx lr
 2630              	.L179:
 2631              	 .align 2
 2632              	.L178:
 2633 0018 00000000 	 .word bEcatFirstOutputsReceived
 2634 001c 00000000 	 .word bEcatOutputUpdateRunning
 2635              	 .cfi_endproc
 2636              	.LFE181:
 2638              	 .section .text.StopInputHandler,"ax",%progbits
 2639              	 .align 2
 2640              	 .global StopInputHandler
 2641              	 .thumb
 2642              	 .thumb_func
 2644              	StopInputHandler:
 2645              	.LFB182:
1194:../SSC/Src/ecatslv.c **** 
1195:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1196:../SSC/Src/ecatslv.c **** /**
1197:../SSC/Src/ecatslv.c ****   \brief    This function is called in case of the state transition from SAFEOP to PREOP
1198:../SSC/Src/ecatslv.c **** 
1199:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1200:../SSC/Src/ecatslv.c **** 
1201:../SSC/Src/ecatslv.c **** void StopInputHandler(void)
1202:../SSC/Src/ecatslv.c **** {
 2646              	 .loc 4 1202 0
 2647              	 .cfi_startproc
 2648              	 
 2649              	 
 2650 0000 80B5     	 push {r7,lr}
 2651              	.LCFI80:
 2652              	 .cfi_def_cfa_offset 8
 2653              	 .cfi_offset 7,-8
 2654              	 .cfi_offset 14,-4
 2655 0002 82B0     	 sub sp,sp,#8
 2656              	.LCFI81:
 2657              	 .cfi_def_cfa_offset 16
 2658 0004 00AF     	 add r7,sp,#0
 2659              	.LCFI82:
 2660              	 .cfi_def_cfa_register 7
1203:../SSC/Src/ecatslv.c ****     if(nPdOutputSize > 0)
 2661              	 .loc 4 1203 0
 2662 0006 2C4B     	 ldr r3,.L183
 2663 0008 1B88     	 ldrh r3,[r3]
 2664 000a 002B     	 cmp r3,#0
 2665 000c 02D0     	 beq .L181
1204:../SSC/Src/ecatslv.c ****     {
1205:../SSC/Src/ecatslv.c ****         /* disable the Sync Manager Channel 2 (outputs) */
1206:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1207:../SSC/Src/ecatslv.c ****         DisableSyncManChannel(PROCESS_DATA_OUT);
 2666              	 .loc 4 1207 0
 2667 000e 0220     	 movs r0,#2
 2668 0010 FFF7FEFF 	 bl DisableSyncManChannel
 2669              	.L181:
1208:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1209:../SSC/Src/ecatslv.c ****     }
1210:../SSC/Src/ecatslv.c **** 
1211:../SSC/Src/ecatslv.c ****     if(nPdInputSize > 0)
 2670              	 .loc 4 1211 0
 2671 0014 294B     	 ldr r3,.L183+4
 2672 0016 1B88     	 ldrh r3,[r3]
 2673 0018 002B     	 cmp r3,#0
 2674 001a 02D0     	 beq .L182
1212:../SSC/Src/ecatslv.c ****     {
1213:../SSC/Src/ecatslv.c ****         /*disable Sync Manager 3 (inputs) if no outputs available*/
1214:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1215:../SSC/Src/ecatslv.c ****         DisableSyncManChannel(PROCESS_DATA_IN);
 2675              	 .loc 4 1215 0
 2676 001c 0320     	 movs r0,#3
 2677 001e FFF7FEFF 	 bl DisableSyncManChannel
 2678              	.L182:
 2679              	.LBB6:
1216:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1217:../SSC/Src/ecatslv.c ****     }
1218:../SSC/Src/ecatslv.c **** 
1219:../SSC/Src/ecatslv.c ****     /* reset the events in the AL Event mask register (0x204) */
1220:../SSC/Src/ecatslv.c ****     {
1221:../SSC/Src/ecatslv.c ****         UINT16 ResetMask = SYNC0_EVENT | SYNC1_EVENT;
 2680              	 .loc 4 1221 0
 2681 0022 0C23     	 movs r3,#12
 2682 0024 FB80     	 strh r3,[r7,#6]
1222:../SSC/Src/ecatslv.c ****         ResetMask |= PROCESS_OUTPUT_EVENT;
 2683              	 .loc 4 1222 0
 2684 0026 FB88     	 ldrh r3,[r7,#6]
 2685 0028 43F48063 	 orr r3,r3,#1024
 2686 002c FB80     	 strh r3,[r7,#6]
1223:../SSC/Src/ecatslv.c ****         ResetMask |= PROCESS_INPUT_EVENT;
 2687              	 .loc 4 1223 0
 2688 002e FB88     	 ldrh r3,[r7,#6]
 2689 0030 43F40063 	 orr r3,r3,#2048
 2690 0034 FB80     	 strh r3,[r7,#6]
1224:../SSC/Src/ecatslv.c **** 
1225:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1226:../SSC/Src/ecatslv.c ****     ResetALEventMask( ~(ResetMask) );
 2691              	 .loc 4 1226 0
 2692 0036 FB88     	 ldrh r3,[r7,#6]
 2693 0038 DB43     	 mvns r3,r3
 2694 003a 9BB2     	 uxth r3,r3
 2695 003c 1846     	 mov r0,r3
 2696 003e FFF7FEFF 	 bl ResetALEventMask
 2697              	.LBE6:
1227:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1228:../SSC/Src/ecatslv.c ****     }
1229:../SSC/Src/ecatslv.c ****     /* reset the flags */
1230:../SSC/Src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 2698              	 .loc 4 1230 0
 2699 0042 1F4B     	 ldr r3,.L183+8
 2700 0044 0022     	 movs r2,#0
 2701 0046 1A70     	 strb r2,[r3]
1231:../SSC/Src/ecatslv.c ****     bEscIntEnabled = FALSE;
 2702              	 .loc 4 1231 0
 2703 0048 1E4B     	 ldr r3,.L183+12
 2704 004a 0022     	 movs r2,#0
 2705 004c 1A70     	 strb r2,[r3]
1232:../SSC/Src/ecatslv.c **** /*The application ESM function is separated from this function to handle pending transitions*/
1233:../SSC/Src/ecatslv.c **** 
1234:../SSC/Src/ecatslv.c ****     bDcSyncActive = FALSE;
 2706              	 .loc 4 1234 0
 2707 004e 1E4B     	 ldr r3,.L183+16
 2708 0050 0022     	 movs r2,#0
 2709 0052 1A70     	 strb r2,[r3]
1235:../SSC/Src/ecatslv.c ****     bDcRunning = FALSE;
 2710              	 .loc 4 1235 0
 2711 0054 1D4B     	 ldr r3,.L183+20
 2712 0056 0022     	 movs r2,#0
 2713 0058 1A70     	 strb r2,[r3]
1236:../SSC/Src/ecatslv.c ****     bSmSyncSequenceValid = FALSE;
 2714              	 .loc 4 1236 0
 2715 005a 1D4B     	 ldr r3,.L183+24
 2716 005c 0022     	 movs r2,#0
 2717 005e 1A70     	 strb r2,[r3]
1237:../SSC/Src/ecatslv.c ****     u16SmSync0Value = 0;
 2718              	 .loc 4 1237 0
 2719 0060 1C4B     	 ldr r3,.L183+28
 2720 0062 0022     	 movs r2,#0
 2721 0064 1A80     	 strh r2,[r3]
1238:../SSC/Src/ecatslv.c ****     u16SmSync0Counter = 0;
 2722              	 .loc 4 1238 0
 2723 0066 1C4B     	 ldr r3,.L183+32
 2724 0068 0022     	 movs r2,#0
 2725 006a 1A80     	 strh r2,[r3]
1239:../SSC/Src/ecatslv.c **** 
1240:../SSC/Src/ecatslv.c ****     Sync0WdValue = 0;
 2726              	 .loc 4 1240 0
 2727 006c 1B4B     	 ldr r3,.L183+36
 2728 006e 0022     	 movs r2,#0
 2729 0070 1A80     	 strh r2,[r3]
1241:../SSC/Src/ecatslv.c ****     Sync0WdCounter = 0;
 2730              	 .loc 4 1241 0
 2731 0072 1B4B     	 ldr r3,.L183+40
 2732 0074 0022     	 movs r2,#0
 2733 0076 1A80     	 strh r2,[r3]
1242:../SSC/Src/ecatslv.c ****     Sync1WdCounter = 0;
 2734              	 .loc 4 1242 0
 2735 0078 1A4B     	 ldr r3,.L183+44
 2736 007a 0022     	 movs r2,#0
 2737 007c 1A80     	 strh r2,[r3]
1243:../SSC/Src/ecatslv.c ****     Sync1WdValue = 0;
 2738              	 .loc 4 1243 0
 2739 007e 1A4B     	 ldr r3,.L183+48
 2740 0080 0022     	 movs r2,#0
 2741 0082 1A80     	 strh r2,[r3]
1244:../SSC/Src/ecatslv.c ****     LatchInputSync0Value = 0;
 2742              	 .loc 4 1244 0
 2743 0084 194B     	 ldr r3,.L183+52
 2744 0086 0022     	 movs r2,#0
 2745 0088 1A80     	 strh r2,[r3]
1245:../SSC/Src/ecatslv.c ****     LatchInputSync0Counter = 0;
 2746              	 .loc 4 1245 0
 2747 008a 194B     	 ldr r3,.L183+56
 2748 008c 0022     	 movs r2,#0
 2749 008e 1A80     	 strh r2,[r3]
1246:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1247:../SSC/Src/ecatslv.c ****     sSyncManInPar.u8SyncError = 0;
 2750              	 .loc 4 1247 0
 2751 0090 184B     	 ldr r3,.L183+60
 2752 0092 0022     	 movs r2,#0
 2753 0094 83F84020 	 strb r2,[r3,#64]
1248:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1249:../SSC/Src/ecatslv.c **** 
1250:../SSC/Src/ecatslv.c ****     i16WaitForPllRunningTimeout = 0;
 2754              	 .loc 4 1250 0
 2755 0098 174B     	 ldr r3,.L183+64
 2756 009a 0022     	 movs r2,#0
 2757 009c 1A80     	 strh r2,[r3]
1251:../SSC/Src/ecatslv.c **** 
1252:../SSC/Src/ecatslv.c ****     bWdTrigger = FALSE;
 2758              	 .loc 4 1252 0
 2759 009e 174B     	 ldr r3,.L183+68
 2760 00a0 0022     	 movs r2,#0
 2761 00a2 1A70     	 strb r2,[r3]
1253:../SSC/Src/ecatslv.c ****     bEcatInputUpdateRunning = FALSE;
 2762              	 .loc 4 1253 0
 2763 00a4 164B     	 ldr r3,.L183+72
 2764 00a6 0022     	 movs r2,#0
 2765 00a8 1A70     	 strb r2,[r3]
1254:../SSC/Src/ecatslv.c **** 
1255:../SSC/Src/ecatslv.c ****     /*Indicate no user specified Sync mode*/
1256:../SSC/Src/ecatslv.c ****     bSyncSetByUser = FALSE;
 2766              	 .loc 4 1256 0
 2767 00aa 164B     	 ldr r3,.L183+76
 2768 00ac 0022     	 movs r2,#0
 2769 00ae 1A70     	 strb r2,[r3]
1257:../SSC/Src/ecatslv.c **** }
 2770              	 .loc 4 1257 0
 2771 00b0 0837     	 adds r7,r7,#8
 2772              	.LCFI83:
 2773              	 .cfi_def_cfa_offset 8
 2774 00b2 BD46     	 mov sp,r7
 2775              	.LCFI84:
 2776              	 .cfi_def_cfa_register 13
 2777              	 
 2778 00b4 80BD     	 pop {r7,pc}
 2779              	.L184:
 2780 00b6 00BF     	 .align 2
 2781              	.L183:
 2782 00b8 00000000 	 .word nPdOutputSize
 2783 00bc 00000000 	 .word nPdInputSize
 2784 00c0 00000000 	 .word bEcatFirstOutputsReceived
 2785 00c4 00000000 	 .word bEscIntEnabled
 2786 00c8 00000000 	 .word bDcSyncActive
 2787 00cc 00000000 	 .word bDcRunning
 2788 00d0 00000000 	 .word bSmSyncSequenceValid
 2789 00d4 00000000 	 .word u16SmSync0Value
 2790 00d8 00000000 	 .word u16SmSync0Counter
 2791 00dc 00000000 	 .word Sync0WdValue
 2792 00e0 00000000 	 .word Sync0WdCounter
 2793 00e4 00000000 	 .word Sync1WdCounter
 2794 00e8 00000000 	 .word Sync1WdValue
 2795 00ec 00000000 	 .word LatchInputSync0Value
 2796 00f0 00000000 	 .word LatchInputSync0Counter
 2797 00f4 00000000 	 .word sSyncManInPar
 2798 00f8 00000000 	 .word i16WaitForPllRunningTimeout
 2799 00fc 00000000 	 .word bWdTrigger
 2800 0100 00000000 	 .word bEcatInputUpdateRunning
 2801 0104 00000000 	 .word bSyncSetByUser
 2802              	 .cfi_endproc
 2803              	.LFE182:
 2805              	 .section .text.BackToInitTransition,"ax",%progbits
 2806              	 .align 2
 2807              	 .global BackToInitTransition
 2808              	 .thumb
 2809              	 .thumb_func
 2811              	BackToInitTransition:
 2812              	.LFB183:
1258:../SSC/Src/ecatslv.c **** 
1259:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1260:../SSC/Src/ecatslv.c **** /**
1261:../SSC/Src/ecatslv.c **** \brief    This function is called when a X to Init transition is completed
1262:../SSC/Src/ecatslv.c **** 
1263:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1264:../SSC/Src/ecatslv.c **** 
1265:../SSC/Src/ecatslv.c **** void BackToInitTransition(void)
1266:../SSC/Src/ecatslv.c **** {
 2813              	 .loc 4 1266 0
 2814              	 .cfi_startproc
 2815              	 
 2816              	 
 2817              	 
 2818 0000 80B4     	 push {r7}
 2819              	.LCFI85:
 2820              	 .cfi_def_cfa_offset 4
 2821              	 .cfi_offset 7,-4
 2822 0002 00AF     	 add r7,sp,#0
 2823              	.LCFI86:
 2824              	 .cfi_def_cfa_register 7
1267:../SSC/Src/ecatslv.c ****     /* Reset indication that the user has written a sync mode*/
1268:../SSC/Src/ecatslv.c ****     bSyncSetByUser = FALSE;
 2825              	 .loc 4 1268 0
 2826 0004 034B     	 ldr r3,.L186
 2827 0006 0022     	 movs r2,#0
 2828 0008 1A70     	 strb r2,[r3]
1269:../SSC/Src/ecatslv.c **** }
 2829              	 .loc 4 1269 0
 2830 000a BD46     	 mov sp,r7
 2831              	.LCFI87:
 2832              	 .cfi_def_cfa_register 13
 2833              	 
 2834 000c 5DF8047B 	 ldr r7,[sp],#4
 2835              	.LCFI88:
 2836              	 .cfi_restore 7
 2837              	 .cfi_def_cfa_offset 0
 2838 0010 7047     	 bx lr
 2839              	.L187:
 2840 0012 00BF     	 .align 2
 2841              	.L186:
 2842 0014 00000000 	 .word bSyncSetByUser
 2843              	 .cfi_endproc
 2844              	.LFE183:
 2846              	 .section .text.SetALStatus,"ax",%progbits
 2847              	 .align 2
 2848              	 .global SetALStatus
 2849              	 .thumb
 2850              	 .thumb_func
 2852              	SetALStatus:
 2853              	.LFB184:
1270:../SSC/Src/ecatslv.c **** 
1271:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1272:../SSC/Src/ecatslv.c **** /**
1273:../SSC/Src/ecatslv.c ****  \param alStatus        New AL Status (written to register 0x130)
1274:../SSC/Src/ecatslv.c ****  \param alStatusCode    New AL Status Code (written to register 0x134)
1275:../SSC/Src/ecatslv.c **** 
1276:../SSC/Src/ecatslv.c ****   \brief  The function changes the state of the EtherCAT ASIC to the requested.
1277:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1278:../SSC/Src/ecatslv.c **** void SetALStatus(UINT8 alStatus, UINT16 alStatusCode)
1279:../SSC/Src/ecatslv.c **** {
 2854              	 .loc 4 1279 0
 2855              	 .cfi_startproc
 2856              	 
 2857              	 
 2858              	 
 2859 0000 80B4     	 push {r7}
 2860              	.LCFI89:
 2861              	 .cfi_def_cfa_offset 4
 2862              	 .cfi_offset 7,-4
 2863 0002 85B0     	 sub sp,sp,#20
 2864              	.LCFI90:
 2865              	 .cfi_def_cfa_offset 24
 2866 0004 00AF     	 add r7,sp,#0
 2867              	.LCFI91:
 2868              	 .cfi_def_cfa_register 7
 2869 0006 0346     	 mov r3,r0
 2870 0008 0A46     	 mov r2,r1
 2871 000a FB71     	 strb r3,[r7,#7]
 2872 000c 1346     	 mov r3,r2
 2873 000e BB80     	 strh r3,[r7,#4]
1280:../SSC/Src/ecatslv.c ****     UINT16 Value = alStatusCode;
 2874              	 .loc 4 1280 0
 2875 0010 BB88     	 ldrh r3,[r7,#4]
 2876 0012 FB81     	 strh r3,[r7,#14]
1281:../SSC/Src/ecatslv.c **** 
1282:../SSC/Src/ecatslv.c ****     /*update global status variable if required*/
1283:../SSC/Src/ecatslv.c ****     if(nAlStatus != alStatus)
 2877              	 .loc 4 1283 0
 2878 0014 244B     	 ldr r3,.L197
 2879 0016 1B78     	 ldrb r3,[r3]
 2880 0018 FA79     	 ldrb r2,[r7,#7]
 2881 001a 9A42     	 cmp r2,r3
 2882 001c 02D0     	 beq .L189
1284:../SSC/Src/ecatslv.c ****     {
1285:../SSC/Src/ecatslv.c ****         nAlStatus = alStatus;
 2883              	 .loc 4 1285 0
 2884 001e 224A     	 ldr r2,.L197
 2885 0020 FB79     	 ldrb r3,[r7,#7]
 2886 0022 1370     	 strb r3,[r2]
 2887              	.L189:
1286:../SSC/Src/ecatslv.c ****     }
1287:../SSC/Src/ecatslv.c **** 
1288:../SSC/Src/ecatslv.c **** 
1289:../SSC/Src/ecatslv.c ****     if (alStatusCode != 0xFFFF)
 2888              	 .loc 4 1289 0
 2889 0024 BB88     	 ldrh r3,[r7,#4]
 2890 0026 4FF6FF72 	 movw r2,#65535
 2891 002a 9342     	 cmp r3,r2
 2892 002c 02D0     	 beq .L190
1290:../SSC/Src/ecatslv.c ****     {
1291:../SSC/Src/ecatslv.c ****         Value = SWAPWORD(Value);
1292:../SSC/Src/ecatslv.c **** 
1293:../SSC/Src/ecatslv.c ****         HW_EscWriteWord(Value,ESC_AL_STATUS_CODE_OFFSET);
 2893              	 .loc 4 1293 0
 2894 002e 1F4A     	 ldr r2,.L197+4
 2895 0030 FB89     	 ldrh r3,[r7,#14]
 2896 0032 1380     	 strh r3,[r2]
 2897              	.L190:
1294:../SSC/Src/ecatslv.c ****     }
1295:../SSC/Src/ecatslv.c **** 
1296:../SSC/Src/ecatslv.c ****     Value = nAlStatus;
 2898              	 .loc 4 1296 0
 2899 0034 1C4B     	 ldr r3,.L197
 2900 0036 1B78     	 ldrb r3,[r3]
 2901 0038 FB81     	 strh r3,[r7,#14]
1297:../SSC/Src/ecatslv.c ****     Value = SWAPWORD(Value);
1298:../SSC/Src/ecatslv.c ****     HW_EscWriteWord(Value,ESC_AL_STATUS_OFFSET);
 2902              	 .loc 4 1298 0
 2903 003a 1D4A     	 ldr r2,.L197+8
 2904 003c FB89     	 ldrh r3,[r7,#14]
 2905 003e 1380     	 strh r3,[r2]
1299:../SSC/Src/ecatslv.c **** 
1300:../SSC/Src/ecatslv.c ****     /*The Run LED state is set in Set LED Indication, only the Error LED blink code is set here*/
1301:../SSC/Src/ecatslv.c **** 
1302:../SSC/Src/ecatslv.c ****     /*set Error blink code*/
1303:../SSC/Src/ecatslv.c ****     if(alStatusCode == 0x00 || !(alStatus & STATE_CHANGE))
 2906              	 .loc 4 1303 0
 2907 0040 BB88     	 ldrh r3,[r7,#4]
 2908 0042 002B     	 cmp r3,#0
 2909 0044 04D0     	 beq .L191
 2910              	 .loc 4 1303 0 is_stmt 0 discriminator 1
 2911 0046 FB79     	 ldrb r3,[r7,#7]
 2912 0048 03F01003 	 and r3,r3,#16
 2913 004c 002B     	 cmp r3,#0
 2914 004e 03D1     	 bne .L192
 2915              	.L191:
1304:../SSC/Src/ecatslv.c ****     {
1305:../SSC/Src/ecatslv.c ****         u8EcatErrorLed = LED_OFF;
 2916              	 .loc 4 1305 0 is_stmt 1
 2917 0050 184B     	 ldr r3,.L197+12
 2918 0052 0022     	 movs r2,#0
 2919 0054 1A70     	 strb r2,[r3]
 2920 0056 16E0     	 b .L193
 2921              	.L192:
1306:../SSC/Src/ecatslv.c ****     }
1307:../SSC/Src/ecatslv.c ****     else if((alStatusCode == ALSTATUSCODE_NOSYNCERROR) ||
 2922              	 .loc 4 1307 0
 2923 0058 BB88     	 ldrh r3,[r7,#4]
 2924 005a 2D2B     	 cmp r3,#45
 2925 005c 05D0     	 beq .L194
 2926              	 .loc 4 1307 0 is_stmt 0 discriminator 1
 2927 005e BB88     	 ldrh r3,[r7,#4]
 2928 0060 1A2B     	 cmp r3,#26
 2929 0062 02D0     	 beq .L194
1308:../SSC/Src/ecatslv.c ****         (alStatusCode == ALSTATUSCODE_SYNCERROR) ||
 2930              	 .loc 4 1308 0 is_stmt 1
 2931 0064 BB88     	 ldrh r3,[r7,#4]
 2932 0066 322B     	 cmp r3,#50
 2933 0068 03D1     	 bne .L195
 2934              	.L194:
1309:../SSC/Src/ecatslv.c ****         (alStatusCode == ALSTATUSCODE_DCPLLSYNCERROR))
1310:../SSC/Src/ecatslv.c ****     {
1311:../SSC/Src/ecatslv.c ****         u8EcatErrorLed = LED_SINGLEFLASH;
 2935              	 .loc 4 1311 0
 2936 006a 124B     	 ldr r3,.L197+12
 2937 006c 0122     	 movs r2,#1
 2938 006e 1A70     	 strb r2,[r3]
 2939 0070 09E0     	 b .L193
 2940              	.L195:
1312:../SSC/Src/ecatslv.c ****     }
1313:../SSC/Src/ecatslv.c ****     else if((alStatusCode == ALSTATUSCODE_SMWATCHDOG))
 2941              	 .loc 4 1313 0
 2942 0072 BB88     	 ldrh r3,[r7,#4]
 2943 0074 1B2B     	 cmp r3,#27
 2944 0076 03D1     	 bne .L196
1314:../SSC/Src/ecatslv.c ****     {
1315:../SSC/Src/ecatslv.c ****         u8EcatErrorLed = LED_DOUBLEFLASH;
 2945              	 .loc 4 1315 0
 2946 0078 0E4B     	 ldr r3,.L197+12
 2947 007a 0222     	 movs r2,#2
 2948 007c 1A70     	 strb r2,[r3]
 2949 007e 02E0     	 b .L193
 2950              	.L196:
1316:../SSC/Src/ecatslv.c ****     }
1317:../SSC/Src/ecatslv.c ****     else
1318:../SSC/Src/ecatslv.c ****     {
1319:../SSC/Src/ecatslv.c ****         u8EcatErrorLed = LED_BLINKING;
 2951              	 .loc 4 1319 0
 2952 0080 0C4B     	 ldr r3,.L197+12
 2953 0082 0D22     	 movs r2,#13
 2954 0084 1A70     	 strb r2,[r3]
 2955              	.L193:
1320:../SSC/Src/ecatslv.c ****     }
1321:../SSC/Src/ecatslv.c ****     u8EcatErrorLed |= LED_OVERRIDE;
 2956              	 .loc 4 1321 0
 2957 0086 0B4B     	 ldr r3,.L197+12
 2958 0088 1B78     	 ldrb r3,[r3]
 2959 008a 43F01003 	 orr r3,r3,#16
 2960 008e DAB2     	 uxtb r2,r3
 2961 0090 084B     	 ldr r3,.L197+12
 2962 0092 1A70     	 strb r2,[r3]
1322:../SSC/Src/ecatslv.c **** 
1323:../SSC/Src/ecatslv.c ****     HW_EscWriteByte(u8EcatErrorLed,ESC_ERROR_LED_OVERRIDE);
 2963              	 .loc 4 1323 0
 2964 0094 084B     	 ldr r3,.L197+16
 2965 0096 074A     	 ldr r2,.L197+12
 2966 0098 1278     	 ldrb r2,[r2]
 2967 009a 1A70     	 strb r2,[r3]
1324:../SSC/Src/ecatslv.c **** }
 2968              	 .loc 4 1324 0
 2969 009c 1437     	 adds r7,r7,#20
 2970              	.LCFI92:
 2971              	 .cfi_def_cfa_offset 4
 2972 009e BD46     	 mov sp,r7
 2973              	.LCFI93:
 2974              	 .cfi_def_cfa_register 13
 2975              	 
 2976 00a0 5DF8047B 	 ldr r7,[sp],#4
 2977              	.LCFI94:
 2978              	 .cfi_restore 7
 2979              	 .cfi_def_cfa_offset 0
 2980 00a4 7047     	 bx lr
 2981              	.L198:
 2982 00a6 00BF     	 .align 2
 2983              	.L197:
 2984 00a8 00000000 	 .word nAlStatus
 2985 00ac 34010154 	 .word 1409351988
 2986 00b0 30010154 	 .word 1409351984
 2987 00b4 00000000 	 .word u8EcatErrorLed
 2988 00b8 39010154 	 .word 1409351993
 2989              	 .cfi_endproc
 2990              	.LFE184:
 2992              	 .section .text.AL_ControlInd,"ax",%progbits
 2993              	 .align 2
 2994              	 .global AL_ControlInd
 2995              	 .thumb
 2996              	 .thumb_func
 2998              	AL_ControlInd:
 2999              	.LFB185:
1325:../SSC/Src/ecatslv.c **** 
1326:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1327:../SSC/Src/ecatslv.c **** /**
1328:../SSC/Src/ecatslv.c ****  \param    alControl        requested new state
1329:../SSC/Src/ecatslv.c ****  \param alStatusCode    requested status code
1330:../SSC/Src/ecatslv.c **** 
1331:../SSC/Src/ecatslv.c ****  \brief    This function handles the EtherCAT State Machine. It is called
1332:../SSC/Src/ecatslv.c ****             * in case of an AL Control event (Bit 0 of AL-Event (Reg 0x220),
1333:../SSC/Src/ecatslv.c ****                when the Master has written the AL Control Register (from ECAT_Main),
1334:../SSC/Src/ecatslv.c ****               alControl contains the content of the AL Control (Reg 0x120)
1335:../SSC/Src/ecatslv.c ****             * in case of a SM-Change event (Bit 4 of AL-Event (Reg 0x220)),
1336:../SSC/Src/ecatslv.c ****               when an Activate SYNCM y register is written by the master (from ECAT_Main),
1337:../SSC/Src/ecatslv.c ****               alControl contains the actual state (Bit 0-3 of AL Status (Reg 0x130))
1338:../SSC/Src/ecatslv.c ****             * in case of a locally expired watchdog (from ECAT_Main),
1339:../SSC/Src/ecatslv.c ****               alControl contains the requested new state (SAFE_OP)
1340:../SSC/Src/ecatslv.c ****             * in case of an application specific event to change the EtherCAT state (from applicati
1341:../SSC/Src/ecatslv.c ****               alControl contains the requested new state (INIT, PRE_OP or SAFE_OP)
1342:../SSC/Src/ecatslv.c **** 
1343:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
1344:../SSC/Src/ecatslv.c **** 
1345:../SSC/Src/ecatslv.c **** void AL_ControlInd(UINT8 alControl, UINT16 alStatusCode)
1346:../SSC/Src/ecatslv.c **** {
 3000              	 .loc 4 1346 0
 3001              	 .cfi_startproc
 3002              	 
 3003              	 
 3004 0000 80B5     	 push {r7,lr}
 3005              	.LCFI95:
 3006              	 .cfi_def_cfa_offset 8
 3007              	 .cfi_offset 7,-8
 3008              	 .cfi_offset 14,-4
 3009 0002 84B0     	 sub sp,sp,#16
 3010              	.LCFI96:
 3011              	 .cfi_def_cfa_offset 24
 3012 0004 00AF     	 add r7,sp,#0
 3013              	.LCFI97:
 3014              	 .cfi_def_cfa_register 7
 3015 0006 0346     	 mov r3,r0
 3016 0008 0A46     	 mov r2,r1
 3017 000a FB71     	 strb r3,[r7,#7]
 3018 000c 1346     	 mov r3,r2
 3019 000e BB80     	 strh r3,[r7,#4]
1347:../SSC/Src/ecatslv.c ****     UINT16        result = 0;
 3020              	 .loc 4 1347 0
 3021 0010 0023     	 movs r3,#0
 3022 0012 FB81     	 strh r3,[r7,#14]
1348:../SSC/Src/ecatslv.c ****     UINT8            bErrAck = 0;
 3023              	 .loc 4 1348 0
 3024 0014 0023     	 movs r3,#0
 3025 0016 7B73     	 strb r3,[r7,#13]
1349:../SSC/Src/ecatslv.c ****     UINT8         stateTrans;
1350:../SSC/Src/ecatslv.c ****     /*deactivate ESM timeout counter*/
1351:../SSC/Src/ecatslv.c ****     EsmTimeoutCounter = -1;
 3026              	 .loc 4 1351 0
 3027 0018 D34B     	 ldr r3,.L266
 3028 001a 4FF6FF72 	 movw r2,#65535
 3029 001e 1A80     	 strh r2,[r3]
1352:../SSC/Src/ecatslv.c ****     bApplEsmPending = TRUE;
 3030              	 .loc 4 1352 0
 3031 0020 D24B     	 ldr r3,.L266+4
 3032 0022 0122     	 movs r2,#1
 3033 0024 1A70     	 strb r2,[r3]
1353:../SSC/Src/ecatslv.c **** 
1354:../SSC/Src/ecatslv.c ****     /* reset the Error Flag in case of acknowledge by the Master */
1355:../SSC/Src/ecatslv.c ****     if ( alControl & STATE_CHANGE )
 3034              	 .loc 4 1355 0
 3035 0026 FB79     	 ldrb r3,[r7,#7]
 3036 0028 03F01003 	 and r3,r3,#16
 3037 002c 002B     	 cmp r3,#0
 3038 002e 09D0     	 beq .L200
1356:../SSC/Src/ecatslv.c ****     {
1357:../SSC/Src/ecatslv.c ****         bErrAck = 1;
 3039              	 .loc 4 1357 0
 3040 0030 0123     	 movs r3,#1
 3041 0032 7B73     	 strb r3,[r7,#13]
1358:../SSC/Src/ecatslv.c ****         nAlStatus &= ~STATE_CHANGE;
 3042              	 .loc 4 1358 0
 3043 0034 CE4B     	 ldr r3,.L266+8
 3044 0036 1B78     	 ldrb r3,[r3]
 3045 0038 23F01003 	 bic r3,r3,#16
 3046 003c DAB2     	 uxtb r2,r3
 3047 003e CC4B     	 ldr r3,.L266+8
 3048 0040 1A70     	 strb r2,[r3]
 3049 0042 12E0     	 b .L201
 3050              	.L200:
1359:../SSC/Src/ecatslv.c ****         /*enable SM2 is moved to state transition block. First check SM Settings.*/
1360:../SSC/Src/ecatslv.c ****     }
1361:../SSC/Src/ecatslv.c ****     else if ( (nAlStatus & STATE_CHANGE)
 3051              	 .loc 4 1361 0
 3052 0044 CA4B     	 ldr r3,.L266+8
 3053 0046 1B78     	 ldrb r3,[r3]
 3054 0048 03F01003 	 and r3,r3,#16
 3055 004c 002B     	 cmp r3,#0
 3056 004e 05D0     	 beq .L202
1362:../SSC/Src/ecatslv.c ****     // HBu 17.04.08: the error has to be acknowledged before when sending the same (or a higher) st
1363:../SSC/Src/ecatslv.c ****     //               (the error was acknowledged with the same state before independent of the ackn
1364:../SSC/Src/ecatslv.c ****     /*Error Acknowledge with 0xX1 is allowed*/
1365:../SSC/Src/ecatslv.c ****            && (alControl & STATE_MASK) != STATE_INIT )
 3057              	 .loc 4 1365 0
 3058 0050 FB79     	 ldrb r3,[r7,#7]
 3059 0052 03F00F03 	 and r3,r3,#15
 3060 0056 012B     	 cmp r3,#1
 3061 0058 00D0     	 beq .L202
1366:../SSC/Src/ecatslv.c ****         /* the error flag (Bit 4) is set in the AL-Status and the ErrAck bit (Bit 4)
1367:../SSC/Src/ecatslv.c ****            is not set in the AL-Control, so the state cannot be set to a higher state
1368:../SSC/Src/ecatslv.c ****            and the new state request will be ignored */
1369:../SSC/Src/ecatslv.c ****         return;
 3062              	 .loc 4 1369 0
 3063 005a 25E3     	 b .L199
 3064              	.L202:
1370:../SSC/Src/ecatslv.c ****     else
1371:../SSC/Src/ecatslv.c ****     {
1372:../SSC/Src/ecatslv.c ****         nAlStatus &= STATE_MASK;
 3065              	 .loc 4 1372 0
 3066 005c C44B     	 ldr r3,.L266+8
 3067 005e 1B78     	 ldrb r3,[r3]
 3068 0060 03F00F03 	 and r3,r3,#15
 3069 0064 DAB2     	 uxtb r2,r3
 3070 0066 C24B     	 ldr r3,.L266+8
 3071 0068 1A70     	 strb r2,[r3]
 3072              	.L201:
1373:../SSC/Src/ecatslv.c ****     }
1374:../SSC/Src/ecatslv.c **** 
1375:../SSC/Src/ecatslv.c ****     /* generate a variable for the state transition
1376:../SSC/Src/ecatslv.c ****       (Bit 0-3: new state (AL Control), Bit 4-7: old state (AL Status) */
1377:../SSC/Src/ecatslv.c ****     alControl &= STATE_MASK;
 3073              	 .loc 4 1377 0
 3074 006a FB79     	 ldrb r3,[r7,#7]
 3075 006c 03F00F03 	 and r3,r3,#15
 3076 0070 FB71     	 strb r3,[r7,#7]
1378:../SSC/Src/ecatslv.c ****     stateTrans = nAlStatus;
 3077              	 .loc 4 1378 0
 3078 0072 BF4B     	 ldr r3,.L266+8
 3079 0074 1B78     	 ldrb r3,[r3]
 3080 0076 3B73     	 strb r3,[r7,#12]
1379:../SSC/Src/ecatslv.c ****     stateTrans <<= 4;
 3081              	 .loc 4 1379 0
 3082 0078 3B7B     	 ldrb r3,[r7,#12]
 3083 007a 1B01     	 lsls r3,r3,#4
 3084 007c 3B73     	 strb r3,[r7,#12]
1380:../SSC/Src/ecatslv.c ****     stateTrans += alControl;
 3085              	 .loc 4 1380 0
 3086 007e 3A7B     	 ldrb r2,[r7,#12]
 3087 0080 FB79     	 ldrb r3,[r7,#7]
 3088 0082 1344     	 add r3,r3,r2
 3089 0084 3B73     	 strb r3,[r7,#12]
1381:../SSC/Src/ecatslv.c **** 
1382:../SSC/Src/ecatslv.c **** 
1383:../SSC/Src/ecatslv.c ****     /* check the SYNCM settings depending on the state transition */
1384:../SSC/Src/ecatslv.c ****     switch ( stateTrans )
 3090              	 .loc 4 1384 0
 3091 0086 3B7B     	 ldrb r3,[r7,#12]
 3092 0088 442B     	 cmp r3,#68
 3093 008a 29D0     	 beq .L205
 3094 008c 442B     	 cmp r3,#68
 3095 008e 0BDC     	 bgt .L206
 3096 0090 222B     	 cmp r3,#34
 3097 0092 15D0     	 beq .L207
 3098 0094 222B     	 cmp r3,#34
 3099 0096 02DC     	 bgt .L208
 3100 0098 122B     	 cmp r3,#18
 3101 009a 11D0     	 beq .L207
 3102 009c 28E0     	 b .L204
 3103              	.L208:
 3104 009e 242B     	 cmp r3,#36
 3105 00a0 14D0     	 beq .L209
 3106 00a2 422B     	 cmp r3,#66
 3107 00a4 0CD0     	 beq .L207
 3108 00a6 23E0     	 b .L204
 3109              	.L206:
 3110 00a8 822B     	 cmp r3,#130
 3111 00aa 09D0     	 beq .L207
 3112 00ac 822B     	 cmp r3,#130
 3113 00ae 02DC     	 bgt .L210
 3114 00b0 482B     	 cmp r3,#72
 3115 00b2 15D0     	 beq .L205
 3116 00b4 1CE0     	 b .L204
 3117              	.L210:
 3118 00b6 842B     	 cmp r3,#132
 3119 00b8 12D0     	 beq .L205
 3120 00ba 882B     	 cmp r3,#136
 3121 00bc 10D0     	 beq .L205
 3122 00be 17E0     	 b .L204
 3123              	.L207:
1385:../SSC/Src/ecatslv.c ****     {
1386:../SSC/Src/ecatslv.c ****     case INIT_2_PREOP:
1387:../SSC/Src/ecatslv.c ****     case OP_2_PREOP:
1388:../SSC/Src/ecatslv.c ****     case SAFEOP_2_PREOP:
1389:../SSC/Src/ecatslv.c ****     case PREOP_2_PREOP:
1390:../SSC/Src/ecatslv.c ****         /* in PREOP only the SYNCM settings for SYNCM0 and SYNCM1 (mailbox)
1391:../SSC/Src/ecatslv.c ****            are checked, if result is unequal 0, the slave will stay in or
1392:../SSC/Src/ecatslv.c ****            switch to INIT and set the ErrorInd Bit (bit 4) of the AL-Status */
1393:../SSC/Src/ecatslv.c ****         result = CheckSmSettings(MAILBOX_READ+1);
 3124              	 .loc 4 1393 0
 3125 00c0 0220     	 movs r0,#2
 3126 00c2 FFF7FEFF 	 bl CheckSmSettings
 3127 00c6 0346     	 mov r3,r0
 3128 00c8 FB81     	 strh r3,[r7,#14]
1394:../SSC/Src/ecatslv.c ****         break;
 3129              	 .loc 4 1394 0
 3130 00ca 11E0     	 b .L204
 3131              	.L209:
1395:../SSC/Src/ecatslv.c ****     case PREOP_2_SAFEOP:
1396:../SSC/Src/ecatslv.c ****         {
1397:../SSC/Src/ecatslv.c ****         /* before checking the SYNCM settings for SYNCM2 and SYNCM3 (process data)
1398:../SSC/Src/ecatslv.c ****            the expected length of input data (nPdInputSize) and output data (nPdOutputSize)
1399:../SSC/Src/ecatslv.c ****             could be adapted (changed by PDO-Assign and/or PDO-Mapping)
1400:../SSC/Src/ecatslv.c ****             if result is unequal 0, the slave will stay in PREOP and set
1401:../SSC/Src/ecatslv.c ****             the ErrorInd Bit (bit 4) of the AL-Status */
1402:../SSC/Src/ecatslv.c ****         result = APPL_GenerateMapping(&nPdInputSize,&nPdOutputSize);
 3132              	 .loc 4 1402 0
 3133 00cc A948     	 ldr r0,.L266+12
 3134 00ce AA49     	 ldr r1,.L266+16
 3135 00d0 FFF7FEFF 	 bl APPL_GenerateMapping
 3136 00d4 0346     	 mov r3,r0
 3137 00d6 FB81     	 strh r3,[r7,#14]
1403:../SSC/Src/ecatslv.c **** 
1404:../SSC/Src/ecatslv.c ****         if (result != 0)
 3138              	 .loc 4 1404 0
 3139 00d8 FB89     	 ldrh r3,[r7,#14]
 3140 00da 002B     	 cmp r3,#0
 3141 00dc 00D0     	 beq .L205
1405:../SSC/Src/ecatslv.c ****             break;
 3142              	 .loc 4 1405 0
 3143 00de 07E0     	 b .L204
 3144              	.L205:
1406:../SSC/Src/ecatslv.c ****         }
1407:../SSC/Src/ecatslv.c ****     case SAFEOP_2_OP:
1408:../SSC/Src/ecatslv.c ****     case OP_2_SAFEOP:
1409:../SSC/Src/ecatslv.c ****     case SAFEOP_2_SAFEOP:
1410:../SSC/Src/ecatslv.c ****     case OP_2_OP:
1411:../SSC/Src/ecatslv.c ****         /* in SAFEOP or OP the SYNCM settings for all SYNCM are checked
1412:../SSC/Src/ecatslv.c ****            if result is unequal 0, the slave will stay in or
1413:../SSC/Src/ecatslv.c ****            switch to PREOP and set the ErrorInd Bit (bit 4) of the AL-Status */
1414:../SSC/Src/ecatslv.c ****         result = CheckSmSettings(nMaxSyncMan);
 3145              	 .loc 4 1414 0
 3146 00e0 A64B     	 ldr r3,.L266+20
 3147 00e2 1B78     	 ldrb r3,[r3]
 3148 00e4 1846     	 mov r0,r3
 3149 00e6 FFF7FEFF 	 bl CheckSmSettings
 3150 00ea 0346     	 mov r3,r0
 3151 00ec FB81     	 strh r3,[r7,#14]
1415:../SSC/Src/ecatslv.c ****         break;
 3152              	 .loc 4 1415 0
 3153 00ee 00BF     	 nop
 3154              	.L204:
1416:../SSC/Src/ecatslv.c ****     }
1417:../SSC/Src/ecatslv.c **** 
1418:../SSC/Src/ecatslv.c ****     if ( result == 0 )
 3155              	 .loc 4 1418 0
 3156 00f0 FB89     	 ldrh r3,[r7,#14]
 3157 00f2 002B     	 cmp r3,#0
 3158 00f4 40F01582 	 bne .L211
1419:../SSC/Src/ecatslv.c ****     {
1420:../SSC/Src/ecatslv.c ****         /* execute the corresponding local management service(s) depending on the state transition 
1421:../SSC/Src/ecatslv.c ****         nEcatStateTrans = 0;
 3159              	 .loc 4 1421 0
 3160 00f8 A14B     	 ldr r3,.L266+24
 3161 00fa 0022     	 movs r2,#0
 3162 00fc 1A80     	 strh r2,[r3]
1422:../SSC/Src/ecatslv.c ****         switch ( stateTrans )
 3163              	 .loc 4 1422 0
 3164 00fe 3B7B     	 ldrb r3,[r7,#12]
 3165 0100 113B     	 subs r3,r3,#17
 3166 0102 772B     	 cmp r3,#119
 3167 0104 00F20982 	 bhi .L212
 3168 0108 01A2     	 adr r2,.L214
 3169 010a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 3170 010e 00BF     	 .p2align 2
 3171              	.L214:
 3172 0110 C3040000 	 .word .L213+1
 3173 0114 01030000 	 .word .L215+1
 3174 0118 F1020000 	 .word .L216+1
 3175 011c 15050000 	 .word .L217+1
 3176 0120 1B050000 	 .word .L212+1
 3177 0124 1B050000 	 .word .L212+1
 3178 0128 1B050000 	 .word .L212+1
 3179 012c 15050000 	 .word .L217+1
 3180 0130 1B050000 	 .word .L212+1
 3181 0134 1B050000 	 .word .L212+1
 3182 0138 1B050000 	 .word .L212+1
 3183 013c 1B050000 	 .word .L212+1
 3184 0140 1B050000 	 .word .L212+1
 3185 0144 1B050000 	 .word .L212+1
 3186 0148 1B050000 	 .word .L212+1
 3187 014c 1B050000 	 .word .L212+1
 3188 0150 B1040000 	 .word .L218+1
 3189 0154 C7040000 	 .word .L219+1
 3190 0158 15050000 	 .word .L217+1
 3191 015c 8F030000 	 .word .L220+1
 3192 0160 1B050000 	 .word .L212+1
 3193 0164 1B050000 	 .word .L212+1
 3194 0168 1B050000 	 .word .L212+1
 3195 016c 15050000 	 .word .L217+1
 3196 0170 1B050000 	 .word .L212+1
 3197 0174 1B050000 	 .word .L212+1
 3198 0178 1B050000 	 .word .L212+1
 3199 017c 1B050000 	 .word .L212+1
 3200 0180 1B050000 	 .word .L212+1
 3201 0184 1B050000 	 .word .L212+1
 3202 0188 1B050000 	 .word .L212+1
 3203 018c 1B050000 	 .word .L212+1
 3204 0190 F7020000 	 .word .L221+1
 3205 0194 15050000 	 .word .L217+1
 3206 0198 1B050000 	 .word .L212+1
 3207 019c 15050000 	 .word .L217+1
 3208 01a0 1B050000 	 .word .L212+1
 3209 01a4 1B050000 	 .word .L212+1
 3210 01a8 1B050000 	 .word .L212+1
 3211 01ac 15050000 	 .word .L217+1
 3212 01b0 1B050000 	 .word .L212+1
 3213 01b4 1B050000 	 .word .L212+1
 3214 01b8 1B050000 	 .word .L212+1
 3215 01bc 1B050000 	 .word .L212+1
 3216 01c0 1B050000 	 .word .L212+1
 3217 01c4 1B050000 	 .word .L212+1
 3218 01c8 1B050000 	 .word .L212+1
 3219 01cc 1B050000 	 .word .L212+1
 3220 01d0 93040000 	 .word .L222+1
 3221 01d4 65040000 	 .word .L223+1
 3222 01d8 15050000 	 .word .L217+1
 3223 01dc C7040000 	 .word .L219+1
 3224 01e0 1B050000 	 .word .L212+1
 3225 01e4 1B050000 	 .word .L212+1
 3226 01e8 1B050000 	 .word .L212+1
 3227 01ec E9030000 	 .word .L224+1
 3228 01f0 1B050000 	 .word .L212+1
 3229 01f4 1B050000 	 .word .L212+1
 3230 01f8 1B050000 	 .word .L212+1
 3231 01fc 1B050000 	 .word .L212+1
 3232 0200 1B050000 	 .word .L212+1
 3233 0204 1B050000 	 .word .L212+1
 3234 0208 1B050000 	 .word .L212+1
 3235 020c 1B050000 	 .word .L212+1
 3236 0210 1B050000 	 .word .L212+1
 3237 0214 1B050000 	 .word .L212+1
 3238 0218 1B050000 	 .word .L212+1
 3239 021c 1B050000 	 .word .L212+1
 3240 0220 1B050000 	 .word .L212+1
 3241 0224 1B050000 	 .word .L212+1
 3242 0228 1B050000 	 .word .L212+1
 3243 022c 1B050000 	 .word .L212+1
 3244 0230 1B050000 	 .word .L212+1
 3245 0234 1B050000 	 .word .L212+1
 3246 0238 1B050000 	 .word .L212+1
 3247 023c 1B050000 	 .word .L212+1
 3248 0240 1B050000 	 .word .L212+1
 3249 0244 1B050000 	 .word .L212+1
 3250 0248 1B050000 	 .word .L212+1
 3251 024c 1B050000 	 .word .L212+1
 3252 0250 1B050000 	 .word .L212+1
 3253 0254 1B050000 	 .word .L212+1
 3254 0258 1B050000 	 .word .L212+1
 3255 025c 1B050000 	 .word .L212+1
 3256 0260 1B050000 	 .word .L212+1
 3257 0264 1B050000 	 .word .L212+1
 3258 0268 1B050000 	 .word .L212+1
 3259 026c 1B050000 	 .word .L212+1
 3260 0270 1B050000 	 .word .L212+1
 3261 0274 1B050000 	 .word .L212+1
 3262 0278 1B050000 	 .word .L212+1
 3263 027c 1B050000 	 .word .L212+1
 3264 0280 1B050000 	 .word .L212+1
 3265 0284 1B050000 	 .word .L212+1
 3266 0288 1B050000 	 .word .L212+1
 3267 028c 1B050000 	 .word .L212+1
 3268 0290 1B050000 	 .word .L212+1
 3269 0294 1B050000 	 .word .L212+1
 3270 0298 1B050000 	 .word .L212+1
 3271 029c 1B050000 	 .word .L212+1
 3272 02a0 1B050000 	 .word .L212+1
 3273 02a4 1B050000 	 .word .L212+1
 3274 02a8 1B050000 	 .word .L212+1
 3275 02ac 1B050000 	 .word .L212+1
 3276 02b0 1B050000 	 .word .L212+1
 3277 02b4 1B050000 	 .word .L212+1
 3278 02b8 1B050000 	 .word .L212+1
 3279 02bc 1B050000 	 .word .L212+1
 3280 02c0 1B050000 	 .word .L212+1
 3281 02c4 1B050000 	 .word .L212+1
 3282 02c8 1B050000 	 .word .L212+1
 3283 02cc 1B050000 	 .word .L212+1
 3284 02d0 75040000 	 .word .L225+1
 3285 02d4 47040000 	 .word .L226+1
 3286 02d8 15050000 	 .word .L217+1
 3287 02dc 37040000 	 .word .L227+1
 3288 02e0 1B050000 	 .word .L212+1
 3289 02e4 1B050000 	 .word .L212+1
 3290 02e8 1B050000 	 .word .L212+1
 3291 02ec C7040000 	 .word .L219+1
 3292              	 .p2align 1
 3293              	.L216:
1423:../SSC/Src/ecatslv.c ****         {
1424:../SSC/Src/ecatslv.c ****         case INIT_2_BOOT    :
1425:../SSC/Src/ecatslv.c ****             result = ALSTATUSCODE_BOOTNOTSUPP;
 3294              	 .loc 4 1425 0
 3295 02f0 1323     	 movs r3,#19
 3296 02f2 FB81     	 strh r3,[r7,#14]
1426:../SSC/Src/ecatslv.c ****             break;
 3297              	 .loc 4 1426 0
 3298 02f4 14E1     	 b .L228
 3299              	.L221:
1427:../SSC/Src/ecatslv.c **** 
1428:../SSC/Src/ecatslv.c ****         case BOOT_2_INIT    :
1429:../SSC/Src/ecatslv.c ****             result = ALSTATUSCODE_BOOTNOTSUPP;
 3300              	 .loc 4 1429 0
 3301 02f6 1323     	 movs r3,#19
 3302 02f8 FB81     	 strh r3,[r7,#14]
1430:../SSC/Src/ecatslv.c **** 
1431:../SSC/Src/ecatslv.c ****             BackToInitTransition();
 3303              	 .loc 4 1431 0
 3304 02fa FFF7FEFF 	 bl BackToInitTransition
1432:../SSC/Src/ecatslv.c **** 
1433:../SSC/Src/ecatslv.c ****             break;
 3305              	 .loc 4 1433 0
 3306 02fe 0FE1     	 b .L228
 3307              	.L215:
1434:../SSC/Src/ecatslv.c ****         case INIT_2_PREOP :
1435:../SSC/Src/ecatslv.c **** 
1436:../SSC/Src/ecatslv.c ****            UpdateEEPROMLoadedState();
 3308              	 .loc 4 1436 0
 3309 0300 FFF7FEFF 	 bl UpdateEEPROMLoadedState
1437:../SSC/Src/ecatslv.c **** 
1438:../SSC/Src/ecatslv.c ****             if (EepromLoaded == FALSE)
 3310              	 .loc 4 1438 0
 3311 0304 1F4B     	 ldr r3,.L266+28
 3312 0306 1B78     	 ldrb r3,[r3]
 3313 0308 83F00103 	 eor r3,r3,#1
 3314 030c DBB2     	 uxtb r3,r3
 3315 030e 002B     	 cmp r3,#0
 3316 0310 01D0     	 beq .L229
1439:../SSC/Src/ecatslv.c ****             {
1440:../SSC/Src/ecatslv.c ****                 //return an error if the EEPROM was not loaded correct  (device restart is required
1441:../SSC/Src/ecatslv.c ****                 result = ALSTATUSCODE_EE_ERROR;
 3317              	 .loc 4 1441 0
 3318 0312 5123     	 movs r3,#81
 3319 0314 FB81     	 strh r3,[r7,#14]
 3320              	.L229:
1442:../SSC/Src/ecatslv.c ****             }
1443:../SSC/Src/ecatslv.c ****             if (result == 0)
 3321              	 .loc 4 1443 0
 3322 0316 FB89     	 ldrh r3,[r7,#14]
 3323 0318 002B     	 cmp r3,#0
 3324 031a 37D1     	 bne .L230
1444:../SSC/Src/ecatslv.c ****             {
1445:../SSC/Src/ecatslv.c ****             /* MBX_StartMailboxHandler (in mailbox.c) checks if the areas of the mailbox
1446:../SSC/Src/ecatslv.c ****                sync managers SYNCM0 and SYNCM1 overlap each other
1447:../SSC/Src/ecatslv.c ****               if result is unequal 0, the slave will stay in INIT
1448:../SSC/Src/ecatslv.c ****               and sets the ErrorInd Bit (bit 4) of the AL-Status */
1449:../SSC/Src/ecatslv.c ****             result = MBX_StartMailboxHandler();
 3325              	 .loc 4 1449 0
 3326 031c FFF7FEFF 	 bl MBX_StartMailboxHandler
 3327 0320 0346     	 mov r3,r0
 3328 0322 FB81     	 strh r3,[r7,#14]
1450:../SSC/Src/ecatslv.c ****             if (result == 0)
 3329              	 .loc 4 1450 0
 3330 0324 FB89     	 ldrh r3,[r7,#14]
 3331 0326 002B     	 cmp r3,#0
 3332 0328 0CD1     	 bne .L231
1451:../SSC/Src/ecatslv.c ****             {
1452:../SSC/Src/ecatslv.c ****                 bApplEsmPending = FALSE;
 3333              	 .loc 4 1452 0
 3334 032a 104B     	 ldr r3,.L266+4
 3335 032c 0022     	 movs r2,#0
 3336 032e 1A70     	 strb r2,[r3]
1453:../SSC/Src/ecatslv.c ****                 /* additionally there could be an application specific check (in ecatappl.c)
1454:../SSC/Src/ecatslv.c ****                    if the state transition from INIT to PREOP should be done
1455:../SSC/Src/ecatslv.c ****                  if result is unequal 0, the slave will stay in INIT
1456:../SSC/Src/ecatslv.c ****                  and sets the ErrorInd Bit (bit 4) of the AL-Status */
1457:../SSC/Src/ecatslv.c ****                 result = APPL_StartMailboxHandler();
 3337              	 .loc 4 1457 0
 3338 0330 FFF7FEFF 	 bl APPL_StartMailboxHandler
 3339 0334 0346     	 mov r3,r0
 3340 0336 FB81     	 strh r3,[r7,#14]
1458:../SSC/Src/ecatslv.c ****                 if ( result == 0 )
 3341              	 .loc 4 1458 0
 3342 0338 FB89     	 ldrh r3,[r7,#14]
 3343 033a 002B     	 cmp r3,#0
 3344 033c 02D1     	 bne .L231
1459:../SSC/Src/ecatslv.c ****                 {
1460:../SSC/Src/ecatslv.c ****                     bMbxRunning = TRUE;
 3345              	 .loc 4 1460 0
 3346 033e 124B     	 ldr r3,.L266+32
 3347 0340 0122     	 movs r2,#1
 3348 0342 1A70     	 strb r2,[r3]
 3349              	.L231:
1461:../SSC/Src/ecatslv.c ****                 }
1462:../SSC/Src/ecatslv.c ****             }
1463:../SSC/Src/ecatslv.c **** 
1464:../SSC/Src/ecatslv.c ****             if(result != 0 && result != NOERROR_INWORK)
 3350              	 .loc 4 1464 0
 3351 0344 FB89     	 ldrh r3,[r7,#14]
 3352 0346 002B     	 cmp r3,#0
 3353 0348 20D0     	 beq .L230
 3354              	 .loc 4 1464 0 is_stmt 0 discriminator 1
 3355 034a FB89     	 ldrh r3,[r7,#14]
 3356 034c FF2B     	 cmp r3,#255
 3357 034e 1DD0     	 beq .L230
1465:../SSC/Src/ecatslv.c ****             {
1466:../SSC/Src/ecatslv.c ****                 /*Stop APPL Mbx handler if APPL Start Mbx handler was called before*/
1467:../SSC/Src/ecatslv.c ****                 if(!bApplEsmPending)
 3358              	 .loc 4 1467 0 is_stmt 1
 3359 0350 064B     	 ldr r3,.L266+4
 3360 0352 1B78     	 ldrb r3,[r3]
 3361 0354 83F00103 	 eor r3,r3,#1
 3362 0358 DBB2     	 uxtb r3,r3
 3363 035a 002B     	 cmp r3,#0
 3364 035c 01D0     	 beq .L232
1468:../SSC/Src/ecatslv.c ****                     APPL_StopMailboxHandler();
 3365              	 .loc 4 1468 0
 3366 035e FFF7FEFF 	 bl APPL_StopMailboxHandler
 3367              	.L232:
1469:../SSC/Src/ecatslv.c **** 
1470:../SSC/Src/ecatslv.c ****                  MBX_StopMailboxHandler();
 3368              	 .loc 4 1470 0
 3369 0362 FFF7FEFF 	 bl MBX_StopMailboxHandler
1471:../SSC/Src/ecatslv.c ****             }
1472:../SSC/Src/ecatslv.c **** 
1473:../SSC/Src/ecatslv.c ****             }
1474:../SSC/Src/ecatslv.c ****             break;
 3370              	 .loc 4 1474 0
 3371 0366 DBE0     	 b .L228
 3372              	.L267:
 3373              	 .align 2
 3374              	.L266:
 3375 0368 00000000 	 .word EsmTimeoutCounter
 3376 036c 00000000 	 .word bApplEsmPending
 3377 0370 00000000 	 .word nAlStatus
 3378 0374 00000000 	 .word nPdInputSize
 3379 0378 00000000 	 .word nPdOutputSize
 3380 037c 00000000 	 .word nMaxSyncMan
 3381 0380 00000000 	 .word nEcatStateTrans
 3382 0384 00000000 	 .word EepromLoaded
 3383 0388 00000000 	 .word bMbxRunning
 3384              	.L230:
 3385 038c C8E0     	 b .L228
 3386              	.L220:
1475:../SSC/Src/ecatslv.c **** 
1476:../SSC/Src/ecatslv.c ****         case PREOP_2_SAFEOP:
1477:../SSC/Src/ecatslv.c ****             /* start the input handler (function is defined above) */
1478:../SSC/Src/ecatslv.c ****             result = StartInputHandler();
 3387              	 .loc 4 1478 0
 3388 038e FFF7FEFF 	 bl StartInputHandler
 3389 0392 0346     	 mov r3,r0
 3390 0394 FB81     	 strh r3,[r7,#14]
1479:../SSC/Src/ecatslv.c ****             if ( result == 0 )
 3391              	 .loc 4 1479 0
 3392 0396 FB89     	 ldrh r3,[r7,#14]
 3393 0398 002B     	 cmp r3,#0
 3394 039a 12D1     	 bne .L233
1480:../SSC/Src/ecatslv.c ****             {
1481:../SSC/Src/ecatslv.c ****                 bApplEsmPending = FALSE;
 3395              	 .loc 4 1481 0
 3396 039c A74B     	 ldr r3,.L268
 3397 039e 0022     	 movs r2,#0
 3398 03a0 1A70     	 strb r2,[r3]
1482:../SSC/Src/ecatslv.c ****                 result = APPL_StartInputHandler(&u16ALEventMask);
 3399              	 .loc 4 1482 0
 3400 03a2 A748     	 ldr r0,.L268+4
 3401 03a4 FFF7FEFF 	 bl APPL_StartInputHandler
 3402 03a8 0346     	 mov r3,r0
 3403 03aa FB81     	 strh r3,[r7,#14]
1483:../SSC/Src/ecatslv.c **** 
1484:../SSC/Src/ecatslv.c ****                 if(result == 0)
 3404              	 .loc 4 1484 0
 3405 03ac FB89     	 ldrh r3,[r7,#14]
 3406 03ae 002B     	 cmp r3,#0
 3407 03b0 07D1     	 bne .L233
1485:../SSC/Src/ecatslv.c ****                 {
1486:../SSC/Src/ecatslv.c ****                     /* initialize the AL Event Mask register (0x204) */
1487:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1488:../SSC/Src/ecatslv.c ****                     SetALEventMask( u16ALEventMask );
 3408              	 .loc 4 1488 0
 3409 03b2 A34B     	 ldr r3,.L268+4
 3410 03b4 1B88     	 ldrh r3,[r3]
 3411 03b6 1846     	 mov r0,r3
 3412 03b8 FFF7FEFF 	 bl SetALEventMask
1489:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1490:../SSC/Src/ecatslv.c **** 
1491:../SSC/Src/ecatslv.c ****                     bEcatInputUpdateRunning = TRUE;
 3413              	 .loc 4 1491 0
 3414 03bc A14B     	 ldr r3,.L268+8
 3415 03be 0122     	 movs r2,#1
 3416 03c0 1A70     	 strb r2,[r3]
 3417              	.L233:
1492:../SSC/Src/ecatslv.c ****                 }
1493:../SSC/Src/ecatslv.c ****             }
1494:../SSC/Src/ecatslv.c **** 
1495:../SSC/Src/ecatslv.c ****             /*if one start input handler returned an error stop the input handler*/
1496:../SSC/Src/ecatslv.c ****             if(result != 0 && result != NOERROR_INWORK)
 3418              	 .loc 4 1496 0
 3419 03c2 FB89     	 ldrh r3,[r7,#14]
 3420 03c4 002B     	 cmp r3,#0
 3421 03c6 0ED0     	 beq .L234
 3422              	 .loc 4 1496 0 is_stmt 0 discriminator 1
 3423 03c8 FB89     	 ldrh r3,[r7,#14]
 3424 03ca FF2B     	 cmp r3,#255
 3425 03cc 0BD0     	 beq .L234
1497:../SSC/Src/ecatslv.c ****             {
1498:../SSC/Src/ecatslv.c ****                 if(!bApplEsmPending)
 3426              	 .loc 4 1498 0 is_stmt 1
 3427 03ce 9B4B     	 ldr r3,.L268
 3428 03d0 1B78     	 ldrb r3,[r3]
 3429 03d2 83F00103 	 eor r3,r3,#1
 3430 03d6 DBB2     	 uxtb r3,r3
 3431 03d8 002B     	 cmp r3,#0
 3432 03da 01D0     	 beq .L235
1499:../SSC/Src/ecatslv.c ****                 {
1500:../SSC/Src/ecatslv.c ****                     /*Call only the APPL stop handler if the APPL start handler was called before*/
1501:../SSC/Src/ecatslv.c ****                     /*The application can react to the state transition in the function APPL_StopIn
1502:../SSC/Src/ecatslv.c ****                     APPL_StopInputHandler();
 3433              	 .loc 4 1502 0
 3434 03dc FFF7FEFF 	 bl APPL_StopInputHandler
 3435              	.L235:
1503:../SSC/Src/ecatslv.c ****                 }
1504:../SSC/Src/ecatslv.c **** 
1505:../SSC/Src/ecatslv.c ****                 StopInputHandler();
 3436              	 .loc 4 1505 0
 3437 03e0 FFF7FEFF 	 bl StopInputHandler
1506:../SSC/Src/ecatslv.c ****             }
1507:../SSC/Src/ecatslv.c ****             break;
 3438              	 .loc 4 1507 0
 3439 03e4 9CE0     	 b .L228
 3440              	.L234:
 3441              	 .loc 4 1507 0 is_stmt 0 discriminator 2
 3442 03e6 9BE0     	 b .L228
 3443              	.L224:
1508:../SSC/Src/ecatslv.c **** 
1509:../SSC/Src/ecatslv.c ****         case SAFEOP_2_OP:
1510:../SSC/Src/ecatslv.c ****             /* start the output handler (function is defined above) */
1511:../SSC/Src/ecatslv.c ****             result = StartOutputHandler();
 3444              	 .loc 4 1511 0 is_stmt 1
 3445 03e8 FFF7FEFF 	 bl StartOutputHandler
 3446 03ec 0346     	 mov r3,r0
 3447 03ee FB81     	 strh r3,[r7,#14]
1512:../SSC/Src/ecatslv.c ****             if(result == 0)
 3448              	 .loc 4 1512 0
 3449 03f0 FB89     	 ldrh r3,[r7,#14]
 3450 03f2 002B     	 cmp r3,#0
 3451 03f4 0CD1     	 bne .L236
1513:../SSC/Src/ecatslv.c ****             {
1514:../SSC/Src/ecatslv.c ****                 bApplEsmPending = FALSE;
 3452              	 .loc 4 1514 0
 3453 03f6 914B     	 ldr r3,.L268
 3454 03f8 0022     	 movs r2,#0
 3455 03fa 1A70     	 strb r2,[r3]
1515:../SSC/Src/ecatslv.c ****                 result = APPL_StartOutputHandler();
 3456              	 .loc 4 1515 0
 3457 03fc FFF7FEFF 	 bl APPL_StartOutputHandler
 3458 0400 0346     	 mov r3,r0
 3459 0402 FB81     	 strh r3,[r7,#14]
1516:../SSC/Src/ecatslv.c **** 
1517:../SSC/Src/ecatslv.c ****                 if(result == 0)
 3460              	 .loc 4 1517 0
 3461 0404 FB89     	 ldrh r3,[r7,#14]
 3462 0406 002B     	 cmp r3,#0
 3463 0408 02D1     	 bne .L236
1518:../SSC/Src/ecatslv.c ****                 {
1519:../SSC/Src/ecatslv.c ****                     /*Device is in OPERATINAL*/
1520:../SSC/Src/ecatslv.c ****                     bEcatOutputUpdateRunning = TRUE;
 3464              	 .loc 4 1520 0
 3465 040a 8F4B     	 ldr r3,.L268+12
 3466 040c 0122     	 movs r2,#1
 3467 040e 1A70     	 strb r2,[r3]
 3468              	.L236:
1521:../SSC/Src/ecatslv.c ****                 }
1522:../SSC/Src/ecatslv.c **** 
1523:../SSC/Src/ecatslv.c ****             }
1524:../SSC/Src/ecatslv.c **** 
1525:../SSC/Src/ecatslv.c ****             if ( result != 0 && result != NOERROR_INWORK)
 3469              	 .loc 4 1525 0
 3470 0410 FB89     	 ldrh r3,[r7,#14]
 3471 0412 002B     	 cmp r3,#0
 3472 0414 0ED0     	 beq .L237
 3473              	 .loc 4 1525 0 is_stmt 0 discriminator 1
 3474 0416 FB89     	 ldrh r3,[r7,#14]
 3475 0418 FF2B     	 cmp r3,#255
 3476 041a 0BD0     	 beq .L237
1526:../SSC/Src/ecatslv.c ****             {
1527:../SSC/Src/ecatslv.c ****                 if(!bApplEsmPending)
 3477              	 .loc 4 1527 0 is_stmt 1
 3478 041c 874B     	 ldr r3,.L268
 3479 041e 1B78     	 ldrb r3,[r3]
 3480 0420 83F00103 	 eor r3,r3,#1
 3481 0424 DBB2     	 uxtb r3,r3
 3482 0426 002B     	 cmp r3,#0
 3483 0428 01D0     	 beq .L238
1528:../SSC/Src/ecatslv.c ****                     APPL_StopOutputHandler();
 3484              	 .loc 4 1528 0
 3485 042a FFF7FEFF 	 bl APPL_StopOutputHandler
 3486              	.L238:
1529:../SSC/Src/ecatslv.c **** 
1530:../SSC/Src/ecatslv.c ****                 StopOutputHandler();
 3487              	 .loc 4 1530 0
 3488 042e FFF7FEFF 	 bl StopOutputHandler
1531:../SSC/Src/ecatslv.c ****             }
1532:../SSC/Src/ecatslv.c **** 
1533:../SSC/Src/ecatslv.c ****             break;
 3489              	 .loc 4 1533 0
 3490 0432 75E0     	 b .L228
 3491              	.L237:
 3492              	 .loc 4 1533 0 is_stmt 0 discriminator 3
 3493 0434 74E0     	 b .L228
 3494              	.L227:
1534:../SSC/Src/ecatslv.c **** 
1535:../SSC/Src/ecatslv.c ****         case OP_2_SAFEOP:
1536:../SSC/Src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1537:../SSC/Src/ecatslv.c ****             APPL_StopOutputHandler();
 3495              	 .loc 4 1537 0 is_stmt 1
 3496 0436 FFF7FEFF 	 bl APPL_StopOutputHandler
1538:../SSC/Src/ecatslv.c **** 
1539:../SSC/Src/ecatslv.c ****             StopOutputHandler();
 3497              	 .loc 4 1539 0
 3498 043a FFF7FEFF 	 bl StopOutputHandler
1540:../SSC/Src/ecatslv.c **** 
1541:../SSC/Src/ecatslv.c ****             bApplEsmPending = FALSE;
 3499              	 .loc 4 1541 0
 3500 043e 7F4B     	 ldr r3,.L268
 3501 0440 0022     	 movs r2,#0
 3502 0442 1A70     	 strb r2,[r3]
1542:../SSC/Src/ecatslv.c **** 
1543:../SSC/Src/ecatslv.c ****             break;
 3503              	 .loc 4 1543 0
 3504 0444 6CE0     	 b .L228
 3505              	.L226:
1544:../SSC/Src/ecatslv.c **** 
1545:../SSC/Src/ecatslv.c ****         case OP_2_PREOP:
1546:../SSC/Src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1547:../SSC/Src/ecatslv.c ****             result = APPL_StopOutputHandler();
 3506              	 .loc 4 1547 0
 3507 0446 FFF7FEFF 	 bl APPL_StopOutputHandler
 3508 044a 0346     	 mov r3,r0
 3509 044c FB81     	 strh r3,[r7,#14]
1548:../SSC/Src/ecatslv.c **** 
1549:../SSC/Src/ecatslv.c ****             StopOutputHandler();
 3510              	 .loc 4 1549 0
 3511 044e FFF7FEFF 	 bl StopOutputHandler
1550:../SSC/Src/ecatslv.c **** 
1551:../SSC/Src/ecatslv.c ****             bApplEsmPending = FALSE;
 3512              	 .loc 4 1551 0
 3513 0452 7A4B     	 ldr r3,.L268
 3514 0454 0022     	 movs r2,#0
 3515 0456 1A70     	 strb r2,[r3]
1552:../SSC/Src/ecatslv.c **** 
1553:../SSC/Src/ecatslv.c ****             if (result != 0)
 3516              	 .loc 4 1553 0
 3517 0458 FB89     	 ldrh r3,[r7,#14]
 3518 045a 002B     	 cmp r3,#0
 3519 045c 00D0     	 beq .L239
1554:../SSC/Src/ecatslv.c ****                 break;
 3520              	 .loc 4 1554 0 discriminator 4
 3521 045e 5FE0     	 b .L228
 3522              	.L239:
1555:../SSC/Src/ecatslv.c **** 
1556:../SSC/Src/ecatslv.c ****             stateTrans = SAFEOP_2_PREOP;
 3523              	 .loc 4 1556 0
 3524 0460 4223     	 movs r3,#66
 3525 0462 3B73     	 strb r3,[r7,#12]
 3526              	.L223:
1557:../SSC/Src/ecatslv.c **** 
1558:../SSC/Src/ecatslv.c ****         case SAFEOP_2_PREOP:
1559:../SSC/Src/ecatslv.c ****             /* stop the input handler (function is defined above) */
1560:../SSC/Src/ecatslv.c ****             APPL_StopInputHandler();
 3527              	 .loc 4 1560 0
 3528 0464 FFF7FEFF 	 bl APPL_StopInputHandler
1561:../SSC/Src/ecatslv.c ****            
1562:../SSC/Src/ecatslv.c ****             StopInputHandler();
 3529              	 .loc 4 1562 0
 3530 0468 FFF7FEFF 	 bl StopInputHandler
1563:../SSC/Src/ecatslv.c **** 
1564:../SSC/Src/ecatslv.c ****             bApplEsmPending = FALSE;
 3531              	 .loc 4 1564 0
 3532 046c 734B     	 ldr r3,.L268
 3533 046e 0022     	 movs r2,#0
 3534 0470 1A70     	 strb r2,[r3]
1565:../SSC/Src/ecatslv.c **** 
1566:../SSC/Src/ecatslv.c ****             break;
 3535              	 .loc 4 1566 0
 3536 0472 55E0     	 b .L228
 3537              	.L225:
1567:../SSC/Src/ecatslv.c **** 
1568:../SSC/Src/ecatslv.c ****         case OP_2_INIT:
1569:../SSC/Src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1570:../SSC/Src/ecatslv.c ****             result = APPL_StopOutputHandler();
 3538              	 .loc 4 1570 0
 3539 0474 FFF7FEFF 	 bl APPL_StopOutputHandler
 3540 0478 0346     	 mov r3,r0
 3541 047a FB81     	 strh r3,[r7,#14]
1571:../SSC/Src/ecatslv.c **** 
1572:../SSC/Src/ecatslv.c ****             StopOutputHandler();
 3542              	 .loc 4 1572 0
 3543 047c FFF7FEFF 	 bl StopOutputHandler
1573:../SSC/Src/ecatslv.c **** 
1574:../SSC/Src/ecatslv.c ****             bApplEsmPending = FALSE;
 3544              	 .loc 4 1574 0
 3545 0480 6E4B     	 ldr r3,.L268
 3546 0482 0022     	 movs r2,#0
 3547 0484 1A70     	 strb r2,[r3]
1575:../SSC/Src/ecatslv.c **** 
1576:../SSC/Src/ecatslv.c ****             if (result != 0)
 3548              	 .loc 4 1576 0
 3549 0486 FB89     	 ldrh r3,[r7,#14]
 3550 0488 002B     	 cmp r3,#0
 3551 048a 00D0     	 beq .L240
1577:../SSC/Src/ecatslv.c ****                 break;
 3552              	 .loc 4 1577 0 discriminator 5
 3553 048c 48E0     	 b .L228
 3554              	.L240:
1578:../SSC/Src/ecatslv.c ****             
1579:../SSC/Src/ecatslv.c ****             stateTrans = SAFEOP_2_INIT;
 3555              	 .loc 4 1579 0
 3556 048e 4123     	 movs r3,#65
 3557 0490 3B73     	 strb r3,[r7,#12]
 3558              	.L222:
1580:../SSC/Src/ecatslv.c **** 
1581:../SSC/Src/ecatslv.c ****         case SAFEOP_2_INIT:
1582:../SSC/Src/ecatslv.c ****             /* stop the input handler (function is defined above) */
1583:../SSC/Src/ecatslv.c ****             result = APPL_StopInputHandler();
 3559              	 .loc 4 1583 0
 3560 0492 FFF7FEFF 	 bl APPL_StopInputHandler
 3561 0496 0346     	 mov r3,r0
 3562 0498 FB81     	 strh r3,[r7,#14]
1584:../SSC/Src/ecatslv.c ****             
1585:../SSC/Src/ecatslv.c ****             StopInputHandler();
 3563              	 .loc 4 1585 0
 3564 049a FFF7FEFF 	 bl StopInputHandler
1586:../SSC/Src/ecatslv.c **** 
1587:../SSC/Src/ecatslv.c ****             bApplEsmPending = FALSE;
 3565              	 .loc 4 1587 0
 3566 049e 674B     	 ldr r3,.L268
 3567 04a0 0022     	 movs r2,#0
 3568 04a2 1A70     	 strb r2,[r3]
1588:../SSC/Src/ecatslv.c **** 
1589:../SSC/Src/ecatslv.c ****             if (result != 0)
 3569              	 .loc 4 1589 0
 3570 04a4 FB89     	 ldrh r3,[r7,#14]
 3571 04a6 002B     	 cmp r3,#0
 3572 04a8 00D0     	 beq .L241
1590:../SSC/Src/ecatslv.c ****                 break;
 3573              	 .loc 4 1590 0 discriminator 6
 3574 04aa 39E0     	 b .L228
 3575              	.L241:
1591:../SSC/Src/ecatslv.c ****             stateTrans = PREOP_2_INIT;
 3576              	 .loc 4 1591 0
 3577 04ac 2123     	 movs r3,#33
 3578 04ae 3B73     	 strb r3,[r7,#12]
 3579              	.L218:
1592:../SSC/Src/ecatslv.c **** 
1593:../SSC/Src/ecatslv.c ****         case PREOP_2_INIT:
1594:../SSC/Src/ecatslv.c ****             MBX_StopMailboxHandler();
 3580              	 .loc 4 1594 0
 3581 04b0 FFF7FEFF 	 bl MBX_StopMailboxHandler
1595:../SSC/Src/ecatslv.c ****             result = APPL_StopMailboxHandler();
 3582              	 .loc 4 1595 0
 3583 04b4 FFF7FEFF 	 bl APPL_StopMailboxHandler
 3584 04b8 0346     	 mov r3,r0
 3585 04ba FB81     	 strh r3,[r7,#14]
1596:../SSC/Src/ecatslv.c **** 
1597:../SSC/Src/ecatslv.c ****             BackToInitTransition();
 3586              	 .loc 4 1597 0
 3587 04bc FFF7FEFF 	 bl BackToInitTransition
1598:../SSC/Src/ecatslv.c ****             break;
 3588              	 .loc 4 1598 0
 3589 04c0 2EE0     	 b .L228
 3590              	.L213:
1599:../SSC/Src/ecatslv.c **** 
1600:../SSC/Src/ecatslv.c ****         case INIT_2_INIT:
1601:../SSC/Src/ecatslv.c ****             BackToInitTransition();
 3591              	 .loc 4 1601 0
 3592 04c2 FFF7FEFF 	 bl BackToInitTransition
 3593              	.L219:
1602:../SSC/Src/ecatslv.c ****         case PREOP_2_PREOP:
1603:../SSC/Src/ecatslv.c ****         case SAFEOP_2_SAFEOP:
1604:../SSC/Src/ecatslv.c ****         case OP_2_OP:
1605:../SSC/Src/ecatslv.c ****             if(bErrAck)
 3594              	 .loc 4 1605 0
 3595 04c6 7B7B     	 ldrb r3,[r7,#13]
 3596 04c8 002B     	 cmp r3,#0
 3597 04ca 04D0     	 beq .L242
1606:../SSC/Src/ecatslv.c ****                 APPL_AckErrorInd(stateTrans);
 3598              	 .loc 4 1606 0
 3599 04cc 3B7B     	 ldrb r3,[r7,#12]
 3600 04ce 9BB2     	 uxth r3,r3
 3601 04d0 1846     	 mov r0,r3
 3602 04d2 FFF7FEFF 	 bl APPL_AckErrorInd
 3603              	.L242:
1607:../SSC/Src/ecatslv.c **** 
1608:../SSC/Src/ecatslv.c ****             if(!bLocalErrorFlag)
 3604              	 .loc 4 1608 0
 3605 04d6 5D4B     	 ldr r3,.L268+16
 3606 04d8 1B78     	 ldrb r3,[r3]
 3607 04da 83F00103 	 eor r3,r3,#1
 3608 04de DBB2     	 uxtb r3,r3
 3609 04e0 002B     	 cmp r3,#0
 3610 04e2 14D0     	 beq .L243
1609:../SSC/Src/ecatslv.c ****             {
1610:../SSC/Src/ecatslv.c ****                 /*no local error flag is currently active, enable SM*/
1611:../SSC/Src/ecatslv.c ****                 if ( nAlStatus & (STATE_SAFEOP | STATE_OP))
 3611              	 .loc 4 1611 0
 3612 04e4 5A4B     	 ldr r3,.L268+20
 3613 04e6 1B78     	 ldrb r3,[r3]
 3614 04e8 03F00C03 	 and r3,r3,#12
 3615 04ec 002B     	 cmp r3,#0
 3616 04ee 0ED0     	 beq .L243
1612:../SSC/Src/ecatslv.c ****                 {
1613:../SSC/Src/ecatslv.c ****                     if(nPdOutputSize > 0)
 3617              	 .loc 4 1613 0
 3618 04f0 584B     	 ldr r3,.L268+24
 3619 04f2 1B88     	 ldrh r3,[r3]
 3620 04f4 002B     	 cmp r3,#0
 3621 04f6 03D0     	 beq .L244
1614:../SSC/Src/ecatslv.c ****                     {
1615:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1616:../SSC/Src/ecatslv.c ****                         EnableSyncManChannel(PROCESS_DATA_OUT);
 3622              	 .loc 4 1616 0
 3623 04f8 0220     	 movs r0,#2
 3624 04fa FFF7FEFF 	 bl EnableSyncManChannel
 3625 04fe 06E0     	 b .L243
 3626              	.L244:
1617:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1618:../SSC/Src/ecatslv.c ****                     }
1619:../SSC/Src/ecatslv.c ****                     else 
1620:../SSC/Src/ecatslv.c ****                     if(nPdInputSize > 0)
 3627              	 .loc 4 1620 0
 3628 0500 554B     	 ldr r3,.L268+28
 3629 0502 1B88     	 ldrh r3,[r3]
 3630 0504 002B     	 cmp r3,#0
 3631 0506 02D0     	 beq .L243
1621:../SSC/Src/ecatslv.c ****                     {
1622:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1623:../SSC/Src/ecatslv.c ****                         EnableSyncManChannel(PROCESS_DATA_IN);
 3632              	 .loc 4 1623 0
 3633 0508 0320     	 movs r0,#3
 3634 050a FFF7FEFF 	 bl EnableSyncManChannel
 3635              	.L243:
1624:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1625:../SSC/Src/ecatslv.c ****                     }
1626:../SSC/Src/ecatslv.c ****                 }
1627:../SSC/Src/ecatslv.c ****             }
1628:../SSC/Src/ecatslv.c ****             result = NOERROR_NOSTATECHANGE;
 3636              	 .loc 4 1628 0
 3637 050e FE23     	 movs r3,#254
 3638 0510 FB81     	 strh r3,[r7,#14]
1629:../SSC/Src/ecatslv.c ****             break;
 3639              	 .loc 4 1629 0
 3640 0512 05E0     	 b .L228
 3641              	.L217:
1630:../SSC/Src/ecatslv.c **** 
1631:../SSC/Src/ecatslv.c ****         case INIT_2_SAFEOP:
1632:../SSC/Src/ecatslv.c ****         case INIT_2_OP:
1633:../SSC/Src/ecatslv.c ****         case PREOP_2_OP:
1634:../SSC/Src/ecatslv.c ****         case PREOP_2_BOOT:
1635:../SSC/Src/ecatslv.c ****         case SAFEOP_2_BOOT:
1636:../SSC/Src/ecatslv.c ****         case OP_2_BOOT:
1637:../SSC/Src/ecatslv.c ****         case BOOT_2_PREOP:
1638:../SSC/Src/ecatslv.c ****         case BOOT_2_SAFEOP:
1639:../SSC/Src/ecatslv.c ****         case BOOT_2_OP:
1640:../SSC/Src/ecatslv.c ****             result = ALSTATUSCODE_INVALIDALCONTROL;
 3642              	 .loc 4 1640 0
 3643 0514 1123     	 movs r3,#17
 3644 0516 FB81     	 strh r3,[r7,#14]
1641:../SSC/Src/ecatslv.c ****             break;
 3645              	 .loc 4 1641 0
 3646 0518 02E0     	 b .L228
 3647              	.L212:
1642:../SSC/Src/ecatslv.c **** 
1643:../SSC/Src/ecatslv.c ****         default:
1644:../SSC/Src/ecatslv.c ****             result = ALSTATUSCODE_UNKNOWNALCONTROL;
 3648              	 .loc 4 1644 0
 3649 051a 1223     	 movs r3,#18
 3650 051c FB81     	 strh r3,[r7,#14]
1645:../SSC/Src/ecatslv.c ****             break;
 3651              	 .loc 4 1645 0
 3652 051e 00BF     	 nop
 3653              	.L228:
 3654 0520 1EE0     	 b .L245
 3655              	.L211:
1646:../SSC/Src/ecatslv.c ****         }
1647:../SSC/Src/ecatslv.c ****     }
1648:../SSC/Src/ecatslv.c ****     else
1649:../SSC/Src/ecatslv.c ****     {
1650:../SSC/Src/ecatslv.c ****         /* the checking of the sync manager settings was not successful
1651:../SSC/Src/ecatslv.c ****             switch back the state to PREOP or INIT */
1652:../SSC/Src/ecatslv.c ****         switch (nAlStatus)
 3656              	 .loc 4 1652 0
 3657 0522 4B4B     	 ldr r3,.L268+20
 3658 0524 1B78     	 ldrb r3,[r3]
 3659 0526 042B     	 cmp r3,#4
 3660 0528 08D0     	 beq .L246
 3661 052a 082B     	 cmp r3,#8
 3662 052c 02D0     	 beq .L247
 3663 052e 022B     	 cmp r3,#2
 3664 0530 08D0     	 beq .L248
 3665 0532 15E0     	 b .L245
 3666              	.L247:
1653:../SSC/Src/ecatslv.c ****         {
1654:../SSC/Src/ecatslv.c ****         case STATE_OP:
1655:../SSC/Src/ecatslv.c ****             /* stop the output handler (function is defined above) */
1656:../SSC/Src/ecatslv.c ****             APPL_StopOutputHandler();
 3667              	 .loc 4 1656 0
 3668 0534 FFF7FEFF 	 bl APPL_StopOutputHandler
1657:../SSC/Src/ecatslv.c ****             StopOutputHandler();
 3669              	 .loc 4 1657 0
 3670 0538 FFF7FEFF 	 bl StopOutputHandler
 3671              	.L246:
1658:../SSC/Src/ecatslv.c ****         case STATE_SAFEOP:
1659:../SSC/Src/ecatslv.c ****             /* stop the input handler (function is defined above) */
1660:../SSC/Src/ecatslv.c ****             APPL_StopInputHandler();
 3672              	 .loc 4 1660 0
 3673 053c FFF7FEFF 	 bl APPL_StopInputHandler
1661:../SSC/Src/ecatslv.c **** 
1662:../SSC/Src/ecatslv.c ****             StopInputHandler();
 3674              	 .loc 4 1662 0
 3675 0540 FFF7FEFF 	 bl StopInputHandler
 3676              	.L248:
1663:../SSC/Src/ecatslv.c **** 
1664:../SSC/Src/ecatslv.c ****         case STATE_PREOP:
1665:../SSC/Src/ecatslv.c **** 
1666:../SSC/Src/ecatslv.c ****             if ( result == ALSTATUSCODE_INVALIDMBXCFGINPREOP )
 3677              	 .loc 4 1666 0
 3678 0544 FB89     	 ldrh r3,[r7,#14]
 3679 0546 162B     	 cmp r3,#22
 3680 0548 07D1     	 bne .L249
1667:../SSC/Src/ecatslv.c ****             {
1668:../SSC/Src/ecatslv.c ****                 /* the mailbox sync manager settings were wrong, switch back to INIT */
1669:../SSC/Src/ecatslv.c ****                 MBX_StopMailboxHandler();
 3681              	 .loc 4 1669 0
 3682 054a FFF7FEFF 	 bl MBX_StopMailboxHandler
1670:../SSC/Src/ecatslv.c ****                 APPL_StopMailboxHandler();
 3683              	 .loc 4 1670 0
 3684 054e FFF7FEFF 	 bl APPL_StopMailboxHandler
1671:../SSC/Src/ecatslv.c **** 
1672:../SSC/Src/ecatslv.c ****                 nAlStatus = STATE_INIT;
 3685              	 .loc 4 1672 0
 3686 0552 3F4B     	 ldr r3,.L268+20
 3687 0554 0122     	 movs r2,#1
 3688 0556 1A70     	 strb r2,[r3]
 3689 0558 02E0     	 b .L245
 3690              	.L249:
1673:../SSC/Src/ecatslv.c ****             }
1674:../SSC/Src/ecatslv.c ****             else
1675:../SSC/Src/ecatslv.c ****                 nAlStatus = STATE_PREOP;
 3691              	 .loc 4 1675 0
 3692 055a 3D4B     	 ldr r3,.L268+20
 3693 055c 0222     	 movs r2,#2
 3694 055e 1A70     	 strb r2,[r3]
 3695              	.L245:
1676:../SSC/Src/ecatslv.c ****         }
1677:../SSC/Src/ecatslv.c ****     }
1678:../SSC/Src/ecatslv.c **** 
1679:../SSC/Src/ecatslv.c ****     if ( result == NOERROR_INWORK )
 3696              	 .loc 4 1679 0
 3697 0560 FB89     	 ldrh r3,[r7,#14]
 3698 0562 FF2B     	 cmp r3,#255
 3699 0564 2AD1     	 bne .L250
1680:../SSC/Src/ecatslv.c ****     {
1681:../SSC/Src/ecatslv.c ****         /* state transition is still in work
1682:../SSC/Src/ecatslv.c ****             ECAT_StateChange must be called from the application */
1683:../SSC/Src/ecatslv.c ****         bEcatWaitForAlControlRes = TRUE;
 3700              	 .loc 4 1683 0
 3701 0566 3D4B     	 ldr r3,.L268+32
 3702 0568 0122     	 movs r2,#1
 3703 056a 1A70     	 strb r2,[r3]
1684:../SSC/Src/ecatslv.c ****         /* state transition has to be stored */
1685:../SSC/Src/ecatslv.c ****         nEcatStateTrans = stateTrans;
 3704              	 .loc 4 1685 0
 3705 056c 3B7B     	 ldrb r3,[r7,#12]
 3706 056e 9AB2     	 uxth r2,r3
 3707 0570 3B4B     	 ldr r3,.L268+36
 3708 0572 1A80     	 strh r2,[r3]
1686:../SSC/Src/ecatslv.c **** 
1687:../SSC/Src/ecatslv.c ****         /*Init ESM timeout counter (will be decremented with the local 1ms timer)*/
1688:../SSC/Src/ecatslv.c ****         switch(nEcatStateTrans)
 3709              	 .loc 4 1688 0
 3710 0574 3A4B     	 ldr r3,.L268+36
 3711 0576 1B88     	 ldrh r3,[r3]
 3712 0578 242B     	 cmp r3,#36
 3713 057a 0DD0     	 beq .L252
 3714 057c 242B     	 cmp r3,#36
 3715 057e 03DC     	 bgt .L253
 3716 0580 123B     	 subs r3,r3,#18
 3717 0582 012B     	 cmp r3,#1
 3718 0584 0DD8     	 bhi .L251
 3719 0586 02E0     	 b .L265
 3720              	.L253:
 3721 0588 482B     	 cmp r3,#72
 3722 058a 05D0     	 beq .L252
 3723 058c 09E0     	 b .L251
 3724              	.L265:
1689:../SSC/Src/ecatslv.c ****         {
1690:../SSC/Src/ecatslv.c ****             case INIT_2_PREOP:
1691:../SSC/Src/ecatslv.c ****             case INIT_2_BOOT:
1692:../SSC/Src/ecatslv.c ****                 EsmTimeoutCounter = PREOPTIMEOUT;
 3725              	 .loc 4 1692 0
 3726 058e 354B     	 ldr r3,.L268+40
 3727 0590 4FF4FA62 	 mov r2,#2000
 3728 0594 1A80     	 strh r2,[r3]
1693:../SSC/Src/ecatslv.c ****             break;
 3729              	 .loc 4 1693 0
 3730 0596 08E0     	 b .L255
 3731              	.L252:
1694:../SSC/Src/ecatslv.c ****             case PREOP_2_SAFEOP:
1695:../SSC/Src/ecatslv.c ****             case SAFEOP_2_OP:
1696:../SSC/Src/ecatslv.c ****                 EsmTimeoutCounter = SAFEOP2OPTIMEOUT;
 3732              	 .loc 4 1696 0
 3733 0598 324B     	 ldr r3,.L268+40
 3734 059a 42F22832 	 movw r2,#9000
 3735 059e 1A80     	 strh r2,[r3]
1697:../SSC/Src/ecatslv.c ****                 break;
 3736              	 .loc 4 1697 0
 3737 05a0 03E0     	 b .L255
 3738              	.L251:
1698:../SSC/Src/ecatslv.c ****            default:
1699:../SSC/Src/ecatslv.c ****                 EsmTimeoutCounter = 200; //Set default timeout value to 200ms
 3739              	 .loc 4 1699 0
 3740 05a2 304B     	 ldr r3,.L268+40
 3741 05a4 C822     	 movs r2,#200
 3742 05a6 1A80     	 strh r2,[r3]
1700:../SSC/Src/ecatslv.c ****                 break;
 3743              	 .loc 4 1700 0
 3744 05a8 00BF     	 nop
 3745              	.L255:
1701:../SSC/Src/ecatslv.c ****         }
1702:../SSC/Src/ecatslv.c ****         EsmTimeoutCounter -= 50; //subtract 50ms from the timeout to react before the master runs i
 3746              	 .loc 4 1702 0
 3747 05aa 2E4B     	 ldr r3,.L268+40
 3748 05ac 1B88     	 ldrh r3,[r3]
 3749 05ae 9BB2     	 uxth r3,r3
 3750 05b0 323B     	 subs r3,r3,#50
 3751 05b2 9BB2     	 uxth r3,r3
 3752 05b4 9AB2     	 uxth r2,r3
 3753 05b6 2B4B     	 ldr r3,.L268+40
 3754 05b8 1A80     	 strh r2,[r3]
 3755 05ba 75E0     	 b .L199
 3756              	.L250:
1703:../SSC/Src/ecatslv.c **** 
1704:../SSC/Src/ecatslv.c ****     }
1705:../SSC/Src/ecatslv.c ****     else if ( alControl != (nAlStatus & STATE_MASK) )
 3757              	 .loc 4 1705 0
 3758 05bc FA79     	 ldrb r2,[r7,#7]
 3759 05be 244B     	 ldr r3,.L268+20
 3760 05c0 1B78     	 ldrb r3,[r3]
 3761 05c2 03F00F03 	 and r3,r3,#15
 3762 05c6 9A42     	 cmp r2,r3
 3763 05c8 65D0     	 beq .L256
1706:../SSC/Src/ecatslv.c ****     {
1707:../SSC/Src/ecatslv.c ****         /* The slave state has changed */
1708:../SSC/Src/ecatslv.c **** 
1709:../SSC/Src/ecatslv.c ****         if ( (result != 0 || alStatusCode != 0) && ((alControl | nAlStatus) & STATE_OP) )
 3764              	 .loc 4 1709 0
 3765 05ca FB89     	 ldrh r3,[r7,#14]
 3766 05cc 002B     	 cmp r3,#0
 3767 05ce 02D1     	 bne .L257
 3768              	 .loc 4 1709 0 is_stmt 0 discriminator 2
 3769 05d0 BB88     	 ldrh r3,[r7,#4]
 3770 05d2 002B     	 cmp r3,#0
 3771 05d4 1FD0     	 beq .L258
 3772              	.L257:
 3773              	 .loc 4 1709 0 discriminator 3
 3774 05d6 1E4B     	 ldr r3,.L268+20
 3775 05d8 1A78     	 ldrb r2,[r3]
 3776 05da FB79     	 ldrb r3,[r7,#7]
 3777 05dc 1343     	 orrs r3,r3,r2
 3778 05de DBB2     	 uxtb r3,r3
 3779 05e0 03F00803 	 and r3,r3,#8
 3780 05e4 002B     	 cmp r3,#0
 3781 05e6 16D0     	 beq .L258
1710:../SSC/Src/ecatslv.c ****         {
1711:../SSC/Src/ecatslv.c ****             /* the local application requested to leave the state OP so we have to disable the SM2
1712:../SSC/Src/ecatslv.c ****                and make the state change from OP to SAFEOP by calling StopOutputHandler */
1713:../SSC/Src/ecatslv.c **** 
1714:../SSC/Src/ecatslv.c ****             //only execute StopOutputHandler() if Output update is still running
1715:../SSC/Src/ecatslv.c ****             if(bEcatOutputUpdateRunning)
 3782              	 .loc 4 1715 0 is_stmt 1
 3783 05e8 174B     	 ldr r3,.L268+12
 3784 05ea 1B78     	 ldrb r3,[r3]
 3785 05ec 002B     	 cmp r3,#0
 3786 05ee 03D0     	 beq .L259
1716:../SSC/Src/ecatslv.c ****             {
1717:../SSC/Src/ecatslv.c ****                 APPL_StopOutputHandler();
 3787              	 .loc 4 1717 0
 3788 05f0 FFF7FEFF 	 bl APPL_StopOutputHandler
1718:../SSC/Src/ecatslv.c **** 
1719:../SSC/Src/ecatslv.c ****                 StopOutputHandler();
 3789              	 .loc 4 1719 0
 3790 05f4 FFF7FEFF 	 bl StopOutputHandler
 3791              	.L259:
1720:../SSC/Src/ecatslv.c ****             }
1721:../SSC/Src/ecatslv.c **** 
1722:../SSC/Src/ecatslv.c ****             if(nPdOutputSize > 0)
 3792              	 .loc 4 1722 0
 3793 05f8 164B     	 ldr r3,.L268+24
 3794 05fa 1B88     	 ldrh r3,[r3]
 3795 05fc 002B     	 cmp r3,#0
 3796 05fe 03D0     	 beq .L260
1723:../SSC/Src/ecatslv.c ****             {
1724:../SSC/Src/ecatslv.c ****                 /* disable the Sync Manager Channel 2 (outputs) */
1725:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1726:../SSC/Src/ecatslv.c ****                 DisableSyncManChannel(PROCESS_DATA_OUT);
 3797              	 .loc 4 1726 0
 3798 0600 0220     	 movs r0,#2
 3799 0602 FFF7FEFF 	 bl DisableSyncManChannel
 3800 0606 06E0     	 b .L258
 3801              	.L260:
1727:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1728:../SSC/Src/ecatslv.c ****             }
1729:../SSC/Src/ecatslv.c ****             else
1730:../SSC/Src/ecatslv.c ****                 if(nPdInputSize > 0)
 3802              	 .loc 4 1730 0
 3803 0608 134B     	 ldr r3,.L268+28
 3804 060a 1B88     	 ldrh r3,[r3]
 3805 060c 002B     	 cmp r3,#0
 3806 060e 02D0     	 beq .L258
1731:../SSC/Src/ecatslv.c ****             {
1732:../SSC/Src/ecatslv.c ****                 /*disable Sync Manager 3 (inputs) if no outputs available*/
1733:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
1734:../SSC/Src/ecatslv.c ****                 DisableSyncManChannel(PROCESS_DATA_IN);
 3807              	 .loc 4 1734 0
 3808 0610 0320     	 movs r0,#3
 3809 0612 FFF7FEFF 	 bl DisableSyncManChannel
 3810              	.L258:
1735:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
1736:../SSC/Src/ecatslv.c ****             }
1737:../SSC/Src/ecatslv.c **** 
1738:../SSC/Src/ecatslv.c ****         }
1739:../SSC/Src/ecatslv.c ****         if ( result != 0 )
 3811              	 .loc 4 1739 0
 3812 0616 FB89     	 ldrh r3,[r7,#14]
 3813 0618 002B     	 cmp r3,#0
 3814 061a 25D0     	 beq .L261
1740:../SSC/Src/ecatslv.c ****         {
1741:../SSC/Src/ecatslv.c ****             if ( nAlStatus == STATE_OP )
 3815              	 .loc 4 1741 0
 3816 061c 0C4B     	 ldr r3,.L268+20
 3817 061e 1B78     	 ldrb r3,[r3]
 3818 0620 082B     	 cmp r3,#8
 3819 0622 02D1     	 bne .L262
1742:../SSC/Src/ecatslv.c ****                 nAlStatus = STATE_SAFEOP;
 3820              	 .loc 4 1742 0
 3821 0624 0A4B     	 ldr r3,.L268+20
 3822 0626 0422     	 movs r2,#4
 3823 0628 1A70     	 strb r2,[r3]
 3824              	.L262:
1743:../SSC/Src/ecatslv.c ****             /* save the failed status to be able to decide, if the AL Status Code shall be
1744:../SSC/Src/ecatslv.c ****                reset in case of a coming successful state transition */
1745:../SSC/Src/ecatslv.c ****             nAlStatus |= STATE_CHANGE;
 3825              	 .loc 4 1745 0
 3826 062a 094B     	 ldr r3,.L268+20
 3827 062c 1B78     	 ldrb r3,[r3]
 3828 062e 43F01003 	 orr r3,r3,#16
 3829 0632 DAB2     	 uxtb r2,r3
 3830 0634 064B     	 ldr r3,.L268+20
 3831 0636 1A70     	 strb r2,[r3]
 3832 0638 22E0     	 b .L263
 3833              	.L269:
 3834 063a 00BF     	 .align 2
 3835              	.L268:
 3836 063c 00000000 	 .word bApplEsmPending
 3837 0640 00000000 	 .word u16ALEventMask
 3838 0644 00000000 	 .word bEcatInputUpdateRunning
 3839 0648 00000000 	 .word bEcatOutputUpdateRunning
 3840 064c 00000000 	 .word bLocalErrorFlag
 3841 0650 00000000 	 .word nAlStatus
 3842 0654 00000000 	 .word nPdOutputSize
 3843 0658 00000000 	 .word nPdInputSize
 3844 065c 00000000 	 .word bEcatWaitForAlControlRes
 3845 0660 00000000 	 .word nEcatStateTrans
 3846 0664 00000000 	 .word EsmTimeoutCounter
 3847              	.L261:
1746:../SSC/Src/ecatslv.c ****         }
1747:../SSC/Src/ecatslv.c ****         else
1748:../SSC/Src/ecatslv.c ****         {
1749:../SSC/Src/ecatslv.c ****             /* state transition was successful */
1750:../SSC/Src/ecatslv.c ****             if ( alStatusCode != 0 )
 3848              	 .loc 4 1750 0
 3849 0668 BB88     	 ldrh r3,[r7,#4]
 3850 066a 002B     	 cmp r3,#0
 3851 066c 05D0     	 beq .L264
1751:../SSC/Src/ecatslv.c ****             {
1752:../SSC/Src/ecatslv.c ****                 /* state change request from the user */
1753:../SSC/Src/ecatslv.c ****                 result = alStatusCode;
 3852              	 .loc 4 1753 0
 3853 066e BB88     	 ldrh r3,[r7,#4]
 3854 0670 FB81     	 strh r3,[r7,#14]
1754:../SSC/Src/ecatslv.c ****                 alControl |= STATE_CHANGE;
 3855              	 .loc 4 1754 0
 3856 0672 FB79     	 ldrb r3,[r7,#7]
 3857 0674 43F01003 	 orr r3,r3,#16
 3858 0678 FB71     	 strb r3,[r7,#7]
 3859              	.L264:
1755:../SSC/Src/ecatslv.c ****             }
1756:../SSC/Src/ecatslv.c ****             /* acknowledge the new state */
1757:../SSC/Src/ecatslv.c ****             nAlStatus = alControl;
 3860              	 .loc 4 1757 0
 3861 067a 0D4A     	 ldr r2,.L270
 3862 067c FB79     	 ldrb r3,[r7,#7]
 3863 067e 1370     	 strb r3,[r2]
 3864              	.L263:
1758:../SSC/Src/ecatslv.c ****         }
1759:../SSC/Src/ecatslv.c **** 
1760:../SSC/Src/ecatslv.c ****         bEcatWaitForAlControlRes = FALSE;
 3865              	 .loc 4 1760 0
 3866 0680 0C4B     	 ldr r3,.L270+4
 3867 0682 0022     	 movs r2,#0
 3868 0684 1A70     	 strb r2,[r3]
1761:../SSC/Src/ecatslv.c **** 
1762:../SSC/Src/ecatslv.c ****         /* write the AL Status register */
1763:../SSC/Src/ecatslv.c ****         SetALStatus(nAlStatus, result);
 3869              	 .loc 4 1763 0
 3870 0686 0A4B     	 ldr r3,.L270
 3871 0688 1A78     	 ldrb r2,[r3]
 3872 068a FB89     	 ldrh r3,[r7,#14]
 3873 068c 1046     	 mov r0,r2
 3874 068e 1946     	 mov r1,r3
 3875 0690 FFF7FEFF 	 bl SetALStatus
 3876 0694 08E0     	 b .L199
 3877              	.L256:
1764:../SSC/Src/ecatslv.c ****     }
1765:../SSC/Src/ecatslv.c ****     else
1766:../SSC/Src/ecatslv.c ****     {
1767:../SSC/Src/ecatslv.c ****         /* Error acknowledgement without a state transition */
1768:../SSC/Src/ecatslv.c **** 
1769:../SSC/Src/ecatslv.c ****          bEcatWaitForAlControlRes = FALSE;
 3878              	 .loc 4 1769 0
 3879 0696 074B     	 ldr r3,.L270+4
 3880 0698 0022     	 movs r2,#0
 3881 069a 1A70     	 strb r2,[r3]
1770:../SSC/Src/ecatslv.c **** 
1771:../SSC/Src/ecatslv.c ****         /* AL-Status has to be updated and AL-Status-Code has to be reset
1772:../SSC/Src/ecatslv.c ****            if the the error bit was acknowledged */
1773:../SSC/Src/ecatslv.c ****         SetALStatus(nAlStatus, 0);
 3882              	 .loc 4 1773 0
 3883 069c 044B     	 ldr r3,.L270
 3884 069e 1B78     	 ldrb r3,[r3]
 3885 06a0 1846     	 mov r0,r3
 3886 06a2 0021     	 movs r1,#0
 3887 06a4 FFF7FEFF 	 bl SetALStatus
 3888              	.L199:
1774:../SSC/Src/ecatslv.c ****     }
1775:../SSC/Src/ecatslv.c **** 
1776:../SSC/Src/ecatslv.c **** }
 3889              	 .loc 4 1776 0
 3890 06a8 1037     	 adds r7,r7,#16
 3891              	.LCFI98:
 3892              	 .cfi_def_cfa_offset 8
 3893 06aa BD46     	 mov sp,r7
 3894              	.LCFI99:
 3895              	 .cfi_def_cfa_register 13
 3896              	 
 3897 06ac 80BD     	 pop {r7,pc}
 3898              	.L271:
 3899 06ae 00BF     	 .align 2
 3900              	.L270:
 3901 06b0 00000000 	 .word nAlStatus
 3902 06b4 00000000 	 .word bEcatWaitForAlControlRes
 3903              	 .cfi_endproc
 3904              	.LFE185:
 3906              	 .section .text.AL_ControlRes,"ax",%progbits
 3907              	 .align 2
 3908              	 .global AL_ControlRes
 3909              	 .thumb
 3910              	 .thumb_func
 3912              	AL_ControlRes:
 3913              	.LFB186:
1777:../SSC/Src/ecatslv.c **** 
1778:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
1779:../SSC/Src/ecatslv.c **** /**
1780:../SSC/Src/ecatslv.c **** 
1781:../SSC/Src/ecatslv.c ****  \brief    This function is called cyclic if a state transition is pending (bEcatWaitForAlControlRe
1782:../SSC/Src/ecatslv.c ****  \brief    If the ESM timeout is expired the state transition will be rejected. Otherwise the appli
1783:../SSC/Src/ecatslv.c ****  \brief    If the pending state transition is triggered by the application the transition need to b
1784:../SSC/Src/ecatslv.c ****   *////////////////////////////////////////////////////////////////////////////////////////
1785:../SSC/Src/ecatslv.c **** void AL_ControlRes(void)
1786:../SSC/Src/ecatslv.c **** {
 3914              	 .loc 4 1786 0
 3915              	 .cfi_startproc
 3916              	 
 3917              	 
 3918 0000 80B5     	 push {r7,lr}
 3919              	.LCFI100:
 3920              	 .cfi_def_cfa_offset 8
 3921              	 .cfi_offset 7,-8
 3922              	 .cfi_offset 14,-4
 3923 0002 82B0     	 sub sp,sp,#8
 3924              	.LCFI101:
 3925              	 .cfi_def_cfa_offset 16
 3926 0004 00AF     	 add r7,sp,#0
 3927              	.LCFI102:
 3928              	 .cfi_def_cfa_register 7
1787:../SSC/Src/ecatslv.c ****     if(bEcatWaitForAlControlRes)
 3929              	 .loc 4 1787 0
 3930 0006 9E4B     	 ldr r3,.L314
 3931 0008 1B78     	 ldrb r3,[r3]
 3932 000a 002B     	 cmp r3,#0
 3933 000c 00F03581 	 beq .L272
 3934              	.LBB7:
1788:../SSC/Src/ecatslv.c ****     {
1789:../SSC/Src/ecatslv.c ****         UINT16 result = 0;
 3935              	 .loc 4 1789 0
 3936 0010 0023     	 movs r3,#0
 3937 0012 7B80     	 strh r3,[r7,#2]
1790:../SSC/Src/ecatslv.c ****         UINT8 Status = 0;
 3938              	 .loc 4 1790 0
 3939 0014 0023     	 movs r3,#0
 3940 0016 FB71     	 strb r3,[r7,#7]
1791:../SSC/Src/ecatslv.c ****         UINT16 StatusCode = 0;
 3941              	 .loc 4 1791 0
 3942 0018 0023     	 movs r3,#0
 3943 001a BB80     	 strh r3,[r7,#4]
1792:../SSC/Src/ecatslv.c **** 
1793:../SSC/Src/ecatslv.c ****         if(EsmTimeoutCounter == 0)
 3944              	 .loc 4 1793 0
 3945 001c 994B     	 ldr r3,.L314+4
 3946 001e 1B88     	 ldrh r3,[r3]
 3947 0020 002B     	 cmp r3,#0
 3948 0022 7CD1     	 bne .L274
1794:../SSC/Src/ecatslv.c ****         {
1795:../SSC/Src/ecatslv.c ****             Status =  (UINT8)(nEcatStateTrans >> 4);
 3949              	 .loc 4 1795 0
 3950 0024 984B     	 ldr r3,.L314+8
 3951 0026 1B88     	 ldrh r3,[r3]
 3952 0028 1B09     	 lsrs r3,r3,#4
 3953 002a 9BB2     	 uxth r3,r3
 3954 002c FB71     	 strb r3,[r7,#7]
1796:../SSC/Src/ecatslv.c **** 
1797:../SSC/Src/ecatslv.c ****             /* ESM timeout expired*/
1798:../SSC/Src/ecatslv.c ****             switch(nEcatStateTrans)
 3955              	 .loc 4 1798 0
 3956 002e 964B     	 ldr r3,.L314+8
 3957 0030 1B88     	 ldrh r3,[r3]
 3958 0032 242B     	 cmp r3,#36
 3959 0034 1FD0     	 beq .L276
 3960 0036 242B     	 cmp r3,#36
 3961 0038 04DC     	 bgt .L277
 3962 003a 123B     	 subs r3,r3,#18
 3963 003c 012B     	 cmp r3,#1
 3964 003e 00F20981 	 bhi .L294
 3965 0042 02E0     	 b .L310
 3966              	.L277:
 3967 0044 482B     	 cmp r3,#72
 3968 0046 2CD0     	 beq .L279
 3969 0048 04E1     	 b .L294
 3970              	.L310:
1799:../SSC/Src/ecatslv.c ****             {
1800:../SSC/Src/ecatslv.c ****                 case INIT_2_PREOP:
1801:../SSC/Src/ecatslv.c ****                 case INIT_2_BOOT:
1802:../SSC/Src/ecatslv.c **** 
1803:../SSC/Src/ecatslv.c ****                     if(!bApplEsmPending)
 3971              	 .loc 4 1803 0
 3972 004a 904B     	 ldr r3,.L314+12
 3973 004c 1B78     	 ldrb r3,[r3]
 3974 004e 83F00103 	 eor r3,r3,#1
 3975 0052 DBB2     	 uxtb r3,r3
 3976 0054 002B     	 cmp r3,#0
 3977 0056 01D0     	 beq .L280
1804:../SSC/Src/ecatslv.c ****                         APPL_StopMailboxHandler();
 3978              	 .loc 4 1804 0
 3979 0058 FFF7FEFF 	 bl APPL_StopMailboxHandler
 3980              	.L280:
1805:../SSC/Src/ecatslv.c **** 
1806:../SSC/Src/ecatslv.c ****                     MBX_StopMailboxHandler();
 3981              	 .loc 4 1806 0
 3982 005c FFF7FEFF 	 bl MBX_StopMailboxHandler
1807:../SSC/Src/ecatslv.c ****                     if(bLocalErrorFlag)
 3983              	 .loc 4 1807 0
 3984 0060 8B4B     	 ldr r3,.L314+16
 3985 0062 1B78     	 ldrb r3,[r3]
 3986 0064 002B     	 cmp r3,#0
 3987 0066 03D0     	 beq .L281
1808:../SSC/Src/ecatslv.c ****                     {
1809:../SSC/Src/ecatslv.c ****                         /*Set application specified error*/
1810:../SSC/Src/ecatslv.c ****                         StatusCode = u16LocalErrorCode;
 3988              	 .loc 4 1810 0
 3989 0068 8A4B     	 ldr r3,.L314+20
 3990 006a 1B88     	 ldrh r3,[r3]
 3991 006c BB80     	 strh r3,[r7,#4]
1811:../SSC/Src/ecatslv.c ****                     }
1812:../SSC/Src/ecatslv.c ****                     else
1813:../SSC/Src/ecatslv.c ****                     {
1814:../SSC/Src/ecatslv.c ****                         /*Set unspecified error*/
1815:../SSC/Src/ecatslv.c ****                         StatusCode = ALSTATUSCODE_UNSPECIFIEDERROR;
1816:../SSC/Src/ecatslv.c ****                     }
1817:../SSC/Src/ecatslv.c ****                 break;
 3992              	 .loc 4 1817 0
 3993 006e 55E0     	 b .L275
 3994              	.L281:
1815:../SSC/Src/ecatslv.c ****                     }
 3995              	 .loc 4 1815 0
 3996 0070 0123     	 movs r3,#1
 3997 0072 BB80     	 strh r3,[r7,#4]
 3998              	 .loc 4 1817 0
 3999 0074 52E0     	 b .L275
 4000              	.L276:
1818:../SSC/Src/ecatslv.c ****                 case PREOP_2_SAFEOP:
1819:../SSC/Src/ecatslv.c ****                     if(!bApplEsmPending)
 4001              	 .loc 4 1819 0
 4002 0076 854B     	 ldr r3,.L314+12
 4003 0078 1B78     	 ldrb r3,[r3]
 4004 007a 83F00103 	 eor r3,r3,#1
 4005 007e DBB2     	 uxtb r3,r3
 4006 0080 002B     	 cmp r3,#0
 4007 0082 01D0     	 beq .L283
1820:../SSC/Src/ecatslv.c ****                         APPL_StopInputHandler();
 4008              	 .loc 4 1820 0
 4009 0084 FFF7FEFF 	 bl APPL_StopInputHandler
 4010              	.L283:
1821:../SSC/Src/ecatslv.c **** 
1822:../SSC/Src/ecatslv.c ****                     StopInputHandler();
 4011              	 .loc 4 1822 0
 4012 0088 FFF7FEFF 	 bl StopInputHandler
1823:../SSC/Src/ecatslv.c ****                     
1824:../SSC/Src/ecatslv.c ****                     if(bLocalErrorFlag)
 4013              	 .loc 4 1824 0
 4014 008c 804B     	 ldr r3,.L314+16
 4015 008e 1B78     	 ldrb r3,[r3]
 4016 0090 002B     	 cmp r3,#0
 4017 0092 03D0     	 beq .L284
1825:../SSC/Src/ecatslv.c ****                     {
1826:../SSC/Src/ecatslv.c ****                         /*Set application specified error*/
1827:../SSC/Src/ecatslv.c ****                         StatusCode = u16LocalErrorCode;
 4018              	 .loc 4 1827 0
 4019 0094 7F4B     	 ldr r3,.L314+20
 4020 0096 1B88     	 ldrh r3,[r3]
 4021 0098 BB80     	 strh r3,[r7,#4]
1828:../SSC/Src/ecatslv.c ****                     }
1829:../SSC/Src/ecatslv.c ****                     else
1830:../SSC/Src/ecatslv.c ****                     {
1831:../SSC/Src/ecatslv.c ****                         /*Set unspecified error*/
1832:../SSC/Src/ecatslv.c ****                         StatusCode = ALSTATUSCODE_UNSPECIFIEDERROR;
1833:../SSC/Src/ecatslv.c ****                     }
1834:../SSC/Src/ecatslv.c ****                 break;
 4022              	 .loc 4 1834 0
 4023 009a 3FE0     	 b .L275
 4024              	.L284:
1832:../SSC/Src/ecatslv.c ****                     }
 4025              	 .loc 4 1832 0
 4026 009c 0123     	 movs r3,#1
 4027 009e BB80     	 strh r3,[r7,#4]
 4028              	 .loc 4 1834 0
 4029 00a0 3CE0     	 b .L275
 4030              	.L279:
1835:../SSC/Src/ecatslv.c ****                 case SAFEOP_2_OP:
1836:../SSC/Src/ecatslv.c ****                     if(bDcSyncActive)
 4031              	 .loc 4 1836 0
 4032 00a2 7D4B     	 ldr r3,.L314+24
 4033 00a4 1B78     	 ldrb r3,[r3]
 4034 00a6 002B     	 cmp r3,#0
 4035 00a8 1AD0     	 beq .L286
1837:../SSC/Src/ecatslv.c ****                     {
1838:../SSC/Src/ecatslv.c ****                         /*SafeOP to OP timeout expired check which AL status code need to be writte
1839:../SSC/Src/ecatslv.c ****                         if(!bDcRunning)
 4036              	 .loc 4 1839 0
 4037 00aa 7C4B     	 ldr r3,.L314+28
 4038 00ac 1B78     	 ldrb r3,[r3]
 4039 00ae 83F00103 	 eor r3,r3,#1
 4040 00b2 DBB2     	 uxtb r3,r3
 4041 00b4 002B     	 cmp r3,#0
 4042 00b6 02D0     	 beq .L287
1840:../SSC/Src/ecatslv.c ****                         {
1841:../SSC/Src/ecatslv.c ****                             /*no Sync0 signal received*/
1842:../SSC/Src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_NOSYNCERROR;
 4043              	 .loc 4 1842 0
 4044 00b8 2D23     	 movs r3,#45
 4045 00ba BB80     	 strh r3,[r7,#4]
 4046 00bc 1EE0     	 b .L290
 4047              	.L287:
1843:../SSC/Src/ecatslv.c ****                         }
1844:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1845:../SSC/Src/ecatslv.c ****                         else if(!bEcatFirstOutputsReceived && (nPdOutputSize > 0))
 4048              	 .loc 4 1845 0
 4049 00be 784B     	 ldr r3,.L314+32
 4050 00c0 1B78     	 ldrb r3,[r3]
 4051 00c2 83F00103 	 eor r3,r3,#1
 4052 00c6 DBB2     	 uxtb r3,r3
 4053 00c8 002B     	 cmp r3,#0
 4054 00ca 06D0     	 beq .L289
 4055              	 .loc 4 1845 0 is_stmt 0 discriminator 1
 4056 00cc 754B     	 ldr r3,.L314+36
 4057 00ce 1B88     	 ldrh r3,[r3]
 4058 00d0 002B     	 cmp r3,#0
 4059 00d2 02D0     	 beq .L289
1846:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1847:../SSC/Src/ecatslv.c ****                         {
1848:../SSC/Src/ecatslv.c ****                             /*no process data received*/
1849:../SSC/Src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_SMWATCHDOG;
 4060              	 .loc 4 1849 0 is_stmt 1
 4061 00d4 1B23     	 movs r3,#27
 4062 00d6 BB80     	 strh r3,[r7,#4]
 4063 00d8 10E0     	 b .L290
 4064              	.L289:
1850:../SSC/Src/ecatslv.c ****                         }
1851:../SSC/Src/ecatslv.c ****                         else
1852:../SSC/Src/ecatslv.c ****                         {
1853:../SSC/Src/ecatslv.c ****                             /*SM/Sync Sequence is not valid*/
1854:../SSC/Src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_SYNCERROR;
 4065              	 .loc 4 1854 0
 4066 00da 1A23     	 movs r3,#26
 4067 00dc BB80     	 strh r3,[r7,#4]
 4068 00de 0DE0     	 b .L290
 4069              	.L286:
1855:../SSC/Src/ecatslv.c ****                         }
1856:../SSC/Src/ecatslv.c ****                     }
1857:../SSC/Src/ecatslv.c ****                     else
1858:../SSC/Src/ecatslv.c ****                     {
1859:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ECAT4*/
1860:../SSC/Src/ecatslv.c ****                         if (nPdOutputSize > 0)
 4070              	 .loc 4 1860 0
 4071 00e0 704B     	 ldr r3,.L314+36
 4072 00e2 1B88     	 ldrh r3,[r3]
 4073 00e4 002B     	 cmp r3,#0
 4074 00e6 02D0     	 beq .L291
1861:../SSC/Src/ecatslv.c ****                         {
1862:../SSC/Src/ecatslv.c ****                             StatusCode = ALSTATUSCODE_SMWATCHDOG;
 4075              	 .loc 4 1862 0
 4076 00e8 1B23     	 movs r3,#27
 4077 00ea BB80     	 strh r3,[r7,#4]
 4078 00ec 06E0     	 b .L290
 4079              	.L291:
1863:../SSC/Src/ecatslv.c ****                         }
1864:../SSC/Src/ecatslv.c ****                         else
1865:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ECAT4*/
1866:../SSC/Src/ecatslv.c ****                         {
1867:../SSC/Src/ecatslv.c ****                             /*Set valid state transition even if timeout expired*/
1868:../SSC/Src/ecatslv.c ****                             Status = STATE_OP;
 4080              	 .loc 4 1868 0
 4081 00ee 0823     	 movs r3,#8
 4082 00f0 FB71     	 strb r3,[r7,#7]
1869:../SSC/Src/ecatslv.c ****                             StatusCode = 0;
 4083              	 .loc 4 1869 0
 4084 00f2 0023     	 movs r3,#0
 4085 00f4 BB80     	 strh r3,[r7,#4]
1870:../SSC/Src/ecatslv.c ****                             /* Slave is OPERATIONAL */
1871:../SSC/Src/ecatslv.c ****                             bEcatOutputUpdateRunning = TRUE;
 4086              	 .loc 4 1871 0
 4087 00f6 6C4B     	 ldr r3,.L314+40
 4088 00f8 0122     	 movs r2,#1
 4089 00fa 1A70     	 strb r2,[r3]
 4090              	.L290:
1872:../SSC/Src/ecatslv.c ****                         }
1873:../SSC/Src/ecatslv.c ****                     }
1874:../SSC/Src/ecatslv.c **** 
1875:../SSC/Src/ecatslv.c ****                     /*Stop handler on failed transition*/
1876:../SSC/Src/ecatslv.c ****                     if(StatusCode != 0)
 4091              	 .loc 4 1876 0
 4092 00fc BB88     	 ldrh r3,[r7,#4]
 4093 00fe 002B     	 cmp r3,#0
 4094 0100 0BD0     	 beq .L292
1877:../SSC/Src/ecatslv.c ****                     {
1878:../SSC/Src/ecatslv.c ****                         if(!bApplEsmPending)
 4095              	 .loc 4 1878 0
 4096 0102 624B     	 ldr r3,.L314+12
 4097 0104 1B78     	 ldrb r3,[r3]
 4098 0106 83F00103 	 eor r3,r3,#1
 4099 010a DBB2     	 uxtb r3,r3
 4100 010c 002B     	 cmp r3,#0
 4101 010e 01D0     	 beq .L293
1879:../SSC/Src/ecatslv.c ****                             APPL_StopOutputHandler();
 4102              	 .loc 4 1879 0
 4103 0110 FFF7FEFF 	 bl APPL_StopOutputHandler
 4104              	.L293:
1880:../SSC/Src/ecatslv.c **** 
1881:../SSC/Src/ecatslv.c ****                         StopOutputHandler();
 4105              	 .loc 4 1881 0
 4106 0114 FFF7FEFF 	 bl StopOutputHandler
1882:../SSC/Src/ecatslv.c ****                     }
1883:../SSC/Src/ecatslv.c ****                 break;
 4107              	 .loc 4 1883 0
 4108 0118 FFE7     	 b .L312
 4109              	.L292:
 4110              	.L312:
 4111 011a 00BF     	 nop
 4112              	.L275:
 4113 011c 9AE0     	 b .L294
 4114              	.L274:
1884:../SSC/Src/ecatslv.c ****             }
1885:../SSC/Src/ecatslv.c ****         } //ESM timeout
1886:../SSC/Src/ecatslv.c ****         else
1887:../SSC/Src/ecatslv.c ****         {
1888:../SSC/Src/ecatslv.c ****             /*Call application specific transition function and complete transition it the function
1889:../SSC/Src/ecatslv.c ****             switch(nEcatStateTrans)
 4115              	 .loc 4 1889 0
 4116 011e 5A4B     	 ldr r3,.L314+8
 4117 0120 1B88     	 ldrh r3,[r3]
 4118 0122 242B     	 cmp r3,#36
 4119 0124 2AD0     	 beq .L295
 4120 0126 242B     	 cmp r3,#36
 4121 0128 04DC     	 bgt .L296
 4122 012a 123B     	 subs r3,r3,#18
 4123 012c 012B     	 cmp r3,#1
 4124 012e 00F29180 	 bhi .L294
 4125 0132 02E0     	 b .L311
 4126              	.L296:
 4127 0134 482B     	 cmp r3,#72
 4128 0136 3FD0     	 beq .L298
 4129 0138 8CE0     	 b .L294
 4130              	.L311:
1890:../SSC/Src/ecatslv.c ****             {
1891:../SSC/Src/ecatslv.c ****                 case INIT_2_PREOP:
1892:../SSC/Src/ecatslv.c ****                 case INIT_2_BOOT:
1893:../SSC/Src/ecatslv.c ****                     if(bApplEsmPending)
 4131              	 .loc 4 1893 0
 4132 013a 544B     	 ldr r3,.L314+12
 4133 013c 1B78     	 ldrb r3,[r3]
 4134 013e 002B     	 cmp r3,#0
 4135 0140 1BD0     	 beq .L299
1894:../SSC/Src/ecatslv.c ****                     {
1895:../SSC/Src/ecatslv.c ****                         bApplEsmPending = FALSE;
 4136              	 .loc 4 1895 0
 4137 0142 524B     	 ldr r3,.L314+12
 4138 0144 0022     	 movs r2,#0
 4139 0146 1A70     	 strb r2,[r3]
1896:../SSC/Src/ecatslv.c ****                         /*APPL_StartMailboxHandler() need to be called*/
1897:../SSC/Src/ecatslv.c ****                         result = APPL_StartMailboxHandler();
 4140              	 .loc 4 1897 0
 4141 0148 FFF7FEFF 	 bl APPL_StartMailboxHandler
 4142 014c 0346     	 mov r3,r0
 4143 014e 7B80     	 strh r3,[r7,#2]
1898:../SSC/Src/ecatslv.c **** 
1899:../SSC/Src/ecatslv.c ****                         if(result == 0)
 4144              	 .loc 4 1899 0
 4145 0150 7B88     	 ldrh r3,[r7,#2]
 4146 0152 002B     	 cmp r3,#0
 4147 0154 09D1     	 bne .L300
1900:../SSC/Src/ecatslv.c ****                         {
1901:../SSC/Src/ecatslv.c ****                             /*The application specific transition was successful => set active mail
1902:../SSC/Src/ecatslv.c ****                             bMbxRunning = TRUE;
 4148              	 .loc 4 1902 0
 4149 0156 554B     	 ldr r3,.L314+44
 4150 0158 0122     	 movs r2,#1
 4151 015a 1A70     	 strb r2,[r3]
1903:../SSC/Src/ecatslv.c ****                             Status =  (UINT8)(nEcatStateTrans & STATE_MASK);
 4152              	 .loc 4 1903 0
 4153 015c 4A4B     	 ldr r3,.L314+8
 4154 015e 1B88     	 ldrh r3,[r3]
 4155 0160 DBB2     	 uxtb r3,r3
 4156 0162 03F00F03 	 and r3,r3,#15
 4157 0166 FB71     	 strb r3,[r7,#7]
 4158 0168 07E0     	 b .L299
 4159              	.L300:
1904:../SSC/Src/ecatslv.c ****                         }
1905:../SSC/Src/ecatslv.c ****                         else
1906:../SSC/Src/ecatslv.c ****                         {
1907:../SSC/Src/ecatslv.c ****                             /*The application specific transition failed.
1908:../SSC/Src/ecatslv.c ****                             (In pending case the application need to complete the transition)*/
1909:../SSC/Src/ecatslv.c **** 
1910:../SSC/Src/ecatslv.c ****                             if(result != NOERROR_INWORK)
 4160              	 .loc 4 1910 0
 4161 016a 7B88     	 ldrh r3,[r7,#2]
 4162 016c FF2B     	 cmp r3,#255
 4163 016e 04D0     	 beq .L299
1911:../SSC/Src/ecatslv.c ****                             {
1912:../SSC/Src/ecatslv.c ****                                 APPL_StopMailboxHandler();
 4164              	 .loc 4 1912 0
 4165 0170 FFF7FEFF 	 bl APPL_StopMailboxHandler
1913:../SSC/Src/ecatslv.c ****                                 MBX_StopMailboxHandler();
 4166              	 .loc 4 1913 0
 4167 0174 FFF7FEFF 	 bl MBX_StopMailboxHandler
1914:../SSC/Src/ecatslv.c ****                             }
1915:../SSC/Src/ecatslv.c ****                         }
1916:../SSC/Src/ecatslv.c ****                     }
1917:../SSC/Src/ecatslv.c ****                 break;
 4168              	 .loc 4 1917 0
 4169 0178 6CE0     	 b .L294
 4170              	.L299:
 4171 017a 6BE0     	 b .L294
 4172              	.L295:
1918:../SSC/Src/ecatslv.c ****                 case PREOP_2_SAFEOP:
1919:../SSC/Src/ecatslv.c ****                     if(bApplEsmPending)
 4173              	 .loc 4 1919 0
 4174 017c 434B     	 ldr r3,.L314+12
 4175 017e 1B78     	 ldrb r3,[r3]
 4176 0180 002B     	 cmp r3,#0
 4177 0182 18D0     	 beq .L301
1920:../SSC/Src/ecatslv.c ****                     {
1921:../SSC/Src/ecatslv.c ****                         bApplEsmPending = FALSE;
 4178              	 .loc 4 1921 0
 4179 0184 414B     	 ldr r3,.L314+12
 4180 0186 0022     	 movs r2,#0
 4181 0188 1A70     	 strb r2,[r3]
1922:../SSC/Src/ecatslv.c ****                         result = APPL_StartInputHandler(&u16ALEventMask);
 4182              	 .loc 4 1922 0
 4183 018a 4948     	 ldr r0,.L314+48
 4184 018c FFF7FEFF 	 bl APPL_StartInputHandler
 4185 0190 0346     	 mov r3,r0
 4186 0192 7B80     	 strh r3,[r7,#2]
1923:../SSC/Src/ecatslv.c **** 
1924:../SSC/Src/ecatslv.c ****                         if(result == 0)
 4187              	 .loc 4 1924 0
 4188 0194 7B88     	 ldrh r3,[r7,#2]
 4189 0196 002B     	 cmp r3,#0
 4190 0198 05D1     	 bne .L302
1925:../SSC/Src/ecatslv.c ****                         {
1926:../SSC/Src/ecatslv.c ****                             bEcatInputUpdateRunning = TRUE;
 4191              	 .loc 4 1926 0
 4192 019a 464B     	 ldr r3,.L314+52
 4193 019c 0122     	 movs r2,#1
 4194 019e 1A70     	 strb r2,[r3]
1927:../SSC/Src/ecatslv.c ****                             Status = STATE_SAFEOP;
 4195              	 .loc 4 1927 0
 4196 01a0 0423     	 movs r3,#4
 4197 01a2 FB71     	 strb r3,[r7,#7]
 4198 01a4 07E0     	 b .L301
 4199              	.L302:
1928:../SSC/Src/ecatslv.c ****                         }
1929:../SSC/Src/ecatslv.c ****                         else
1930:../SSC/Src/ecatslv.c ****                         {
1931:../SSC/Src/ecatslv.c ****                             /*The application specific transition failed.
1932:../SSC/Src/ecatslv.c ****                             (In pending case the application need to complete the transition)*/
1933:../SSC/Src/ecatslv.c **** 
1934:../SSC/Src/ecatslv.c ****                             if(result != NOERROR_INWORK)
 4200              	 .loc 4 1934 0
 4201 01a6 7B88     	 ldrh r3,[r7,#2]
 4202 01a8 FF2B     	 cmp r3,#255
 4203 01aa 04D0     	 beq .L301
1935:../SSC/Src/ecatslv.c ****                             {
1936:../SSC/Src/ecatslv.c ****                                 APPL_StopInputHandler();
 4204              	 .loc 4 1936 0
 4205 01ac FFF7FEFF 	 bl APPL_StopInputHandler
1937:../SSC/Src/ecatslv.c ****                                 StopInputHandler();
 4206              	 .loc 4 1937 0
 4207 01b0 FFF7FEFF 	 bl StopInputHandler
1938:../SSC/Src/ecatslv.c ****                             }
1939:../SSC/Src/ecatslv.c ****                         }
1940:../SSC/Src/ecatslv.c ****                     }
1941:../SSC/Src/ecatslv.c ****                 break;
 4208              	 .loc 4 1941 0
 4209 01b4 4EE0     	 b .L294
 4210              	.L301:
 4211 01b6 4DE0     	 b .L294
 4212              	.L298:
1942:../SSC/Src/ecatslv.c ****                 case SAFEOP_2_OP:
1943:../SSC/Src/ecatslv.c ****                    if(bApplEsmPending)
 4213              	 .loc 4 1943 0
 4214 01b8 344B     	 ldr r3,.L314+12
 4215 01ba 1B78     	 ldrb r3,[r3]
 4216 01bc 002B     	 cmp r3,#0
 4217 01be 48D0     	 beq .L303
1944:../SSC/Src/ecatslv.c ****                     {
1945:../SSC/Src/ecatslv.c ****                         if(bDcSyncActive)
 4218              	 .loc 4 1945 0
 4219 01c0 354B     	 ldr r3,.L314+24
 4220 01c2 1B78     	 ldrb r3,[r3]
 4221 01c4 002B     	 cmp r3,#0
 4222 01c6 27D0     	 beq .L304
1946:../SSC/Src/ecatslv.c ****                         {
1947:../SSC/Src/ecatslv.c ****                             if(i16WaitForPllRunningTimeout > 0 && i16WaitForPllRunningTimeout <= i1
 4223              	 .loc 4 1947 0
 4224 01c8 3B4B     	 ldr r3,.L314+56
 4225 01ca 1B88     	 ldrh r3,[r3]
 4226 01cc 1BB2     	 sxth r3,r3
 4227 01ce 002B     	 cmp r3,#0
 4228 01d0 3FDD     	 ble .L303
 4229              	 .loc 4 1947 0 is_stmt 0 discriminator 1
 4230 01d2 394B     	 ldr r3,.L314+56
 4231 01d4 1A88     	 ldrh r2,[r3]
 4232 01d6 394B     	 ldr r3,.L314+60
 4233 01d8 1B88     	 ldrh r3,[r3]
 4234 01da 12B2     	 sxth r2,r2
 4235 01dc 1BB2     	 sxth r3,r3
 4236 01de 9A42     	 cmp r2,r3
 4237 01e0 37DC     	 bgt .L303
1948:../SSC/Src/ecatslv.c ****                             {
1949:../SSC/Src/ecatslv.c ****                                 /*Pll sequence valid for 200ms (set in APPL_StartOutputHandler() )
1950:../SSC/Src/ecatslv.c ****                                 acknowledge state transition to OP */
1951:../SSC/Src/ecatslv.c **** 
1952:../SSC/Src/ecatslv.c ****                                 i16WaitForPllRunningTimeout = 0;
 4238              	 .loc 4 1952 0 is_stmt 1
 4239 01e2 354B     	 ldr r3,.L314+56
 4240 01e4 0022     	 movs r2,#0
 4241 01e6 1A80     	 strh r2,[r3]
1953:../SSC/Src/ecatslv.c ****                                 i16WaitForPllRunningCnt = 0;
 4242              	 .loc 4 1953 0
 4243 01e8 344B     	 ldr r3,.L314+60
 4244 01ea 0022     	 movs r2,#0
 4245 01ec 1A80     	 strh r2,[r3]
1954:../SSC/Src/ecatslv.c **** 
1955:../SSC/Src/ecatslv.c ****                                 result = APPL_StartOutputHandler();
 4246              	 .loc 4 1955 0
 4247 01ee FFF7FEFF 	 bl APPL_StartOutputHandler
 4248 01f2 0346     	 mov r3,r0
 4249 01f4 7B80     	 strh r3,[r7,#2]
1956:../SSC/Src/ecatslv.c **** 
1957:../SSC/Src/ecatslv.c ****                                 if(result == 0)
 4250              	 .loc 4 1957 0
 4251 01f6 7B88     	 ldrh r3,[r7,#2]
 4252 01f8 002B     	 cmp r3,#0
 4253 01fa 05D1     	 bne .L306
1958:../SSC/Src/ecatslv.c ****                                 {
1959:../SSC/Src/ecatslv.c ****                                     /* Slave is OPERATIONAL */
1960:../SSC/Src/ecatslv.c ****                                     bEcatOutputUpdateRunning = TRUE;
 4254              	 .loc 4 1960 0
 4255 01fc 2A4B     	 ldr r3,.L314+40
 4256 01fe 0122     	 movs r2,#1
 4257 0200 1A70     	 strb r2,[r3]
1961:../SSC/Src/ecatslv.c ****                                     Status = STATE_OP;
 4258              	 .loc 4 1961 0
 4259 0202 0823     	 movs r3,#8
 4260 0204 FB71     	 strb r3,[r7,#7]
 4261 0206 24E0     	 b .L303
 4262              	.L306:
1962:../SSC/Src/ecatslv.c ****                                 }
1963:../SSC/Src/ecatslv.c ****                                 else
1964:../SSC/Src/ecatslv.c ****                                 {
1965:../SSC/Src/ecatslv.c ****                                     if(result != NOERROR_INWORK)
 4263              	 .loc 4 1965 0
 4264 0208 7B88     	 ldrh r3,[r7,#2]
 4265 020a FF2B     	 cmp r3,#255
 4266 020c 21D0     	 beq .L303
1966:../SSC/Src/ecatslv.c ****                                     {
1967:../SSC/Src/ecatslv.c ****                                         APPL_StopOutputHandler();
 4267              	 .loc 4 1967 0
 4268 020e FFF7FEFF 	 bl APPL_StopOutputHandler
1968:../SSC/Src/ecatslv.c ****                                         StopOutputHandler();
 4269              	 .loc 4 1968 0
 4270 0212 FFF7FEFF 	 bl StopOutputHandler
1969:../SSC/Src/ecatslv.c ****                                     }
1970:../SSC/Src/ecatslv.c ****                                 }
1971:../SSC/Src/ecatslv.c ****                             }
1972:../SSC/Src/ecatslv.c ****                         }
1973:../SSC/Src/ecatslv.c ****                         else
1974:../SSC/Src/ecatslv.c ****                         {
1975:../SSC/Src/ecatslv.c ****                             if(nPdOutputSize == 0 || bEcatFirstOutputsReceived)
1976:../SSC/Src/ecatslv.c ****                             {
1977:../SSC/Src/ecatslv.c ****                                 result = APPL_StartOutputHandler();
1978:../SSC/Src/ecatslv.c **** 
1979:../SSC/Src/ecatslv.c ****                                 if(result == 0)
1980:../SSC/Src/ecatslv.c ****                                 {
1981:../SSC/Src/ecatslv.c ****                                     /* Slave is OPERATIONAL */
1982:../SSC/Src/ecatslv.c ****                                     bEcatOutputUpdateRunning = TRUE;
1983:../SSC/Src/ecatslv.c ****                                     Status = STATE_OP;
1984:../SSC/Src/ecatslv.c ****                                 }
1985:../SSC/Src/ecatslv.c ****                                 else
1986:../SSC/Src/ecatslv.c ****                                 {
1987:../SSC/Src/ecatslv.c ****                                     if(result != NOERROR_INWORK)
1988:../SSC/Src/ecatslv.c ****                                     {
1989:../SSC/Src/ecatslv.c ****                                         APPL_StopOutputHandler();
1990:../SSC/Src/ecatslv.c ****                                         StopOutputHandler();
1991:../SSC/Src/ecatslv.c ****                                     }
1992:../SSC/Src/ecatslv.c ****                                 }
1993:../SSC/Src/ecatslv.c ****                             }
1994:../SSC/Src/ecatslv.c ****                         }       
1995:../SSC/Src/ecatslv.c ****                     }             
1996:../SSC/Src/ecatslv.c ****                 break;
 4271              	 .loc 4 1996 0
 4272 0216 1CE0     	 b .L313
 4273              	.L304:
1975:../SSC/Src/ecatslv.c ****                             {
 4274              	 .loc 4 1975 0
 4275 0218 224B     	 ldr r3,.L314+36
 4276 021a 1B88     	 ldrh r3,[r3]
 4277 021c 002B     	 cmp r3,#0
 4278 021e 03D0     	 beq .L307
1975:../SSC/Src/ecatslv.c ****                             {
 4279              	 .loc 4 1975 0 is_stmt 0 discriminator 1
 4280 0220 1F4B     	 ldr r3,.L314+32
 4281 0222 1B78     	 ldrb r3,[r3]
 4282 0224 002B     	 cmp r3,#0
 4283 0226 14D0     	 beq .L303
 4284              	.L307:
1977:../SSC/Src/ecatslv.c **** 
 4285              	 .loc 4 1977 0 is_stmt 1
 4286 0228 FFF7FEFF 	 bl APPL_StartOutputHandler
 4287 022c 0346     	 mov r3,r0
 4288 022e 7B80     	 strh r3,[r7,#2]
1979:../SSC/Src/ecatslv.c ****                                 {
 4289              	 .loc 4 1979 0
 4290 0230 7B88     	 ldrh r3,[r7,#2]
 4291 0232 002B     	 cmp r3,#0
 4292 0234 05D1     	 bne .L308
1982:../SSC/Src/ecatslv.c ****                                     Status = STATE_OP;
 4293              	 .loc 4 1982 0
 4294 0236 1C4B     	 ldr r3,.L314+40
 4295 0238 0122     	 movs r2,#1
 4296 023a 1A70     	 strb r2,[r3]
1983:../SSC/Src/ecatslv.c ****                                 }
 4297              	 .loc 4 1983 0
 4298 023c 0823     	 movs r3,#8
 4299 023e FB71     	 strb r3,[r7,#7]
 4300 0240 07E0     	 b .L303
 4301              	.L308:
1987:../SSC/Src/ecatslv.c ****                                     {
 4302              	 .loc 4 1987 0
 4303 0242 7B88     	 ldrh r3,[r7,#2]
 4304 0244 FF2B     	 cmp r3,#255
 4305 0246 04D0     	 beq .L303
1989:../SSC/Src/ecatslv.c ****                                         StopOutputHandler();
 4306              	 .loc 4 1989 0
 4307 0248 FFF7FEFF 	 bl APPL_StopOutputHandler
1990:../SSC/Src/ecatslv.c ****                                     }
 4308              	 .loc 4 1990 0
 4309 024c FFF7FEFF 	 bl StopOutputHandler
 4310              	 .loc 4 1996 0
 4311 0250 FFE7     	 b .L313
 4312              	.L303:
 4313              	.L313:
 4314 0252 00BF     	 nop
 4315              	.L294:
1997:../SSC/Src/ecatslv.c ****             }//Switch - transition
1998:../SSC/Src/ecatslv.c ****         }
1999:../SSC/Src/ecatslv.c **** 
2000:../SSC/Src/ecatslv.c ****         if(Status != 0)
 4316              	 .loc 4 2000 0
 4317 0254 FB79     	 ldrb r3,[r7,#7]
 4318 0256 002B     	 cmp r3,#0
 4319 0258 0FD0     	 beq .L272
2001:../SSC/Src/ecatslv.c ****         {
2002:../SSC/Src/ecatslv.c ****             /*Pending state transition finished => write AL Status and AL Status Code*/
2003:../SSC/Src/ecatslv.c ****             bEcatWaitForAlControlRes = FALSE;
 4320              	 .loc 4 2003 0
 4321 025a 094B     	 ldr r3,.L314
 4322 025c 0022     	 movs r2,#0
 4323 025e 1A70     	 strb r2,[r3]
2004:../SSC/Src/ecatslv.c **** 
2005:../SSC/Src/ecatslv.c ****             if (StatusCode != 0)
 4324              	 .loc 4 2005 0
 4325 0260 BB88     	 ldrh r3,[r7,#4]
 4326 0262 002B     	 cmp r3,#0
 4327 0264 03D0     	 beq .L309
2006:../SSC/Src/ecatslv.c ****             {
2007:../SSC/Src/ecatslv.c ****                 Status |= STATE_CHANGE;
 4328              	 .loc 4 2007 0
 4329 0266 FB79     	 ldrb r3,[r7,#7]
 4330 0268 43F01003 	 orr r3,r3,#16
 4331 026c FB71     	 strb r3,[r7,#7]
 4332              	.L309:
2008:../SSC/Src/ecatslv.c ****             }
2009:../SSC/Src/ecatslv.c **** 
2010:../SSC/Src/ecatslv.c ****             SetALStatus(Status,StatusCode);
 4333              	 .loc 4 2010 0
 4334 026e FA79     	 ldrb r2,[r7,#7]
 4335 0270 BB88     	 ldrh r3,[r7,#4]
 4336 0272 1046     	 mov r0,r2
 4337 0274 1946     	 mov r1,r3
 4338 0276 FFF7FEFF 	 bl SetALStatus
 4339              	.L272:
 4340              	.LBE7:
2011:../SSC/Src/ecatslv.c ****         }
2012:../SSC/Src/ecatslv.c ****     }// Pending state transition (bEcatWaitForAlControlRes == true)
2013:../SSC/Src/ecatslv.c **** }
 4341              	 .loc 4 2013 0
 4342 027a 0837     	 adds r7,r7,#8
 4343              	.LCFI103:
 4344              	 .cfi_def_cfa_offset 8
 4345 027c BD46     	 mov sp,r7
 4346              	.LCFI104:
 4347              	 .cfi_def_cfa_register 13
 4348              	 
 4349 027e 80BD     	 pop {r7,pc}
 4350              	.L315:
 4351              	 .align 2
 4352              	.L314:
 4353 0280 00000000 	 .word bEcatWaitForAlControlRes
 4354 0284 00000000 	 .word EsmTimeoutCounter
 4355 0288 00000000 	 .word nEcatStateTrans
 4356 028c 00000000 	 .word bApplEsmPending
 4357 0290 00000000 	 .word bLocalErrorFlag
 4358 0294 00000000 	 .word u16LocalErrorCode
 4359 0298 00000000 	 .word bDcSyncActive
 4360 029c 00000000 	 .word bDcRunning
 4361 02a0 00000000 	 .word bEcatFirstOutputsReceived
 4362 02a4 00000000 	 .word nPdOutputSize
 4363 02a8 00000000 	 .word bEcatOutputUpdateRunning
 4364 02ac 00000000 	 .word bMbxRunning
 4365 02b0 00000000 	 .word u16ALEventMask
 4366 02b4 00000000 	 .word bEcatInputUpdateRunning
 4367 02b8 00000000 	 .word i16WaitForPllRunningTimeout
 4368 02bc 00000000 	 .word i16WaitForPllRunningCnt
 4369              	 .cfi_endproc
 4370              	.LFE186:
 4372              	 .section .text.DC_CheckWatchdog,"ax",%progbits
 4373              	 .align 2
 4374              	 .global DC_CheckWatchdog
 4375              	 .thumb
 4376              	 .thumb_func
 4378              	DC_CheckWatchdog:
 4379              	.LFB187:
2014:../SSC/Src/ecatslv.c **** 
2015:../SSC/Src/ecatslv.c **** 
2016:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2017:../SSC/Src/ecatslv.c **** /**
2018:../SSC/Src/ecatslv.c **** 
2019:../SSC/Src/ecatslv.c ****  \brief    This function checks the current Sync state and set the local flags
2020:../SSC/Src/ecatslv.c ****  The analyse of the local flags is handled in "CheckIfEcatError"
2021:../SSC/Src/ecatslv.c **** 
2022:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2023:../SSC/Src/ecatslv.c **** void DC_CheckWatchdog(void)
2024:../SSC/Src/ecatslv.c **** {
 4380              	 .loc 4 2024 0
 4381              	 .cfi_startproc
 4382              	 
 4383              	 
 4384 0000 80B5     	 push {r7,lr}
 4385              	.LCFI105:
 4386              	 .cfi_def_cfa_offset 8
 4387              	 .cfi_offset 7,-8
 4388              	 .cfi_offset 14,-4
 4389 0002 00AF     	 add r7,sp,#0
 4390              	.LCFI106:
 4391              	 .cfi_def_cfa_register 7
2025:../SSC/Src/ecatslv.c ****     DISABLE_ESC_INT();
 4392              	 .loc 4 2025 0
 4393 0004 FFF7FEFF 	 bl DISABLE_ESC_INT
2026:../SSC/Src/ecatslv.c ****     if(bDcSyncActive)
 4394              	 .loc 4 2026 0
 4395 0008 394B     	 ldr r3,.L327
 4396 000a 1B78     	 ldrb r3,[r3]
 4397 000c 002B     	 cmp r3,#0
 4398 000e 6BD0     	 beq .L317
2027:../SSC/Src/ecatslv.c ****     {
2028:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) ESM4*/
2029:../SSC/Src/ecatslv.c ****         /*If Sync0 watchdog is enabled and expired*/
2030:../SSC/Src/ecatslv.c ****         if((Sync0WdValue > 0) && (Sync0WdCounter >= Sync0WdValue))
 4399              	 .loc 4 2030 0
 4400 0010 384B     	 ldr r3,.L327+4
 4401 0012 1B88     	 ldrh r3,[r3]
 4402 0014 002B     	 cmp r3,#0
 4403 0016 09D0     	 beq .L318
 4404              	 .loc 4 2030 0 is_stmt 0 discriminator 1
 4405 0018 374B     	 ldr r3,.L327+8
 4406 001a 1A88     	 ldrh r2,[r3]
 4407 001c 354B     	 ldr r3,.L327+4
 4408 001e 1B88     	 ldrh r3,[r3]
 4409 0020 9A42     	 cmp r2,r3
 4410 0022 03D3     	 bcc .L318
2031:../SSC/Src/ecatslv.c ****         {
2032:../SSC/Src/ecatslv.c ****                 /*Sync0 watchdog expired*/
2033:../SSC/Src/ecatslv.c ****                 bDcRunning = FALSE;        
 4411              	 .loc 4 2033 0 is_stmt 1
 4412 0024 354B     	 ldr r3,.L327+12
 4413 0026 0022     	 movs r2,#0
 4414 0028 1A70     	 strb r2,[r3]
 4415 002a 0EE0     	 b .L319
 4416              	.L318:
2034:../SSC/Src/ecatslv.c ****         }
2035:../SSC/Src/ecatslv.c ****         else
2036:../SSC/Src/ecatslv.c ****         {
2037:../SSC/Src/ecatslv.c ****             if(Sync0WdCounter < Sync0WdValue)
 4417              	 .loc 4 2037 0
 4418 002c 324B     	 ldr r3,.L327+8
 4419 002e 1A88     	 ldrh r2,[r3]
 4420 0030 304B     	 ldr r3,.L327+4
 4421 0032 1B88     	 ldrh r3,[r3]
 4422 0034 9A42     	 cmp r2,r3
 4423 0036 05D2     	 bcs .L320
2038:../SSC/Src/ecatslv.c ****             {
2039:../SSC/Src/ecatslv.c ****                 Sync0WdCounter ++;
 4424              	 .loc 4 2039 0
 4425 0038 2F4B     	 ldr r3,.L327+8
 4426 003a 1B88     	 ldrh r3,[r3]
 4427 003c 0133     	 adds r3,r3,#1
 4428 003e 9AB2     	 uxth r2,r3
 4429 0040 2D4B     	 ldr r3,.L327+8
 4430 0042 1A80     	 strh r2,[r3]
 4431              	.L320:
2040:../SSC/Src/ecatslv.c ****             }
2041:../SSC/Src/ecatslv.c **** 
2042:../SSC/Src/ecatslv.c ****             bDcRunning = TRUE;
 4432              	 .loc 4 2042 0
 4433 0044 2D4B     	 ldr r3,.L327+12
 4434 0046 0122     	 movs r2,#1
 4435 0048 1A70     	 strb r2,[r3]
 4436              	.L319:
2043:../SSC/Src/ecatslv.c ****         }
2044:../SSC/Src/ecatslv.c **** 
2045:../SSC/Src/ecatslv.c ****         if(bDcRunning)
 4437              	 .loc 4 2045 0
 4438 004a 2C4B     	 ldr r3,.L327+12
 4439 004c 1B78     	 ldrb r3,[r3]
 4440 004e 002B     	 cmp r3,#0
 4441 0050 13D0     	 beq .L321
2046:../SSC/Src/ecatslv.c ****         {
2047:../SSC/Src/ecatslv.c ****             /*Check the Sync1 cycle if Sync1 Wd is enabled*/
2048:../SSC/Src/ecatslv.c ****             if(Sync1WdValue > 0)
 4442              	 .loc 4 2048 0
 4443 0052 2B4B     	 ldr r3,.L327+16
 4444 0054 1B88     	 ldrh r3,[r3]
 4445 0056 002B     	 cmp r3,#0
 4446 0058 0FD0     	 beq .L321
2049:../SSC/Src/ecatslv.c ****             {
2050:../SSC/Src/ecatslv.c ****                 if(Sync1WdCounter < Sync1WdValue)
 4447              	 .loc 4 2050 0
 4448 005a 2A4B     	 ldr r3,.L327+20
 4449 005c 1A88     	 ldrh r2,[r3]
 4450 005e 284B     	 ldr r3,.L327+16
 4451 0060 1B88     	 ldrh r3,[r3]
 4452 0062 9A42     	 cmp r2,r3
 4453 0064 06D2     	 bcs .L322
2051:../SSC/Src/ecatslv.c ****                 {
2052:../SSC/Src/ecatslv.c ****                     Sync1WdCounter ++;
 4454              	 .loc 4 2052 0
 4455 0066 274B     	 ldr r3,.L327+20
 4456 0068 1B88     	 ldrh r3,[r3]
 4457 006a 0133     	 adds r3,r3,#1
 4458 006c 9AB2     	 uxth r2,r3
 4459 006e 254B     	 ldr r3,.L327+20
 4460 0070 1A80     	 strh r2,[r3]
 4461 0072 02E0     	 b .L321
 4462              	.L322:
2053:../SSC/Src/ecatslv.c ****                 }
2054:../SSC/Src/ecatslv.c ****                 else
2055:../SSC/Src/ecatslv.c ****                 {
2056:../SSC/Src/ecatslv.c ****                     /*Sync1 watchdog expired*/
2057:../SSC/Src/ecatslv.c ****                     bDcRunning = FALSE;
 4463              	 .loc 4 2057 0
 4464 0074 214B     	 ldr r3,.L327+12
 4465 0076 0022     	 movs r2,#0
 4466 0078 1A70     	 strb r2,[r3]
 4467              	.L321:
2058:../SSC/Src/ecatslv.c ****                 }
2059:../SSC/Src/ecatslv.c ****             }
2060:../SSC/Src/ecatslv.c ****         }
2061:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) ESM4*/
2062:../SSC/Src/ecatslv.c **** 
2063:../SSC/Src/ecatslv.c ****         if(bDcRunning)
 4468              	 .loc 4 2063 0
 4469 007a 204B     	 ldr r3,.L327+12
 4470 007c 1B78     	 ldrb r3,[r3]
 4471 007e 002B     	 cmp r3,#0
 4472 0080 2BD0     	 beq .L323
2064:../SSC/Src/ecatslv.c ****         {
2065:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) COE3*/
2066:../SSC/Src/ecatslv.c ****            if(sSyncManOutPar.u16SmEventMissedCounter < sErrorSettings.u16SyncErrorCounterLimit)
 4473              	 .loc 4 2066 0
 4474 0082 214B     	 ldr r3,.L327+24
 4475 0084 1A8D     	 ldrh r2,[r3,#40]
 4476 0086 214B     	 ldr r3,.L327+28
 4477 0088 1B89     	 ldrh r3,[r3,#8]
 4478 008a 9A42     	 cmp r2,r3
 4479 008c 11D2     	 bcs .L324
2067:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) COE3*/
2068:../SSC/Src/ecatslv.c ****             {
2069:../SSC/Src/ecatslv.c ****                 bSmSyncSequenceValid = TRUE;
 4480              	 .loc 4 2069 0
 4481 008e 204B     	 ldr r3,.L327+32
 4482 0090 0122     	 movs r2,#1
 4483 0092 1A70     	 strb r2,[r3]
2070:../SSC/Src/ecatslv.c **** 
2071:../SSC/Src/ecatslv.c ****                 /*Wait for PLL is active increment the Pll valid counter*/
2072:../SSC/Src/ecatslv.c ****                 if(i16WaitForPllRunningTimeout > 0)
 4484              	 .loc 4 2072 0
 4485 0094 1F4B     	 ldr r3,.L327+36
 4486 0096 1B88     	 ldrh r3,[r3]
 4487 0098 1BB2     	 sxth r3,r3
 4488 009a 002B     	 cmp r3,#0
 4489 009c 24DD     	 ble .L317
2073:../SSC/Src/ecatslv.c ****                 {
2074:../SSC/Src/ecatslv.c ****                     i16WaitForPllRunningCnt++;
 4490              	 .loc 4 2074 0
 4491 009e 1E4B     	 ldr r3,.L327+40
 4492 00a0 1B88     	 ldrh r3,[r3]
 4493 00a2 9BB2     	 uxth r3,r3
 4494 00a4 9BB2     	 uxth r3,r3
 4495 00a6 0133     	 adds r3,r3,#1
 4496 00a8 9BB2     	 uxth r3,r3
 4497 00aa 9AB2     	 uxth r2,r3
 4498 00ac 1A4B     	 ldr r3,.L327+40
 4499 00ae 1A80     	 strh r2,[r3]
 4500 00b0 1AE0     	 b .L317
 4501              	.L324:
2075:../SSC/Src/ecatslv.c ****                 }
2076:../SSC/Src/ecatslv.c ****             }
2077:../SSC/Src/ecatslv.c ****             else if(bSmSyncSequenceValid)
 4502              	 .loc 4 2077 0
 4503 00b2 174B     	 ldr r3,.L327+32
 4504 00b4 1B78     	 ldrb r3,[r3]
 4505 00b6 002B     	 cmp r3,#0
 4506 00b8 16D0     	 beq .L317
2078:../SSC/Src/ecatslv.c ****             {
2079:../SSC/Src/ecatslv.c ****                 bSmSyncSequenceValid = FALSE;
 4507              	 .loc 4 2079 0
 4508 00ba 154B     	 ldr r3,.L327+32
 4509 00bc 0022     	 movs r2,#0
 4510 00be 1A70     	 strb r2,[r3]
2080:../SSC/Src/ecatslv.c ****                 sSyncManOutPar.u8SyncError = 1;
 4511              	 .loc 4 2080 0
 4512 00c0 114B     	 ldr r3,.L327+24
 4513 00c2 0122     	 movs r2,#1
 4514 00c4 83F84020 	 strb r2,[r3,#64]
2081:../SSC/Src/ecatslv.c **** 
2082:../SSC/Src/ecatslv.c ****                 /*Wait for PLL is active reset the Pll valid counter*/
2083:../SSC/Src/ecatslv.c ****                 if(i16WaitForPllRunningTimeout > 0)
 4515              	 .loc 4 2083 0
 4516 00c8 124B     	 ldr r3,.L327+36
 4517 00ca 1B88     	 ldrh r3,[r3]
 4518 00cc 1BB2     	 sxth r3,r3
 4519 00ce 002B     	 cmp r3,#0
 4520 00d0 0ADD     	 ble .L317
2084:../SSC/Src/ecatslv.c ****                 {
2085:../SSC/Src/ecatslv.c ****                     i16WaitForPllRunningCnt = 0;
 4521              	 .loc 4 2085 0
 4522 00d2 114B     	 ldr r3,.L327+40
 4523 00d4 0022     	 movs r2,#0
 4524 00d6 1A80     	 strh r2,[r3]
 4525 00d8 06E0     	 b .L317
 4526              	.L323:
2086:../SSC/Src/ecatslv.c ****                 }
2087:../SSC/Src/ecatslv.c ****             }
2088:../SSC/Src/ecatslv.c ****         }
2089:../SSC/Src/ecatslv.c ****         else if(bSmSyncSequenceValid)
 4527              	 .loc 4 2089 0
 4528 00da 0D4B     	 ldr r3,.L327+32
 4529 00dc 1B78     	 ldrb r3,[r3]
 4530 00de 002B     	 cmp r3,#0
 4531 00e0 02D0     	 beq .L317
2090:../SSC/Src/ecatslv.c ****         {
2091:../SSC/Src/ecatslv.c ****             bSmSyncSequenceValid = FALSE;
 4532              	 .loc 4 2091 0
 4533 00e2 0B4B     	 ldr r3,.L327+32
 4534 00e4 0022     	 movs r2,#0
 4535 00e6 1A70     	 strb r2,[r3]
 4536              	.L317:
2092:../SSC/Src/ecatslv.c ****         }
2093:../SSC/Src/ecatslv.c **** 
2094:../SSC/Src/ecatslv.c ****     }
2095:../SSC/Src/ecatslv.c ****     ENABLE_ESC_INT();
 4537              	 .loc 4 2095 0
 4538 00e8 FFF7FEFF 	 bl ENABLE_ESC_INT
2096:../SSC/Src/ecatslv.c **** }
 4539              	 .loc 4 2096 0
 4540 00ec 80BD     	 pop {r7,pc}
 4541              	.L328:
 4542 00ee 00BF     	 .align 2
 4543              	.L327:
 4544 00f0 00000000 	 .word bDcSyncActive
 4545 00f4 00000000 	 .word Sync0WdValue
 4546 00f8 00000000 	 .word Sync0WdCounter
 4547 00fc 00000000 	 .word bDcRunning
 4548 0100 00000000 	 .word Sync1WdValue
 4549 0104 00000000 	 .word Sync1WdCounter
 4550 0108 00000000 	 .word sSyncManOutPar
 4551 010c 00000000 	 .word sErrorSettings
 4552 0110 00000000 	 .word bSmSyncSequenceValid
 4553 0114 00000000 	 .word i16WaitForPllRunningTimeout
 4554 0118 00000000 	 .word i16WaitForPllRunningCnt
 4555              	 .cfi_endproc
 4556              	.LFE187:
 4558              	 .section .text.CheckIfEcatError,"ax",%progbits
 4559              	 .align 2
 4560              	 .global CheckIfEcatError
 4561              	 .thumb
 4562              	 .thumb_func
 4564              	CheckIfEcatError:
 4565              	.LFB188:
2097:../SSC/Src/ecatslv.c **** 
2098:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2099:../SSC/Src/ecatslv.c **** /**
2100:../SSC/Src/ecatslv.c **** 
2101:../SSC/Src/ecatslv.c ****  \brief    Checks communication and synchronisation variables and update AL status / AL status code
2102:../SSC/Src/ecatslv.c **** 
2103:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2104:../SSC/Src/ecatslv.c **** void CheckIfEcatError(void)
2105:../SSC/Src/ecatslv.c **** {
 4566              	 .loc 4 2105 0
 4567              	 .cfi_startproc
 4568              	 
 4569              	 
 4570 0000 80B5     	 push {r7,lr}
 4571              	.LCFI107:
 4572              	 .cfi_def_cfa_offset 8
 4573              	 .cfi_offset 7,-8
 4574              	 .cfi_offset 14,-4
 4575 0002 82B0     	 sub sp,sp,#8
 4576              	.LCFI108:
 4577              	 .cfi_def_cfa_offset 16
 4578 0004 00AF     	 add r7,sp,#0
 4579              	.LCFI109:
 4580              	 .cfi_def_cfa_register 7
2106:../SSC/Src/ecatslv.c ****    /*if the watchdog is enabled check the the process data watchdog in the ESC
2107:../SSC/Src/ecatslv.c ****    and set the AL status code 0x1B if the watchdog expired*/
2108:../SSC/Src/ecatslv.c ****    if (EcatWdValue != 0)
 4581              	 .loc 4 2108 0
 4582 0006 204B     	 ldr r3,.L334
 4583 0008 1B88     	 ldrh r3,[r3]
 4584 000a 002B     	 cmp r3,#0
 4585 000c 19D0     	 beq .L330
 4586              	.LBB8:
2109:../SSC/Src/ecatslv.c ****    {
2110:../SSC/Src/ecatslv.c ****       /*watchdog time is set => watchdog is active*/
2111:../SSC/Src/ecatslv.c ****       UINT16 WdStatusOK = 0;
 4587              	 .loc 4 2111 0
 4588 000e 0023     	 movs r3,#0
 4589 0010 FB80     	 strh r3,[r7,#6]
2112:../SSC/Src/ecatslv.c **** 
2113:../SSC/Src/ecatslv.c ****       HW_EscReadWord(WdStatusOK, ESC_PD_WD_STATE);
 4590              	 .loc 4 2113 0
 4591 0012 1E4B     	 ldr r3,.L334+4
 4592 0014 1B88     	 ldrh r3,[r3]
 4593 0016 FB80     	 strh r3,[r7,#6]
2114:../SSC/Src/ecatslv.c ****       WdStatusOK = SWAPWORD(WdStatusOK);
2115:../SSC/Src/ecatslv.c **** 
2116:../SSC/Src/ecatslv.c ****       /*ECATCHANGE_START(V5.11) ECAT4*/
2117:../SSC/Src/ecatslv.c ****       if (!(WdStatusOK & ESC_PD_WD_TRIGGER_MASK) && (nPdOutputSize > 0))
 4594              	 .loc 4 2117 0
 4595 0018 FB88     	 ldrh r3,[r7,#6]
 4596 001a 03F00103 	 and r3,r3,#1
 4597 001e 002B     	 cmp r3,#0
 4598 0020 0FD1     	 bne .L330
 4599              	 .loc 4 2117 0 is_stmt 0 discriminator 1
 4600 0022 1B4B     	 ldr r3,.L334+8
 4601 0024 1B88     	 ldrh r3,[r3]
 4602 0026 002B     	 cmp r3,#0
 4603 0028 0BD0     	 beq .L330
2118:../SSC/Src/ecatslv.c ****       {
2119:../SSC/Src/ecatslv.c ****          /*The device is in OP state*/
2120:../SSC/Src/ecatslv.c **** 
2121:../SSC/Src/ecatslv.c ****          if (bEcatOutputUpdateRunning
 4604              	 .loc 4 2121 0 is_stmt 1
 4605 002a 1A4B     	 ldr r3,.L334+12
 4606 002c 1B78     	 ldrb r3,[r3]
 4607 002e 002B     	 cmp r3,#0
 4608 0030 04D0     	 beq .L331
2122:../SSC/Src/ecatslv.c ****             )
2123:../SSC/Src/ecatslv.c ****          {
2124:../SSC/Src/ecatslv.c ****             AL_ControlInd(STATE_SAFEOP, ALSTATUSCODE_SMWATCHDOG);
 4609              	 .loc 4 2124 0
 4610 0032 0420     	 movs r0,#4
 4611 0034 1B21     	 movs r1,#27
 4612 0036 FFF7FEFF 	 bl AL_ControlInd
2125:../SSC/Src/ecatslv.c ****             return;
 4613              	 .loc 4 2125 0
 4614 003a 22E0     	 b .L329
 4615              	.L331:
2126:../SSC/Src/ecatslv.c ****          }
2127:../SSC/Src/ecatslv.c **** 
2128:../SSC/Src/ecatslv.c ****          else
2129:../SSC/Src/ecatslv.c ****          {
2130:../SSC/Src/ecatslv.c ****             bEcatFirstOutputsReceived = FALSE;
 4616              	 .loc 4 2130 0
 4617 003c 164B     	 ldr r3,.L334+16
 4618 003e 0022     	 movs r2,#0
 4619 0040 1A70     	 strb r2,[r3]
 4620              	.L330:
 4621              	.LBE8:
2131:../SSC/Src/ecatslv.c ****          }
2132:../SSC/Src/ecatslv.c ****       }
2133:../SSC/Src/ecatslv.c ****       /*ECATCHANGE_END(V5.11) ECAT4*/
2134:../SSC/Src/ecatslv.c ****    }
2135:../SSC/Src/ecatslv.c **** 
2136:../SSC/Src/ecatslv.c ****    if(bDcSyncActive)
 4622              	 .loc 4 2136 0
 4623 0042 164B     	 ldr r3,.L334+20
 4624 0044 1B78     	 ldrb r3,[r3]
 4625 0046 002B     	 cmp r3,#0
 4626 0048 1BD0     	 beq .L329
2137:../SSC/Src/ecatslv.c ****    {
2138:../SSC/Src/ecatslv.c ****        if(bEcatOutputUpdateRunning)
 4627              	 .loc 4 2138 0
 4628 004a 124B     	 ldr r3,.L334+12
 4629 004c 1B78     	 ldrb r3,[r3]
 4630 004e 002B     	 cmp r3,#0
 4631 0050 17D0     	 beq .L329
2139:../SSC/Src/ecatslv.c ****        {
2140:../SSC/Src/ecatslv.c ****            /*Slave is in OP state*/
2141:../SSC/Src/ecatslv.c ****            if(!bDcRunning)
 4632              	 .loc 4 2141 0
 4633 0052 134B     	 ldr r3,.L334+24
 4634 0054 1B78     	 ldrb r3,[r3]
 4635 0056 83F00103 	 eor r3,r3,#1
 4636 005a DBB2     	 uxtb r3,r3
 4637 005c 002B     	 cmp r3,#0
 4638 005e 04D0     	 beq .L333
2142:../SSC/Src/ecatslv.c ****            {
2143:../SSC/Src/ecatslv.c ****                AL_ControlInd(STATE_SAFEOP, ALSTATUSCODE_FATALSYNCERROR);
 4639              	 .loc 4 2143 0
 4640 0060 0420     	 movs r0,#4
 4641 0062 2C21     	 movs r1,#44
 4642 0064 FFF7FEFF 	 bl AL_ControlInd
2144:../SSC/Src/ecatslv.c ****                return;
 4643              	 .loc 4 2144 0
 4644 0068 0BE0     	 b .L329
 4645              	.L333:
2145:../SSC/Src/ecatslv.c ****            }
2146:../SSC/Src/ecatslv.c ****            else if(!bSmSyncSequenceValid)
 4646              	 .loc 4 2146 0
 4647 006a 0E4B     	 ldr r3,.L334+28
 4648 006c 1B78     	 ldrb r3,[r3]
 4649 006e 83F00103 	 eor r3,r3,#1
 4650 0072 DBB2     	 uxtb r3,r3
 4651 0074 002B     	 cmp r3,#0
 4652 0076 04D0     	 beq .L329
2147:../SSC/Src/ecatslv.c ****            {
2148:../SSC/Src/ecatslv.c ****                AL_ControlInd(STATE_SAFEOP, ALSTATUSCODE_SYNCERROR);
 4653              	 .loc 4 2148 0
 4654 0078 0420     	 movs r0,#4
 4655 007a 1A21     	 movs r1,#26
 4656 007c FFF7FEFF 	 bl AL_ControlInd
2149:../SSC/Src/ecatslv.c ****                return;
 4657              	 .loc 4 2149 0
 4658 0080 00BF     	 nop
 4659              	.L329:
2150:../SSC/Src/ecatslv.c ****            }
2151:../SSC/Src/ecatslv.c ****         
2152:../SSC/Src/ecatslv.c ****        }
2153:../SSC/Src/ecatslv.c ****    }
2154:../SSC/Src/ecatslv.c **** }
 4660              	 .loc 4 2154 0
 4661 0082 0837     	 adds r7,r7,#8
 4662              	.LCFI110:
 4663              	 .cfi_def_cfa_offset 8
 4664 0084 BD46     	 mov sp,r7
 4665              	.LCFI111:
 4666              	 .cfi_def_cfa_register 13
 4667              	 
 4668 0086 80BD     	 pop {r7,pc}
 4669              	.L335:
 4670              	 .align 2
 4671              	.L334:
 4672 0088 00000000 	 .word EcatWdValue
 4673 008c 40040154 	 .word 1409352768
 4674 0090 00000000 	 .word nPdOutputSize
 4675 0094 00000000 	 .word bEcatOutputUpdateRunning
 4676 0098 00000000 	 .word bEcatFirstOutputsReceived
 4677 009c 00000000 	 .word bDcSyncActive
 4678 00a0 00000000 	 .word bDcRunning
 4679 00a4 00000000 	 .word bSmSyncSequenceValid
 4680              	 .cfi_endproc
 4681              	.LFE188:
 4683              	 .section .text.ECAT_StateChange,"ax",%progbits
 4684              	 .align 2
 4685              	 .global ECAT_StateChange
 4686              	 .thumb
 4687              	 .thumb_func
 4689              	ECAT_StateChange:
 4690              	.LFB189:
2155:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2156:../SSC/Src/ecatslv.c **** /**
2157:../SSC/Src/ecatslv.c ****  \param    alStatus: requested state
2158:../SSC/Src/ecatslv.c ****  \param    alStatusCode: value for the AL-Status register
2159:../SSC/Src/ecatslv.c ****  
2160:../SSC/Src/ecatslv.c ****  \brief    This function changes the state of the EtherCAT slave if the requested state
2161:../SSC/Src/ecatslv.c ****              is lower than the actual state, otherwise the error condition will be reset.
2162:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2163:../SSC/Src/ecatslv.c **** 
2164:../SSC/Src/ecatslv.c **** void ECAT_StateChange(UINT8 alStatus, UINT16 alStatusCode)
2165:../SSC/Src/ecatslv.c **** {
 4691              	 .loc 4 2165 0
 4692              	 .cfi_startproc
 4693              	 
 4694              	 
 4695 0000 80B5     	 push {r7,lr}
 4696              	.LCFI112:
 4697              	 .cfi_def_cfa_offset 8
 4698              	 .cfi_offset 7,-8
 4699              	 .cfi_offset 14,-4
 4700 0002 84B0     	 sub sp,sp,#16
 4701              	.LCFI113:
 4702              	 .cfi_def_cfa_offset 24
 4703 0004 00AF     	 add r7,sp,#0
 4704              	.LCFI114:
 4705              	 .cfi_def_cfa_register 7
 4706 0006 0346     	 mov r3,r0
 4707 0008 0A46     	 mov r2,r1
 4708 000a FB71     	 strb r3,[r7,#7]
 4709 000c 1346     	 mov r3,r2
 4710 000e BB80     	 strh r3,[r7,#4]
2166:../SSC/Src/ecatslv.c ****     UINT8 Status = alStatus;
 4711              	 .loc 4 2166 0
 4712 0010 FB79     	 ldrb r3,[r7,#7]
 4713 0012 FB73     	 strb r3,[r7,#15]
2167:../SSC/Src/ecatslv.c **** 
2168:../SSC/Src/ecatslv.c ****     if(bEcatWaitForAlControlRes)
 4714              	 .loc 4 2168 0
 4715 0014 554B     	 ldr r3,.L361
 4716 0016 1B78     	 ldrb r3,[r3]
 4717 0018 002B     	 cmp r3,#0
 4718 001a 6CD0     	 beq .L337
2169:../SSC/Src/ecatslv.c ****     {
2170:../SSC/Src/ecatslv.c ****         /*State transition is pending*/
2171:../SSC/Src/ecatslv.c **** 
2172:../SSC/Src/ecatslv.c ****         if(bApplEsmPending)
 4719              	 .loc 4 2172 0
 4720 001c 544B     	 ldr r3,.L361+4
 4721 001e 1B78     	 ldrb r3,[r3]
 4722 0020 002B     	 cmp r3,#0
 4723 0022 0DD0     	 beq .L338
2173:../SSC/Src/ecatslv.c ****         {
2174:../SSC/Src/ecatslv.c ****             /*The generic stack has currently control of the state transition.
2175:../SSC/Src/ecatslv.c ****             In case on an local error force ESM timeout*/
2176:../SSC/Src/ecatslv.c ****             if(alStatusCode != 0)
 4724              	 .loc 4 2176 0
 4725 0024 BB88     	 ldrh r3,[r7,#4]
 4726 0026 002B     	 cmp r3,#0
 4727 0028 00F09D80 	 beq .L336
2177:../SSC/Src/ecatslv.c ****             {
2178:../SSC/Src/ecatslv.c ****                 bLocalErrorFlag = TRUE;
 4728              	 .loc 4 2178 0
 4729 002c 514B     	 ldr r3,.L361+8
 4730 002e 0122     	 movs r2,#1
 4731 0030 1A70     	 strb r2,[r3]
2179:../SSC/Src/ecatslv.c ****                 u16LocalErrorCode = alStatusCode;
 4732              	 .loc 4 2179 0
 4733 0032 514A     	 ldr r2,.L361+12
 4734 0034 BB88     	 ldrh r3,[r7,#4]
 4735 0036 1380     	 strh r3,[r2]
2180:../SSC/Src/ecatslv.c ****                 EsmTimeoutCounter = 0;
 4736              	 .loc 4 2180 0
 4737 0038 504B     	 ldr r3,.L361+16
 4738 003a 0022     	 movs r2,#0
 4739 003c 1A80     	 strh r2,[r3]
 4740 003e 92E0     	 b .L336
 4741              	.L338:
2181:../SSC/Src/ecatslv.c ****             }
2182:../SSC/Src/ecatslv.c ****         }
2183:../SSC/Src/ecatslv.c ****         else
2184:../SSC/Src/ecatslv.c ****         {
2185:../SSC/Src/ecatslv.c ****             /*complete the state transition*/
2186:../SSC/Src/ecatslv.c **** 
2187:../SSC/Src/ecatslv.c ****             if(alStatusCode != 0)
 4742              	 .loc 4 2187 0
 4743 0040 BB88     	 ldrh r3,[r7,#4]
 4744 0042 002B     	 cmp r3,#0
 4745 0044 27D0     	 beq .L341
2188:../SSC/Src/ecatslv.c ****             {
2189:../SSC/Src/ecatslv.c ****                 bLocalErrorFlag = TRUE;
 4746              	 .loc 4 2189 0
 4747 0046 4B4B     	 ldr r3,.L361+8
 4748 0048 0122     	 movs r2,#1
 4749 004a 1A70     	 strb r2,[r3]
2190:../SSC/Src/ecatslv.c ****                 u16LocalErrorCode = alStatusCode;
 4750              	 .loc 4 2190 0
 4751 004c 4A4A     	 ldr r2,.L361+12
 4752 004e BB88     	 ldrh r3,[r7,#4]
 4753 0050 1380     	 strh r3,[r2]
2191:../SSC/Src/ecatslv.c **** 
2192:../SSC/Src/ecatslv.c ****                 /*State transition failed due to local application reasons*/
2193:../SSC/Src/ecatslv.c ****                 switch(nEcatStateTrans)
 4754              	 .loc 4 2193 0
 4755 0052 4B4B     	 ldr r3,.L361+20
 4756 0054 1B88     	 ldrh r3,[r3]
 4757 0056 242B     	 cmp r3,#36
 4758 0058 0DD0     	 beq .L343
 4759 005a 242B     	 cmp r3,#36
 4760 005c 03DC     	 bgt .L344
 4761 005e 123B     	 subs r3,r3,#18
 4762 0060 012B     	 cmp r3,#1
 4763 0062 12D8     	 bhi .L342
 4764 0064 02E0     	 b .L359
 4765              	.L344:
 4766 0066 482B     	 cmp r3,#72
 4767 0068 0AD0     	 beq .L346
 4768 006a 0EE0     	 b .L342
 4769              	.L359:
2194:../SSC/Src/ecatslv.c ****                 {
2195:../SSC/Src/ecatslv.c ****                     case INIT_2_PREOP:
2196:../SSC/Src/ecatslv.c ****                     case INIT_2_BOOT:
2197:../SSC/Src/ecatslv.c ****                           APPL_StopMailboxHandler();
 4770              	 .loc 4 2197 0
 4771 006c FFF7FEFF 	 bl APPL_StopMailboxHandler
2198:../SSC/Src/ecatslv.c ****                           MBX_StopMailboxHandler();
 4772              	 .loc 4 2198 0
 4773 0070 FFF7FEFF 	 bl MBX_StopMailboxHandler
2199:../SSC/Src/ecatslv.c ****                     break;
 4774              	 .loc 4 2199 0
 4775 0074 09E0     	 b .L342
 4776              	.L343:
2200:../SSC/Src/ecatslv.c ****                     case PREOP_2_SAFEOP:
2201:../SSC/Src/ecatslv.c ****                           APPL_StopInputHandler();
 4777              	 .loc 4 2201 0
 4778 0076 FFF7FEFF 	 bl APPL_StopInputHandler
2202:../SSC/Src/ecatslv.c ****                           StopInputHandler();
 4779              	 .loc 4 2202 0
 4780 007a FFF7FEFF 	 bl StopInputHandler
2203:../SSC/Src/ecatslv.c ****                     break;
 4781              	 .loc 4 2203 0
 4782 007e 04E0     	 b .L342
 4783              	.L346:
2204:../SSC/Src/ecatslv.c ****                     case SAFEOP_2_OP:
2205:../SSC/Src/ecatslv.c ****                           APPL_StopOutputHandler();
 4784              	 .loc 4 2205 0
 4785 0080 FFF7FEFF 	 bl APPL_StopOutputHandler
2206:../SSC/Src/ecatslv.c ****                           StopOutputHandler();
 4786              	 .loc 4 2206 0
 4787 0084 FFF7FEFF 	 bl StopOutputHandler
2207:../SSC/Src/ecatslv.c ****                     break;
 4788              	 .loc 4 2207 0
 4789 0088 00BF     	 nop
 4790              	.L342:
2208:../SSC/Src/ecatslv.c ****                 }
2209:../SSC/Src/ecatslv.c **** 
2210:../SSC/Src/ecatslv.c ****                 /*In case of a failed state transition the */
2211:../SSC/Src/ecatslv.c ****                 Status =  (UINT8)(nEcatStateTrans >> 4);
 4791              	 .loc 4 2211 0
 4792 008a 3D4B     	 ldr r3,.L361+20
 4793 008c 1B88     	 ldrh r3,[r3]
 4794 008e 1B09     	 lsrs r3,r3,#4
 4795 0090 9BB2     	 uxth r3,r3
 4796 0092 FB73     	 strb r3,[r7,#15]
 4797 0094 1EE0     	 b .L347
 4798              	.L341:
2212:../SSC/Src/ecatslv.c ****             }
2213:../SSC/Src/ecatslv.c ****             else
2214:../SSC/Src/ecatslv.c ****             {
2215:../SSC/Src/ecatslv.c ****                 /*State transition succeed*/
2216:../SSC/Src/ecatslv.c ****                  
2217:../SSC/Src/ecatslv.c ****                 switch(nEcatStateTrans)
 4799              	 .loc 4 2217 0
 4800 0096 3A4B     	 ldr r3,.L361+20
 4801 0098 1B88     	 ldrh r3,[r3]
 4802 009a 242B     	 cmp r3,#36
 4803 009c 0CD0     	 beq .L349
 4804 009e 242B     	 cmp r3,#36
 4805 00a0 03DC     	 bgt .L350
 4806 00a2 123B     	 subs r3,r3,#18
 4807 00a4 012B     	 cmp r3,#1
 4808 00a6 0FD8     	 bhi .L348
 4809 00a8 02E0     	 b .L360
 4810              	.L350:
 4811 00aa 482B     	 cmp r3,#72
 4812 00ac 08D0     	 beq .L352
 4813 00ae 0BE0     	 b .L348
 4814              	.L360:
2218:../SSC/Src/ecatslv.c ****                 {
2219:../SSC/Src/ecatslv.c ****                     case INIT_2_PREOP:
2220:../SSC/Src/ecatslv.c ****                     case INIT_2_BOOT:
2221:../SSC/Src/ecatslv.c ****                         bMbxRunning = TRUE;
 4815              	 .loc 4 2221 0
 4816 00b0 344B     	 ldr r3,.L361+24
 4817 00b2 0122     	 movs r2,#1
 4818 00b4 1A70     	 strb r2,[r3]
2222:../SSC/Src/ecatslv.c ****                     break;
 4819              	 .loc 4 2222 0
 4820 00b6 07E0     	 b .L348
 4821              	.L349:
2223:../SSC/Src/ecatslv.c ****                     case PREOP_2_SAFEOP:
2224:../SSC/Src/ecatslv.c ****                         bEcatInputUpdateRunning = TRUE;
 4822              	 .loc 4 2224 0
 4823 00b8 334B     	 ldr r3,.L361+28
 4824 00ba 0122     	 movs r2,#1
 4825 00bc 1A70     	 strb r2,[r3]
2225:../SSC/Src/ecatslv.c ****                     break;
 4826              	 .loc 4 2225 0
 4827 00be 03E0     	 b .L348
 4828              	.L352:
2226:../SSC/Src/ecatslv.c ****                     case SAFEOP_2_OP:
2227:../SSC/Src/ecatslv.c ****                           bEcatOutputUpdateRunning = TRUE;
 4829              	 .loc 4 2227 0
 4830 00c0 324B     	 ldr r3,.L361+32
 4831 00c2 0122     	 movs r2,#1
 4832 00c4 1A70     	 strb r2,[r3]
2228:../SSC/Src/ecatslv.c ****                     break;
 4833              	 .loc 4 2228 0
 4834 00c6 00BF     	 nop
 4835              	.L348:
2229:../SSC/Src/ecatslv.c ****                 }
2230:../SSC/Src/ecatslv.c **** 
2231:../SSC/Src/ecatslv.c ****                 /*In case of a failed state transition the */
2232:../SSC/Src/ecatslv.c ****                 Status =  (UINT8)(nEcatStateTrans & STATE_MASK);
 4836              	 .loc 4 2232 0
 4837 00c8 2D4B     	 ldr r3,.L361+20
 4838 00ca 1B88     	 ldrh r3,[r3]
 4839 00cc DBB2     	 uxtb r3,r3
 4840 00ce 03F00F03 	 and r3,r3,#15
 4841 00d2 FB73     	 strb r3,[r7,#15]
 4842              	.L347:
2233:../SSC/Src/ecatslv.c ****             }
2234:../SSC/Src/ecatslv.c ****                 /*Pending state transition finished => write AL Status and AL Status Code*/
2235:../SSC/Src/ecatslv.c ****                 bEcatWaitForAlControlRes = FALSE;
 4843              	 .loc 4 2235 0
 4844 00d4 254B     	 ldr r3,.L361
 4845 00d6 0022     	 movs r2,#0
 4846 00d8 1A70     	 strb r2,[r3]
2236:../SSC/Src/ecatslv.c **** 
2237:../SSC/Src/ecatslv.c ****                 if(alStatusCode != 0)
 4847              	 .loc 4 2237 0
 4848 00da BB88     	 ldrh r3,[r7,#4]
 4849 00dc 002B     	 cmp r3,#0
 4850 00de 03D0     	 beq .L353
2238:../SSC/Src/ecatslv.c ****                     Status |= STATE_CHANGE;
 4851              	 .loc 4 2238 0
 4852 00e0 FB7B     	 ldrb r3,[r7,#15]
 4853 00e2 43F01003 	 orr r3,r3,#16
 4854 00e6 FB73     	 strb r3,[r7,#15]
 4855              	.L353:
2239:../SSC/Src/ecatslv.c **** 
2240:../SSC/Src/ecatslv.c ****                 SetALStatus(Status,alStatusCode);
 4856              	 .loc 4 2240 0
 4857 00e8 FA7B     	 ldrb r2,[r7,#15]
 4858 00ea BB88     	 ldrh r3,[r7,#4]
 4859 00ec 1046     	 mov r0,r2
 4860 00ee 1946     	 mov r1,r3
 4861 00f0 FFF7FEFF 	 bl SetALStatus
 4862 00f4 37E0     	 b .L336
 4863              	.L337:
2241:../SSC/Src/ecatslv.c **** 
2242:../SSC/Src/ecatslv.c ****         }// state transition need to be completed by the local application
2243:../SSC/Src/ecatslv.c ****     }//State transition pending
2244:../SSC/Src/ecatslv.c ****     else
2245:../SSC/Src/ecatslv.c ****     {
2246:../SSC/Src/ecatslv.c ****         if ( alStatusCode != 0 )
 4864              	 .loc 4 2246 0
 4865 00f6 BB88     	 ldrh r3,[r7,#4]
 4866 00f8 002B     	 cmp r3,#0
 4867 00fa 15D0     	 beq .L355
2247:../SSC/Src/ecatslv.c ****         {
2248:../SSC/Src/ecatslv.c ****             /* Local error has happened, we change the state if necessary */
2249:../SSC/Src/ecatslv.c ****             bLocalErrorFlag = TRUE;
 4868              	 .loc 4 2249 0
 4869 00fc 1D4B     	 ldr r3,.L361+8
 4870 00fe 0122     	 movs r2,#1
 4871 0100 1A70     	 strb r2,[r3]
2250:../SSC/Src/ecatslv.c ****             u16LocalErrorCode = alStatusCode;
 4872              	 .loc 4 2250 0
 4873 0102 1D4A     	 ldr r2,.L361+12
 4874 0104 BB88     	 ldrh r3,[r7,#4]
 4875 0106 1380     	 strh r3,[r2]
2251:../SSC/Src/ecatslv.c ****     
2252:../SSC/Src/ecatslv.c ****             if ( (alStatus & STATE_MASK) < (nAlStatus & STATE_MASK) )
 4876              	 .loc 4 2252 0
 4877 0108 FB79     	 ldrb r3,[r7,#7]
 4878 010a 03F00F02 	 and r2,r3,#15
 4879 010e 204B     	 ldr r3,.L361+36
 4880 0110 1B78     	 ldrb r3,[r3]
 4881 0112 03F00F03 	 and r3,r3,#15
 4882 0116 9A42     	 cmp r2,r3
 4883 0118 25DA     	 bge .L336
2253:../SSC/Src/ecatslv.c ****             {
2254:../SSC/Src/ecatslv.c ****                 AL_ControlInd(alStatus, alStatusCode);
 4884              	 .loc 4 2254 0
 4885 011a FA79     	 ldrb r2,[r7,#7]
 4886 011c BB88     	 ldrh r3,[r7,#4]
 4887 011e 1046     	 mov r0,r2
 4888 0120 1946     	 mov r1,r3
 4889 0122 FFF7FEFF 	 bl AL_ControlInd
 4890 0126 1EE0     	 b .L336
 4891              	.L355:
2255:../SSC/Src/ecatslv.c ****             }
2256:../SSC/Src/ecatslv.c ****         }
2257:../SSC/Src/ecatslv.c ****         else if (bLocalErrorFlag)
 4892              	 .loc 4 2257 0
 4893 0128 124B     	 ldr r3,.L361+8
 4894 012a 1B78     	 ldrb r3,[r3]
 4895 012c 002B     	 cmp r3,#0
 4896 012e 1AD0     	 beq .L336
2258:../SSC/Src/ecatslv.c ****         {
2259:../SSC/Src/ecatslv.c ****             /*a local error is gone */
2260:../SSC/Src/ecatslv.c ****             if ( (nAlStatus & STATE_MASK) == (STATE_SAFEOP | STATE_OP) )
 4897              	 .loc 4 2260 0
 4898 0130 174B     	 ldr r3,.L361+36
 4899 0132 1B78     	 ldrb r3,[r3]
 4900 0134 03F00F03 	 and r3,r3,#15
 4901 0138 0C2B     	 cmp r3,#12
 4902 013a 0ED1     	 bne .L357
2261:../SSC/Src/ecatslv.c ****             {
2262:../SSC/Src/ecatslv.c ****                 if(nPdOutputSize > 0)
 4903              	 .loc 4 2262 0
 4904 013c 154B     	 ldr r3,.L361+40
 4905 013e 1B88     	 ldrh r3,[r3]
 4906 0140 002B     	 cmp r3,#0
 4907 0142 03D0     	 beq .L358
2263:../SSC/Src/ecatslv.c ****                 {
2264:../SSC/Src/ecatslv.c ****                     /* we have to enable the output process data SyncManger (default: SM2),
2265:../SSC/Src/ecatslv.c ****                     because it was disabled when switching back to SAFE-OP */
2266:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
2267:../SSC/Src/ecatslv.c ****                     EnableSyncManChannel(PROCESS_DATA_OUT);
 4908              	 .loc 4 2267 0
 4909 0144 0220     	 movs r0,#2
 4910 0146 FFF7FEFF 	 bl EnableSyncManChannel
 4911 014a 06E0     	 b .L357
 4912              	.L358:
2268:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
2269:../SSC/Src/ecatslv.c ****                 }
2270:../SSC/Src/ecatslv.c ****                 else 
2271:../SSC/Src/ecatslv.c ****                     if (nPdInputSize > 0)
 4913              	 .loc 4 2271 0
 4914 014c 124B     	 ldr r3,.L361+44
 4915 014e 1B88     	 ldrh r3,[r3]
 4916 0150 002B     	 cmp r3,#0
 4917 0152 02D0     	 beq .L357
2272:../SSC/Src/ecatslv.c ****                 {
2273:../SSC/Src/ecatslv.c ****                     /* we have to enable the input process data SyncManger (default: SM3),
2274:../SSC/Src/ecatslv.c ****                     because it was disabled when switching back to SAFE-OP */
2275:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
2276:../SSC/Src/ecatslv.c ****                     EnableSyncManChannel(PROCESS_DATA_IN);
 4918              	 .loc 4 2276 0
 4919 0154 0320     	 movs r0,#3
 4920 0156 FFF7FEFF 	 bl EnableSyncManChannel
 4921              	.L357:
2277:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
2278:../SSC/Src/ecatslv.c ****                 }
2279:../SSC/Src/ecatslv.c ****             }
2280:../SSC/Src/ecatslv.c ****             bLocalErrorFlag = FALSE;
 4922              	 .loc 4 2280 0
 4923 015a 064B     	 ldr r3,.L361+8
 4924 015c 0022     	 movs r2,#0
 4925 015e 1A70     	 strb r2,[r3]
2281:../SSC/Src/ecatslv.c ****             u16LocalErrorCode = 0x00;
 4926              	 .loc 4 2281 0
 4927 0160 054B     	 ldr r3,.L361+12
 4928 0162 0022     	 movs r2,#0
 4929 0164 1A80     	 strh r2,[r3]
 4930              	.L336:
2282:../SSC/Src/ecatslv.c ****         }
2283:../SSC/Src/ecatslv.c ****     }
2284:../SSC/Src/ecatslv.c **** }
 4931              	 .loc 4 2284 0
 4932 0166 1037     	 adds r7,r7,#16
 4933              	.LCFI115:
 4934              	 .cfi_def_cfa_offset 8
 4935 0168 BD46     	 mov sp,r7
 4936              	.LCFI116:
 4937              	 .cfi_def_cfa_register 13
 4938              	 
 4939 016a 80BD     	 pop {r7,pc}
 4940              	.L362:
 4941              	 .align 2
 4942              	.L361:
 4943 016c 00000000 	 .word bEcatWaitForAlControlRes
 4944 0170 00000000 	 .word bApplEsmPending
 4945 0174 00000000 	 .word bLocalErrorFlag
 4946 0178 00000000 	 .word u16LocalErrorCode
 4947 017c 00000000 	 .word EsmTimeoutCounter
 4948 0180 00000000 	 .word nEcatStateTrans
 4949 0184 00000000 	 .word bMbxRunning
 4950 0188 00000000 	 .word bEcatInputUpdateRunning
 4951 018c 00000000 	 .word bEcatOutputUpdateRunning
 4952 0190 00000000 	 .word nAlStatus
 4953 0194 00000000 	 .word nPdOutputSize
 4954 0198 00000000 	 .word nPdInputSize
 4955              	 .cfi_endproc
 4956              	.LFE189:
 4958              	 .section .text.ECAT_Init,"ax",%progbits
 4959              	 .align 2
 4960              	 .global ECAT_Init
 4961              	 .thumb
 4962              	 .thumb_func
 4964              	ECAT_Init:
 4965              	.LFB190:
2285:../SSC/Src/ecatslv.c **** 
2286:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2287:../SSC/Src/ecatslv.c **** /**
2288:../SSC/Src/ecatslv.c **** 
2289:../SSC/Src/ecatslv.c ****  \brief    This function initialize the EtherCAT Slave Interface.
2290:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2291:../SSC/Src/ecatslv.c **** 
2292:../SSC/Src/ecatslv.c **** void ECAT_Init(void)
2293:../SSC/Src/ecatslv.c **** {
 4966              	 .loc 4 2293 0
 4967              	 .cfi_startproc
 4968              	 
 4969              	 
 4970 0000 80B5     	 push {r7,lr}
 4971              	.LCFI117:
 4972              	 .cfi_def_cfa_offset 8
 4973              	 .cfi_offset 7,-8
 4974              	 .cfi_offset 14,-4
 4975 0002 82B0     	 sub sp,sp,#8
 4976              	.LCFI118:
 4977              	 .cfi_def_cfa_offset 16
 4978 0004 00AF     	 add r7,sp,#0
 4979              	.LCFI119:
 4980              	 .cfi_def_cfa_register 7
2294:../SSC/Src/ecatslv.c ****     UINT8 i;
2295:../SSC/Src/ecatslv.c **** 
2296:../SSC/Src/ecatslv.c ****     /*Get Maximum Number of SyncManagers and supported DPRAM size*/
2297:../SSC/Src/ecatslv.c ****     HW_EscReadByte(nMaxSyncMan, ESC_SM_CHANNELS_OFFSET);
 4981              	 .loc 4 2297 0
 4982 0006 384B     	 ldr r3,.L366
 4983 0008 1B78     	 ldrb r3,[r3]
 4984 000a DAB2     	 uxtb r2,r3
 4985 000c 374B     	 ldr r3,.L366+4
 4986 000e 1A70     	 strb r2,[r3]
2298:../SSC/Src/ecatslv.c **** 
2299:../SSC/Src/ecatslv.c ****     HW_EscReadWord(nMaxEscAddress, ESC_DPRAM_SIZE_OFFSET);
 4987              	 .loc 4 2299 0
 4988 0010 374B     	 ldr r3,.L366+8
 4989 0012 1B88     	 ldrh r3,[r3]
 4990 0014 9AB2     	 uxth r2,r3
 4991 0016 374B     	 ldr r3,.L366+12
 4992 0018 1A80     	 strh r2,[r3]
2300:../SSC/Src/ecatslv.c ****     //get max address (register + DPRAM size in Byte (in the register it is stored in KB))
2301:../SSC/Src/ecatslv.c ****     /* ECATCHANGE_START(V5.11) ESC1*/
2302:../SSC/Src/ecatslv.c ****     nMaxEscAddress = (nMaxEscAddress << 10) + 0xFFF;
 4993              	 .loc 4 2302 0
 4994 001a 364B     	 ldr r3,.L366+12
 4995 001c 1B88     	 ldrh r3,[r3]
 4996 001e 9B02     	 lsls r3,r3,#10
 4997 0020 9BB2     	 uxth r3,r3
 4998 0022 03F6FF73 	 addw r3,r3,#4095
 4999 0026 9AB2     	 uxth r2,r3
 5000 0028 324B     	 ldr r3,.L366+12
 5001 002a 1A80     	 strh r2,[r3]
2303:../SSC/Src/ecatslv.c ****     /* ECATCHANGE_END(V5.11) ESC1*/
2304:../SSC/Src/ecatslv.c **** 
2305:../SSC/Src/ecatslv.c ****     /* Get EEPROM loaded information */
2306:../SSC/Src/ecatslv.c ****     UpdateEEPROMLoadedState();
 5002              	 .loc 4 2306 0
 5003 002c FFF7FEFF 	 bl UpdateEEPROMLoadedState
2307:../SSC/Src/ecatslv.c **** 
2308:../SSC/Src/ecatslv.c ****     /* disable all Sync Manager channels */
2309:../SSC/Src/ecatslv.c ****     for (i = 0; i < nMaxSyncMan; i++)
 5004              	 .loc 4 2309 0
 5005 0030 0023     	 movs r3,#0
 5006 0032 FB71     	 strb r3,[r7,#7]
 5007 0034 06E0     	 b .L364
 5008              	.L365:
2310:../SSC/Src/ecatslv.c ****     {
2311:../SSC/Src/ecatslv.c **** /*ECATCHANGE_START(V5.11) HW1*/
2312:../SSC/Src/ecatslv.c ****         DisableSyncManChannel(i);
 5009              	 .loc 4 2312 0 discriminator 3
 5010 0036 FB79     	 ldrb r3,[r7,#7]
 5011 0038 1846     	 mov r0,r3
 5012 003a FFF7FEFF 	 bl DisableSyncManChannel
2309:../SSC/Src/ecatslv.c ****     {
 5013              	 .loc 4 2309 0 discriminator 3
 5014 003e FB79     	 ldrb r3,[r7,#7]
 5015 0040 0133     	 adds r3,r3,#1
 5016 0042 FB71     	 strb r3,[r7,#7]
 5017              	.L364:
2309:../SSC/Src/ecatslv.c ****     {
 5018              	 .loc 4 2309 0 is_stmt 0 discriminator 1
 5019 0044 294B     	 ldr r3,.L366+4
 5020 0046 1B78     	 ldrb r3,[r3]
 5021 0048 FA79     	 ldrb r2,[r7,#7]
 5022 004a 9A42     	 cmp r2,r3
 5023 004c F3D3     	 bcc .L365
2313:../SSC/Src/ecatslv.c **** /*ECATCHANGE_END(V5.11) HW1*/
2314:../SSC/Src/ecatslv.c ****     }
2315:../SSC/Src/ecatslv.c **** 
2316:../SSC/Src/ecatslv.c ****     /* initialize the mailbox handler */
2317:../SSC/Src/ecatslv.c ****     MBX_Init();
 5024              	 .loc 4 2317 0 is_stmt 1
 5025 004e FFF7FEFF 	 bl MBX_Init
2318:../SSC/Src/ecatslv.c **** 
2319:../SSC/Src/ecatslv.c ****     /* initialize variables */
2320:../SSC/Src/ecatslv.c ****     bApplEsmPending = FALSE;
 5026              	 .loc 4 2320 0
 5027 0052 294B     	 ldr r3,.L366+16
 5028 0054 0022     	 movs r2,#0
 5029 0056 1A70     	 strb r2,[r3]
2321:../SSC/Src/ecatslv.c ****     bEcatWaitForAlControlRes = FALSE;
 5030              	 .loc 4 2321 0
 5031 0058 284B     	 ldr r3,.L366+20
 5032 005a 0022     	 movs r2,#0
 5033 005c 1A70     	 strb r2,[r3]
2322:../SSC/Src/ecatslv.c ****     bEcatFirstOutputsReceived = FALSE;
 5034              	 .loc 4 2322 0
 5035 005e 284B     	 ldr r3,.L366+24
 5036 0060 0022     	 movs r2,#0
 5037 0062 1A70     	 strb r2,[r3]
2323:../SSC/Src/ecatslv.c ****      bEcatOutputUpdateRunning = FALSE;
 5038              	 .loc 4 2323 0
 5039 0064 274B     	 ldr r3,.L366+28
 5040 0066 0022     	 movs r2,#0
 5041 0068 1A70     	 strb r2,[r3]
2324:../SSC/Src/ecatslv.c ****      bEcatInputUpdateRunning = FALSE;
 5042              	 .loc 4 2324 0
 5043 006a 274B     	 ldr r3,.L366+32
 5044 006c 0022     	 movs r2,#0
 5045 006e 1A70     	 strb r2,[r3]
2325:../SSC/Src/ecatslv.c ****     bWdTrigger = FALSE;
 5046              	 .loc 4 2325 0
 5047 0070 264B     	 ldr r3,.L366+36
 5048 0072 0022     	 movs r2,#0
 5049 0074 1A70     	 strb r2,[r3]
2326:../SSC/Src/ecatslv.c ****     EcatWdValue = 0;
 5050              	 .loc 4 2326 0
 5051 0076 264B     	 ldr r3,.L366+40
 5052 0078 0022     	 movs r2,#0
 5053 007a 1A80     	 strh r2,[r3]
2327:../SSC/Src/ecatslv.c ****     Sync0WdCounter = 0;
 5054              	 .loc 4 2327 0
 5055 007c 254B     	 ldr r3,.L366+44
 5056 007e 0022     	 movs r2,#0
 5057 0080 1A80     	 strh r2,[r3]
2328:../SSC/Src/ecatslv.c ****     Sync0WdValue = 0;
 5058              	 .loc 4 2328 0
 5059 0082 254B     	 ldr r3,.L366+48
 5060 0084 0022     	 movs r2,#0
 5061 0086 1A80     	 strh r2,[r3]
2329:../SSC/Src/ecatslv.c ****     Sync1WdCounter = 0;
 5062              	 .loc 4 2329 0
 5063 0088 244B     	 ldr r3,.L366+52
 5064 008a 0022     	 movs r2,#0
 5065 008c 1A80     	 strh r2,[r3]
2330:../SSC/Src/ecatslv.c ****     Sync1WdValue = 0;
 5066              	 .loc 4 2330 0
 5067 008e 244B     	 ldr r3,.L366+56
 5068 0090 0022     	 movs r2,#0
 5069 0092 1A80     	 strh r2,[r3]
2331:../SSC/Src/ecatslv.c ****     bDcSyncActive = FALSE;
 5070              	 .loc 4 2331 0
 5071 0094 234B     	 ldr r3,.L366+60
 5072 0096 0022     	 movs r2,#0
 5073 0098 1A70     	 strb r2,[r3]
2332:../SSC/Src/ecatslv.c ****     bLocalErrorFlag = FALSE;
 5074              	 .loc 4 2332 0
 5075 009a 234B     	 ldr r3,.L366+64
 5076 009c 0022     	 movs r2,#0
 5077 009e 1A70     	 strb r2,[r3]
2333:../SSC/Src/ecatslv.c ****     u16LocalErrorCode = 0x00;
 5078              	 .loc 4 2333 0
 5079 00a0 224B     	 ldr r3,.L366+68
 5080 00a2 0022     	 movs r2,#0
 5081 00a4 1A80     	 strh r2,[r3]
2334:../SSC/Src/ecatslv.c **** 
2335:../SSC/Src/ecatslv.c ****     u16ALEventMask = 0;
 5082              	 .loc 4 2335 0
 5083 00a6 224B     	 ldr r3,.L366+72
 5084 00a8 0022     	 movs r2,#0
 5085 00aa 1A80     	 strh r2,[r3]
2336:../SSC/Src/ecatslv.c ****     nPdOutputSize = 0;
 5086              	 .loc 4 2336 0
 5087 00ac 214B     	 ldr r3,.L366+76
 5088 00ae 0022     	 movs r2,#0
 5089 00b0 1A80     	 strh r2,[r3]
2337:../SSC/Src/ecatslv.c ****     nPdInputSize = 0;
 5090              	 .loc 4 2337 0
 5091 00b2 214B     	 ldr r3,.L366+80
 5092 00b4 0022     	 movs r2,#0
 5093 00b6 1A80     	 strh r2,[r3]
2338:../SSC/Src/ecatslv.c **** 
2339:../SSC/Src/ecatslv.c ****     /* initialize the AL Status register */
2340:../SSC/Src/ecatslv.c ****     nAlStatus    = STATE_INIT;
 5094              	 .loc 4 2340 0
 5095 00b8 204B     	 ldr r3,.L366+84
 5096 00ba 0122     	 movs r2,#1
 5097 00bc 1A70     	 strb r2,[r3]
2341:../SSC/Src/ecatslv.c ****     SetALStatus(nAlStatus, 0);
 5098              	 .loc 4 2341 0
 5099 00be 1F4B     	 ldr r3,.L366+84
 5100 00c0 1B78     	 ldrb r3,[r3]
 5101 00c2 1846     	 mov r0,r3
 5102 00c4 0021     	 movs r1,#0
 5103 00c6 FFF7FEFF 	 bl SetALStatus
2342:../SSC/Src/ecatslv.c ****     nEcatStateTrans = 0;
 5104              	 .loc 4 2342 0
 5105 00ca 1D4B     	 ldr r3,.L366+88
 5106 00cc 0022     	 movs r2,#0
 5107 00ce 1A80     	 strh r2,[r3]
2343:../SSC/Src/ecatslv.c ****     u8EcatErrorLed = LED_OFF;
 5108              	 .loc 4 2343 0
 5109 00d0 1C4B     	 ldr r3,.L366+92
 5110 00d2 0022     	 movs r2,#0
 5111 00d4 1A70     	 strb r2,[r3]
2344:../SSC/Src/ecatslv.c **** 
2345:../SSC/Src/ecatslv.c **** /* ECATCHANGE_START(V5.11) ECAT5*/
2346:../SSC/Src/ecatslv.c ****     bEscIntEnabled = FALSE;
 5112              	 .loc 4 2346 0
 5113 00d6 1C4B     	 ldr r3,.L366+96
 5114 00d8 0022     	 movs r2,#0
 5115 00da 1A70     	 strb r2,[r3]
2347:../SSC/Src/ecatslv.c **** /* ECATCHANGE_END(V5.11) ECAT5*/
2348:../SSC/Src/ecatslv.c **** 
2349:../SSC/Src/ecatslv.c ****     /* initialize the COE part */
2350:../SSC/Src/ecatslv.c ****     COE_Init();
 5116              	 .loc 4 2350 0
 5117 00dc FFF7FEFF 	 bl COE_Init
2351:../SSC/Src/ecatslv.c **** }
 5118              	 .loc 4 2351 0
 5119 00e0 0837     	 adds r7,r7,#8
 5120              	.LCFI120:
 5121              	 .cfi_def_cfa_offset 8
 5122 00e2 BD46     	 mov sp,r7
 5123              	.LCFI121:
 5124              	 .cfi_def_cfa_register 13
 5125              	 
 5126 00e4 80BD     	 pop {r7,pc}
 5127              	.L367:
 5128 00e6 00BF     	 .align 2
 5129              	.L366:
 5130 00e8 05000154 	 .word 1409351685
 5131 00ec 00000000 	 .word nMaxSyncMan
 5132 00f0 06000154 	 .word 1409351686
 5133 00f4 00000000 	 .word nMaxEscAddress
 5134 00f8 00000000 	 .word bApplEsmPending
 5135 00fc 00000000 	 .word bEcatWaitForAlControlRes
 5136 0100 00000000 	 .word bEcatFirstOutputsReceived
 5137 0104 00000000 	 .word bEcatOutputUpdateRunning
 5138 0108 00000000 	 .word bEcatInputUpdateRunning
 5139 010c 00000000 	 .word bWdTrigger
 5140 0110 00000000 	 .word EcatWdValue
 5141 0114 00000000 	 .word Sync0WdCounter
 5142 0118 00000000 	 .word Sync0WdValue
 5143 011c 00000000 	 .word Sync1WdCounter
 5144 0120 00000000 	 .word Sync1WdValue
 5145 0124 00000000 	 .word bDcSyncActive
 5146 0128 00000000 	 .word bLocalErrorFlag
 5147 012c 00000000 	 .word u16LocalErrorCode
 5148 0130 00000000 	 .word u16ALEventMask
 5149 0134 00000000 	 .word nPdOutputSize
 5150 0138 00000000 	 .word nPdInputSize
 5151 013c 00000000 	 .word nAlStatus
 5152 0140 00000000 	 .word nEcatStateTrans
 5153 0144 00000000 	 .word u8EcatErrorLed
 5154 0148 00000000 	 .word bEscIntEnabled
 5155              	 .cfi_endproc
 5156              	.LFE190:
 5158              	 .section .text.ECAT_Main,"ax",%progbits
 5159              	 .align 2
 5160              	 .global ECAT_Main
 5161              	 .thumb
 5162              	 .thumb_func
 5164              	ECAT_Main:
 5165              	.LFB191:
2352:../SSC/Src/ecatslv.c **** 
2353:../SSC/Src/ecatslv.c **** /////////////////////////////////////////////////////////////////////////////////////////
2354:../SSC/Src/ecatslv.c **** /**
2355:../SSC/Src/ecatslv.c ****  \brief        This function has to be called cyclically.
2356:../SSC/Src/ecatslv.c **** *////////////////////////////////////////////////////////////////////////////////////////
2357:../SSC/Src/ecatslv.c **** 
2358:../SSC/Src/ecatslv.c **** void ECAT_Main(void)
2359:../SSC/Src/ecatslv.c **** {
 5166              	 .loc 4 2359 0
 5167              	 .cfi_startproc
 5168              	 
 5169              	 
 5170 0000 80B5     	 push {r7,lr}
 5171              	.LCFI122:
 5172              	 .cfi_def_cfa_offset 8
 5173              	 .cfi_offset 7,-8
 5174              	 .cfi_offset 14,-4
 5175 0002 82B0     	 sub sp,sp,#8
 5176              	.LCFI123:
 5177              	 .cfi_def_cfa_offset 16
 5178 0004 00AF     	 add r7,sp,#0
 5179              	.LCFI124:
 5180              	 .cfi_def_cfa_register 7
2360:../SSC/Src/ecatslv.c ****     UINT16 ALEventReg;
2361:../SSC/Src/ecatslv.c ****     UINT16 EscAlControl = 0x0000;
 5181              	 .loc 4 2361 0
 5182 0006 0023     	 movs r3,#0
 5183 0008 7B80     	 strh r3,[r7,#2]
2362:../SSC/Src/ecatslv.c ****     UINT8 sm1Activate = SM_SETTING_ENABLE_VALUE;
 5184              	 .loc 4 2362 0
 5185 000a 0123     	 movs r3,#1
 5186 000c 7B71     	 strb r3,[r7,#5]
2363:../SSC/Src/ecatslv.c **** 
2364:../SSC/Src/ecatslv.c ****     /* check if services are stored in the mailbox */
2365:../SSC/Src/ecatslv.c ****     MBX_Main();
 5187              	 .loc 4 2365 0
 5188 000e FFF7FEFF 	 bl MBX_Main
2366:../SSC/Src/ecatslv.c **** 
2367:../SSC/Src/ecatslv.c **** 
2368:../SSC/Src/ecatslv.c ****     if ( bMbxRunning )
 5189              	 .loc 4 2368 0
 5190 0012 584B     	 ldr r3,.L380
 5191 0014 1B78     	 ldrb r3,[r3]
 5192 0016 002B     	 cmp r3,#0
 5193 0018 02D0     	 beq .L369
2369:../SSC/Src/ecatslv.c ****     {
2370:../SSC/Src/ecatslv.c ****         /* Slave is at least in PREOP, Mailbox is running */
2371:../SSC/Src/ecatslv.c ****         /* get the Activate-Byte of SM 1 (Register 0x80E) to check if a mailbox repeat request was 
2372:../SSC/Src/ecatslv.c ****         HW_EscReadByte(sm1Activate,(ESC_SYNCMAN_ACTIVE_OFFSET + SIZEOF_SM_REGISTER));
 5194              	 .loc 4 2372 0
 5195 001a 574B     	 ldr r3,.L380+4
 5196 001c 1B78     	 ldrb r3,[r3]
 5197 001e 7B71     	 strb r3,[r7,#5]
 5198              	.L369:
2373:../SSC/Src/ecatslv.c ****     }
2374:../SSC/Src/ecatslv.c **** 
2375:../SSC/Src/ecatslv.c ****     /* Read AL Event-Register from ESC */
2376:../SSC/Src/ecatslv.c ****     ALEventReg = HW_GetALEventRegister();
 5199              	 .loc 4 2376 0
 5200 0020 FFF7FEFF 	 bl HW_GetALEventRegister
 5201 0024 0346     	 mov r3,r0
 5202 0026 FB80     	 strh r3,[r7,#6]
2377:../SSC/Src/ecatslv.c ****     ALEventReg = SWAPWORD(ALEventReg);
2378:../SSC/Src/ecatslv.c **** 
2379:../SSC/Src/ecatslv.c ****     if ((ALEventReg & EEPROM_CMD_PENDING)) 
 5203              	 .loc 4 2379 0
 5204 0028 FB88     	 ldrh r3,[r7,#6]
 5205 002a 03F02003 	 and r3,r3,#32
 5206 002e 002B     	 cmp r3,#0
 5207 0030 01D0     	 beq .L370
2380:../SSC/Src/ecatslv.c ****     {
2381:../SSC/Src/ecatslv.c ****         EEPROM_CommandHandler();
 5208              	 .loc 4 2381 0
 5209 0032 FFF7FEFF 	 bl EEPROM_CommandHandler
 5210              	.L370:
2382:../SSC/Src/ecatslv.c ****     }
2383:../SSC/Src/ecatslv.c **** 
2384:../SSC/Src/ecatslv.c ****     if ((ALEventReg & AL_CONTROL_EVENT) && !bEcatWaitForAlControlRes)
 5211              	 .loc 4 2384 0
 5212 0036 FB88     	 ldrh r3,[r7,#6]
 5213 0038 03F00103 	 and r3,r3,#1
 5214 003c 002B     	 cmp r3,#0
 5215 003e 14D0     	 beq .L371
 5216              	 .loc 4 2384 0 is_stmt 0 discriminator 1
 5217 0040 4E4B     	 ldr r3,.L380+8
 5218 0042 1B78     	 ldrb r3,[r3]
 5219 0044 83F00103 	 eor r3,r3,#1
 5220 0048 DBB2     	 uxtb r3,r3
 5221 004a 002B     	 cmp r3,#0
 5222 004c 0DD0     	 beq .L371
2385:../SSC/Src/ecatslv.c ****     {
2386:../SSC/Src/ecatslv.c ****         /* AL Control event is set, get the AL Control register sent by the Master to acknowledge t
2387:../SSC/Src/ecatslv.c ****           (that the corresponding bit in the AL Event register will be reset) */
2388:../SSC/Src/ecatslv.c ****         HW_EscReadByte( EscAlControl, ESC_AL_CONTROL_OFFSET);
 5223              	 .loc 4 2388 0 is_stmt 1
 5224 004e 4C4B     	 ldr r3,.L380+12
 5225 0050 1B78     	 ldrb r3,[r3]
 5226 0052 DBB2     	 uxtb r3,r3
 5227 0054 7B80     	 strh r3,[r7,#2]
2389:../SSC/Src/ecatslv.c ****         EscAlControl = SWAPWORD(EscAlControl);
2390:../SSC/Src/ecatslv.c **** 
2391:../SSC/Src/ecatslv.c **** 
2392:../SSC/Src/ecatslv.c ****         /* reset AL Control event and the SM Change event (because the Sync Manager settings will b
2393:../SSC/Src/ecatslv.c ****            in AL_ControlInd, too)*/
2394:../SSC/Src/ecatslv.c ****         ALEventReg &= ~((AL_CONTROL_EVENT) | (SM_CHANGE_EVENT));
 5228              	 .loc 4 2394 0
 5229 0056 FB88     	 ldrh r3,[r7,#6]
 5230 0058 23F01103 	 bic r3,r3,#17
 5231 005c FB80     	 strh r3,[r7,#6]
2395:../SSC/Src/ecatslv.c **** 
2396:../SSC/Src/ecatslv.c ****         AL_ControlInd((UINT8)EscAlControl, 0); /* in AL_ControlInd the state transition will be che
 5232              	 .loc 4 2396 0
 5233 005e 7B88     	 ldrh r3,[r7,#2]
 5234 0060 DBB2     	 uxtb r3,r3
 5235 0062 1846     	 mov r0,r3
 5236 0064 0021     	 movs r1,#0
 5237 0066 FFF7FEFF 	 bl AL_ControlInd
 5238              	.L371:
2397:../SSC/Src/ecatslv.c ****         
2398:../SSC/Src/ecatslv.c ****         /* SM-Change-Event was handled too */
2399:../SSC/Src/ecatslv.c ****     }
2400:../SSC/Src/ecatslv.c **** 
2401:../SSC/Src/ecatslv.c ****     if ( (ALEventReg & SM_CHANGE_EVENT) && !bEcatWaitForAlControlRes && (nAlStatus & STATE_CHANGE) 
 5239              	 .loc 4 2401 0
 5240 006a FB88     	 ldrh r3,[r7,#6]
 5241 006c 03F01003 	 and r3,r3,#16
 5242 0070 002B     	 cmp r3,#0
 5243 0072 1FD0     	 beq .L372
 5244              	 .loc 4 2401 0 is_stmt 0 discriminator 1
 5245 0074 414B     	 ldr r3,.L380+8
 5246 0076 1B78     	 ldrb r3,[r3]
 5247 0078 83F00103 	 eor r3,r3,#1
 5248 007c DBB2     	 uxtb r3,r3
 5249 007e 002B     	 cmp r3,#0
 5250 0080 18D0     	 beq .L372
 5251              	 .loc 4 2401 0 discriminator 2
 5252 0082 404B     	 ldr r3,.L380+16
 5253 0084 1B78     	 ldrb r3,[r3]
 5254 0086 03F01003 	 and r3,r3,#16
 5255 008a 002B     	 cmp r3,#0
 5256 008c 12D1     	 bne .L372
 5257              	 .loc 4 2401 0 discriminator 3
 5258 008e 3D4B     	 ldr r3,.L380+16
 5259 0090 1B78     	 ldrb r3,[r3]
 5260 0092 23F01003 	 bic r3,r3,#16
 5261 0096 012B     	 cmp r3,#1
 5262 0098 0CD0     	 beq .L372
2402:../SSC/Src/ecatslv.c ****     {
2403:../SSC/Src/ecatslv.c ****         /* the SM Change event is set (Bit 4 of Register 0x220), when the Byte 6 (Enable, Lo-Byte o
2404:../SSC/Src/ecatslv.c ****            of a Sync Manager channel was written */
2405:../SSC/Src/ecatslv.c ****         ALEventReg &= ~(SM_CHANGE_EVENT);
 5263              	 .loc 4 2405 0 is_stmt 1
 5264 009a FB88     	 ldrh r3,[r7,#6]
 5265 009c 23F01003 	 bic r3,r3,#16
 5266 00a0 FB80     	 strh r3,[r7,#6]
2406:../SSC/Src/ecatslv.c **** 
2407:../SSC/Src/ecatslv.c ****         /* AL_ControlInd is called with the actual state, so that the correct SM settings will be c
2408:../SSC/Src/ecatslv.c ****         AL_ControlInd(nAlStatus & STATE_MASK, 0);
 5267              	 .loc 4 2408 0
 5268 00a2 384B     	 ldr r3,.L380+16
 5269 00a4 1B78     	 ldrb r3,[r3]
 5270 00a6 03F00F03 	 and r3,r3,#15
 5271 00aa DBB2     	 uxtb r3,r3
 5272 00ac 1846     	 mov r0,r3
 5273 00ae 0021     	 movs r1,#0
 5274 00b0 FFF7FEFF 	 bl AL_ControlInd
 5275              	.L372:
2409:../SSC/Src/ecatslv.c ****     }
2410:../SSC/Src/ecatslv.c **** 
2411:../SSC/Src/ecatslv.c ****     if(bEcatWaitForAlControlRes)
 5276              	 .loc 4 2411 0
 5277 00b4 314B     	 ldr r3,.L380+8
 5278 00b6 1B78     	 ldrb r3,[r3]
 5279 00b8 002B     	 cmp r3,#0
 5280 00ba 01D0     	 beq .L373
2412:../SSC/Src/ecatslv.c ****     {
2413:../SSC/Src/ecatslv.c ****         AL_ControlRes();
 5281              	 .loc 4 2413 0
 5282 00bc FFF7FEFF 	 bl AL_ControlRes
 5283              	.L373:
2414:../SSC/Src/ecatslv.c ****     }
2415:../SSC/Src/ecatslv.c ****     /*The order of mailbox event processing was changed to prevent race condition errors.
2416:../SSC/Src/ecatslv.c ****         The SM1 activate Byte (Register 0x80E) was read before reading AL Event register.
2417:../SSC/Src/ecatslv.c ****         1. Handle Mailbox Read event
2418:../SSC/Src/ecatslv.c ****         2. Handle repeat toggle request
2419:../SSC/Src/ecatslv.c ****         3. Handle Mailbox write event
2420:../SSC/Src/ecatslv.c ****     */
2421:../SSC/Src/ecatslv.c ****     if ( bMbxRunning )
 5284              	 .loc 4 2421 0
 5285 00c0 2C4B     	 ldr r3,.L380
 5286 00c2 1B78     	 ldrb r3,[r3]
 5287 00c4 002B     	 cmp r3,#0
 5288 00c6 52D0     	 beq .L368
2422:../SSC/Src/ecatslv.c ****     {
2423:../SSC/Src/ecatslv.c ****         /*SnycManger change event (0x220:4) could be acknowledged by reading the SM1 control regist
2424:../SSC/Src/ecatslv.c ****         => check if the SyncManger 1 is still enabled*/
2425:../SSC/Src/ecatslv.c ****         if(!(sm1Activate & SM_SETTING_ENABLE_VALUE))
 5289              	 .loc 4 2425 0
 5290 00c8 7B79     	 ldrb r3,[r7,#5]
 5291 00ca 03F00103 	 and r3,r3,#1
 5292 00ce 002B     	 cmp r3,#0
 5293 00d0 08D1     	 bne .L375
2426:../SSC/Src/ecatslv.c ****             AL_ControlInd(nAlStatus & STATE_MASK, 0);
 5294              	 .loc 4 2426 0
 5295 00d2 2C4B     	 ldr r3,.L380+16
 5296 00d4 1B78     	 ldrb r3,[r3]
 5297 00d6 03F00F03 	 and r3,r3,#15
 5298 00da DBB2     	 uxtb r3,r3
 5299 00dc 1846     	 mov r0,r3
 5300 00de 0021     	 movs r1,#0
 5301 00e0 FFF7FEFF 	 bl AL_ControlInd
 5302              	.L375:
2427:../SSC/Src/ecatslv.c **** 
2428:../SSC/Src/ecatslv.c ****         if ( ALEventReg & (MAILBOX_READ_EVENT) )
 5303              	 .loc 4 2428 0
 5304 00e4 FB88     	 ldrh r3,[r7,#6]
 5305 00e6 03F40073 	 and r3,r3,#512
 5306 00ea 002B     	 cmp r3,#0
 5307 00ec 12D0     	 beq .L376
2429:../SSC/Src/ecatslv.c ****         {
2430:../SSC/Src/ecatslv.c ****             /* SM 1 (Mailbox Read) event is set, when the mailbox was read from the master,
2431:../SSC/Src/ecatslv.c ****                to acknowledge the event the first byte of the mailbox has to be written,
2432:../SSC/Src/ecatslv.c ****                by writing the first byte the mailbox is locked, too */
2433:../SSC/Src/ecatslv.c ****             u8dummy = 0;
 5308              	 .loc 4 2433 0
 5309 00ee 264B     	 ldr r3,.L380+20
 5310 00f0 0022     	 movs r2,#0
 5311 00f2 1A70     	 strb r2,[r3]
2434:../SSC/Src/ecatslv.c ****             HW_EscWriteByte(u8dummy,u16EscAddrSendMbx);
 5312              	 .loc 4 2434 0
 5313 00f4 254B     	 ldr r3,.L380+24
 5314 00f6 1B88     	 ldrh r3,[r3]
 5315 00f8 03F1A843 	 add r3,r3,#1409286144
 5316 00fc 03F58033 	 add r3,r3,#65536
 5317 0100 214A     	 ldr r2,.L380+20
 5318 0102 1278     	 ldrb r2,[r2]
 5319 0104 D2B2     	 uxtb r2,r2
 5320 0106 1A70     	 strb r2,[r3]
2435:../SSC/Src/ecatslv.c **** 
2436:../SSC/Src/ecatslv.c ****             /* the Mailbox Read event in the variable ALEventReg shall be reset before calling
2437:../SSC/Src/ecatslv.c ****                MBX_MailboxReadInd, where a new mailbox datagram (if available) could be stored in t
2438:../SSC/Src/ecatslv.c ****             ALEventReg &= ~(MAILBOX_READ_EVENT);
 5321              	 .loc 4 2438 0
 5322 0108 FB88     	 ldrh r3,[r7,#6]
 5323 010a 23F40073 	 bic r3,r3,#512
 5324 010e FB80     	 strh r3,[r7,#6]
2439:../SSC/Src/ecatslv.c ****             MBX_MailboxReadInd();
 5325              	 .loc 4 2439 0
 5326 0110 FFF7FEFF 	 bl MBX_MailboxReadInd
 5327              	.L376:
2440:../SSC/Src/ecatslv.c ****         }
2441:../SSC/Src/ecatslv.c **** 
2442:../SSC/Src/ecatslv.c ****         DISABLE_MBX_INT;
2443:../SSC/Src/ecatslv.c ****         /* bMbxRepeatToggle holds the last state of the Repeat Bit (Bit 1) */
2444:../SSC/Src/ecatslv.c **** 
2445:../SSC/Src/ecatslv.c ****         if ( ( (sm1Activate & SM_SETTING_REPAET_REQ_MASK) && !bMbxRepeatToggle )
 5328              	 .loc 4 2445 0
 5329 0114 7B79     	 ldrb r3,[r7,#5]
 5330 0116 03F00203 	 and r3,r3,#2
 5331 011a 002B     	 cmp r3,#0
 5332 011c 06D0     	 beq .L377
 5333              	 .loc 4 2445 0 is_stmt 0 discriminator 1
 5334 011e 1C4B     	 ldr r3,.L380+28
 5335 0120 1B78     	 ldrb r3,[r3]
 5336 0122 83F00103 	 eor r3,r3,#1
 5337 0126 DBB2     	 uxtb r3,r3
 5338 0128 002B     	 cmp r3,#0
 5339 012a 08D1     	 bne .L378
 5340              	.L377:
2446:../SSC/Src/ecatslv.c ****             ||( !(sm1Activate & SM_SETTING_REPAET_REQ_MASK) && bMbxRepeatToggle ))
 5341              	 .loc 4 2446 0 is_stmt 1
 5342 012c 7B79     	 ldrb r3,[r7,#5]
 5343 012e 03F00203 	 and r3,r3,#2
 5344 0132 002B     	 cmp r3,#0
 5345 0134 0CD1     	 bne .L379
 5346              	 .loc 4 2446 0 is_stmt 0 discriminator 1
 5347 0136 164B     	 ldr r3,.L380+28
 5348 0138 1B78     	 ldrb r3,[r3]
 5349 013a 002B     	 cmp r3,#0
 5350 013c 08D0     	 beq .L379
 5351              	.L378:
2447:../SSC/Src/ecatslv.c ****         {
2448:../SSC/Src/ecatslv.c ****             /* Repeat Bit (Bit 1) has toggled, there is a repeat request, in MBX_MailboxRepeatReq t
2449:../SSC/Src/ecatslv.c ****                response will put in the send mailbox again */
2450:../SSC/Src/ecatslv.c ****             MBX_MailboxRepeatReq();
 5352              	 .loc 4 2450 0 is_stmt 1
 5353 013e FFF7FEFF 	 bl MBX_MailboxRepeatReq
2451:../SSC/Src/ecatslv.c ****             /* acknowledge the repeat request after the send mailbox was updated by writing the Rep
2452:../SSC/Src/ecatslv.c ****                in the Repeat Ack Bit (Bit 1) of the PDI Ctrl-Byte of SM 1 (Register 0x80F) */
2453:../SSC/Src/ecatslv.c ****             sm1Activate &= SM_SETTING_REPEAT_ACK;
 5354              	 .loc 4 2453 0
 5355 0142 7B79     	 ldrb r3,[r7,#5]
 5356 0144 03F00203 	 and r3,r3,#2
 5357 0148 7B71     	 strb r3,[r7,#5]
2454:../SSC/Src/ecatslv.c ****             HW_EscWriteByte(sm1Activate,(ESC_SM_PDICONTROL_OFFSET + SIZEOF_SM_REGISTER));
 5358              	 .loc 4 2454 0
 5359 014a 124A     	 ldr r2,.L380+32
 5360 014c 7B79     	 ldrb r3,[r7,#5]
 5361 014e 1370     	 strb r3,[r2]
 5362              	.L379:
2455:../SSC/Src/ecatslv.c ****         }
2456:../SSC/Src/ecatslv.c ****         ENABLE_MBX_INT;
2457:../SSC/Src/ecatslv.c **** 
2458:../SSC/Src/ecatslv.c ****         /* Reload the AlEvent because it may be changed due to a SM disable, enable in case of an r
2459:../SSC/Src/ecatslv.c ****         ALEventReg = HW_GetALEventRegister();
 5363              	 .loc 4 2459 0
 5364 0150 FFF7FEFF 	 bl HW_GetALEventRegister
 5365 0154 0346     	 mov r3,r0
 5366 0156 FB80     	 strh r3,[r7,#6]
2460:../SSC/Src/ecatslv.c ****         ALEventReg = SWAPWORD(ALEventReg);
2461:../SSC/Src/ecatslv.c **** 
2462:../SSC/Src/ecatslv.c ****         if ( ALEventReg & (MAILBOX_WRITE_EVENT) )
 5367              	 .loc 4 2462 0
 5368 0158 FB88     	 ldrh r3,[r7,#6]
 5369 015a 03F48073 	 and r3,r3,#256
 5370 015e 002B     	 cmp r3,#0
 5371 0160 05D0     	 beq .L368
2463:../SSC/Src/ecatslv.c ****         {
2464:../SSC/Src/ecatslv.c ****             /* SM 0 (Mailbox Write) event is set, when the mailbox was written from the master,
2465:../SSC/Src/ecatslv.c ****                to acknowledge the event the first byte of the mailbox has to be read,
2466:../SSC/Src/ecatslv.c ****                which will be done in MBX_CheckAndCopyMailbox */
2467:../SSC/Src/ecatslv.c ****             /* the Mailbox Write event in the variable ALEventReg shall be reset before calling
2468:../SSC/Src/ecatslv.c ****                MBX_CheckAndCopyMailbox, where the received mailbox datagram will be processed */
2469:../SSC/Src/ecatslv.c ****             ALEventReg &= ~(MAILBOX_WRITE_EVENT);
 5372              	 .loc 4 2469 0
 5373 0162 FB88     	 ldrh r3,[r7,#6]
 5374 0164 23F48073 	 bic r3,r3,#256
 5375 0168 FB80     	 strh r3,[r7,#6]
2470:../SSC/Src/ecatslv.c ****             MBX_CheckAndCopyMailbox();
 5376              	 .loc 4 2470 0
 5377 016a FFF7FEFF 	 bl MBX_CheckAndCopyMailbox
 5378              	.L368:
2471:../SSC/Src/ecatslv.c **** 
2472:../SSC/Src/ecatslv.c ****         }
2473:../SSC/Src/ecatslv.c ****     }
2474:../SSC/Src/ecatslv.c **** }
 5379              	 .loc 4 2474 0
 5380 016e 0837     	 adds r7,r7,#8
 5381              	.LCFI125:
 5382              	 .cfi_def_cfa_offset 8
 5383 0170 BD46     	 mov sp,r7
 5384              	.LCFI126:
 5385              	 .cfi_def_cfa_register 13
 5386              	 
 5387 0172 80BD     	 pop {r7,pc}
 5388              	.L381:
 5389              	 .align 2
 5390              	.L380:
 5391 0174 00000000 	 .word bMbxRunning
 5392 0178 0E080154 	 .word 1409353742
 5393 017c 00000000 	 .word bEcatWaitForAlControlRes
 5394 0180 20010154 	 .word 1409351968
 5395 0184 00000000 	 .word nAlStatus
 5396 0188 00000000 	 .word u8dummy
 5397 018c 00000000 	 .word u16EscAddrSendMbx
 5398 0190 00000000 	 .word bMbxRepeatToggle
 5399 0194 0F080154 	 .word 1409353743
 5400              	 .cfi_endproc
 5401              	.LFE191:
 5403              	 .text
 5404              	.Letext0:
 5405              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5406              	 .file 6 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5407              	 .file 7 "E:/xmc_1124/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Infineon/XMC4300_series/Include/XMC4300.h"
 5408              	 .file 8 "../SSC/Src/esc.h"
 5409              	 .file 9 "../SSC/Src/objdef.h"
 5410              	 .file 10 "../SSC/Src/ecatslv.h"
 5411              	 .file 11 "../SSC/Src/mailbox.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ecatslv.c
    {standard input}:20     .text.NVIC_EnableIRQ:00000000 $t
    {standard input}:24     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
    {standard input}:69     .text.NVIC_EnableIRQ:0000002c $d
    {standard input}:74     .text.NVIC_DisableIRQ:00000000 $t
    {standard input}:78     .text.NVIC_DisableIRQ:00000000 NVIC_DisableIRQ
    {standard input}:123    .text.NVIC_DisableIRQ:00000030 $d
    {standard input}:128    .text.XMC_ECAT_GetALEventRegister:00000000 $t
    {standard input}:132    .text.XMC_ECAT_GetALEventRegister:00000000 XMC_ECAT_GetALEventRegister
    {standard input}:165    .text.XMC_ECAT_GetALEventRegister:00000018 $d
    {standard input}:170    .text.HW_EscRead:00000000 $t
    {standard input}:174    .text.HW_EscRead:00000000 HW_EscRead
    {standard input}:218    .text.HW_GetALEventRegister:00000000 $t
    {standard input}:222    .text.HW_GetALEventRegister:00000000 HW_GetALEventRegister
    {standard input}:246    .text.ENABLE_ESC_INT:00000000 $t
    {standard input}:250    .text.ENABLE_ESC_INT:00000000 ENABLE_ESC_INT
    {standard input}:273    .text.DISABLE_ESC_INT:00000000 $t
    {standard input}:277    .text.DISABLE_ESC_INT:00000000 DISABLE_ESC_INT
                            *COM*:00000001 bEcatOutputUpdateRunning
                            *COM*:00000001 bEcatInputUpdateRunning
                            *COM*:00000001 bEcatFirstOutputsReceived
                            *COM*:00000001 bWdTrigger
                            *COM*:00000001 bDcSyncActive
                            *COM*:00000002 EsmTimeoutCounter
                            *COM*:00000001 bDcRunning
                            *COM*:00000002 u16SmSync0Counter
                            *COM*:00000002 u16SmSync0Value
                            *COM*:00000001 bSmSyncSequenceValid
                            *COM*:00000002 i16WaitForPllRunningTimeout
                            *COM*:00000002 i16WaitForPllRunningCnt
                            *COM*:00000002 Sync0WdCounter
                            *COM*:00000002 Sync0WdValue
                            *COM*:00000002 Sync1WdCounter
                            *COM*:00000002 Sync1WdValue
                            *COM*:00000002 LatchInputSync0Value
                            *COM*:00000002 LatchInputSync0Counter
                            *COM*:00000001 bEscIntEnabled
                            *COM*:00000001 b3BufferMode
                            *COM*:00000001 bLocalErrorFlag
                            *COM*:00000002 u16LocalErrorCode
                            *COM*:00000001 bApplEsmPending
                            *COM*:00000001 bEcatWaitForAlControlRes
                            *COM*:00000002 nEcatStateTrans
                            *COM*:00000001 u8EcatErrorLed
                            *COM*:00000001 u8EcatRunLed
                            *COM*:00000002 nPdInputSize
                            *COM*:00000002 nPdOutputSize
                            *COM*:00000001 nMaxSyncMan
                            *COM*:00000002 nMaxEscAddress
                            *COM*:00000001 nAlStatus
                            *COM*:00000002 EcatWdValue
                            *COM*:00000002 nEscAddrOutputData
                            *COM*:00000002 nEscAddrInputData
                            *COM*:00000002 u16ALEventMask
                            *COM*:00000001 u8dummy
    {standard input}:340    .bss.SMActivate:00000000 SMActivate
    {standard input}:341    .bss.SMActivate:00000000 $d
                            *COM*:00000008 SyncManInfo
    {standard input}:347    .bss.EepromLoaded:00000000 EepromLoaded
    {standard input}:348    .bss.EepromLoaded:00000000 $d
    {standard input}:350    .text.ResetALEventMask:00000000 $t
    {standard input}:355    .text.ResetALEventMask:00000000 ResetALEventMask
    {standard input}:404    .text.ResetALEventMask:0000002c $d
    {standard input}:409    .text.SetALEventMask:00000000 $t
    {standard input}:414    .text.SetALEventMask:00000000 SetALEventMask
    {standard input}:462    .text.SetALEventMask:0000002c $d
    {standard input}:467    .text.UpdateEEPROMLoadedState:00000000 $t
    {standard input}:472    .text.UpdateEEPROMLoadedState:00000000 UpdateEEPROMLoadedState
    {standard input}:536    .text.UpdateEEPROMLoadedState:0000003c $d
    {standard input}:542    .text.GetSyncMan:00000000 $t
    {standard input}:547    .text.GetSyncMan:00000000 GetSyncMan
    {standard input}:591    .text.GetSyncMan:0000002c $d
    {standard input}:596    .text.DisableSyncManChannel:00000000 $t
    {standard input}:601    .text.DisableSyncManChannel:00000000 DisableSyncManChannel
    {standard input}:668    .text.EnableSyncManChannel:00000000 $t
    {standard input}:673    .text.EnableSyncManChannel:00000000 EnableSyncManChannel
    {standard input}:740    .text.CheckSmSettings:00000000 $t
    {standard input}:745    .text.CheckSmSettings:00000000 CheckSmSettings
    {standard input}:1174   .text.CheckSmSettings:00000298 $d
    {standard input}:1181   .text.CheckSmSettings:000002ac $t
    {standard input}:1357   .text.CheckSmSettings:000003a4 $d
    {standard input}:1368   .text.StartInputHandler:00000000 $t
    {standard input}:1373   .text.StartInputHandler:00000000 StartInputHandler
    {standard input}:1809   .text.StartInputHandler:000002bc $d
    {standard input}:1828   .text.StartInputHandler:00000300 $t
    {standard input}:2240   .text.StartInputHandler:00000570 $d
    {standard input}:2259   .text.StartInputHandler:000005b4 $t
    {standard input}:2494   .text.StartInputHandler:0000071c $d
    {standard input}:2515   .text.StartOutputHandler:00000000 $t
    {standard input}:2520   .text.StartOutputHandler:00000000 StartOutputHandler
    {standard input}:2584   .text.StartOutputHandler:0000003c $d
    {standard input}:2593   .text.StopOutputHandler:00000000 $t
    {standard input}:2598   .text.StopOutputHandler:00000000 StopOutputHandler
    {standard input}:2633   .text.StopOutputHandler:00000018 $d
    {standard input}:2639   .text.StopInputHandler:00000000 $t
    {standard input}:2644   .text.StopInputHandler:00000000 StopInputHandler
    {standard input}:2782   .text.StopInputHandler:000000b8 $d
    {standard input}:2806   .text.BackToInitTransition:00000000 $t
    {standard input}:2811   .text.BackToInitTransition:00000000 BackToInitTransition
    {standard input}:2842   .text.BackToInitTransition:00000014 $d
    {standard input}:2847   .text.SetALStatus:00000000 $t
    {standard input}:2852   .text.SetALStatus:00000000 SetALStatus
    {standard input}:2984   .text.SetALStatus:000000a8 $d
    {standard input}:2993   .text.AL_ControlInd:00000000 $t
    {standard input}:2998   .text.AL_ControlInd:00000000 AL_ControlInd
    {standard input}:3172   .text.AL_ControlInd:00000110 $d
    {standard input}:3292   .text.AL_ControlInd:000002f0 $t
    {standard input}:3375   .text.AL_ControlInd:00000368 $d
    {standard input}:3385   .text.AL_ControlInd:0000038c $t
    {standard input}:3836   .text.AL_ControlInd:0000063c $d
    {standard input}:3849   .text.AL_ControlInd:00000668 $t
    {standard input}:3901   .text.AL_ControlInd:000006b0 $d
    {standard input}:3907   .text.AL_ControlRes:00000000 $t
    {standard input}:3912   .text.AL_ControlRes:00000000 AL_ControlRes
    {standard input}:4353   .text.AL_ControlRes:00000280 $d
    {standard input}:4373   .text.DC_CheckWatchdog:00000000 $t
    {standard input}:4378   .text.DC_CheckWatchdog:00000000 DC_CheckWatchdog
    {standard input}:4544   .text.DC_CheckWatchdog:000000f0 $d
    {standard input}:4559   .text.CheckIfEcatError:00000000 $t
    {standard input}:4564   .text.CheckIfEcatError:00000000 CheckIfEcatError
    {standard input}:4672   .text.CheckIfEcatError:00000088 $d
    {standard input}:4684   .text.ECAT_StateChange:00000000 $t
    {standard input}:4689   .text.ECAT_StateChange:00000000 ECAT_StateChange
    {standard input}:4943   .text.ECAT_StateChange:0000016c $d
    {standard input}:4959   .text.ECAT_Init:00000000 $t
    {standard input}:4964   .text.ECAT_Init:00000000 ECAT_Init
    {standard input}:5130   .text.ECAT_Init:000000e8 $d
    {standard input}:5159   .text.ECAT_Main:00000000 $t
    {standard input}:5164   .text.ECAT_Main:00000000 ECAT_Main
    {standard input}:5391   .text.ECAT_Main:00000174 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memcpy
sSyncManOutPar
sSyncManInPar
u16EscAddrSendMbx
u16SendMbxSize
u16EscAddrReceiveMbx
u16ReceiveMbxSize
bSyncSetByUser
sCycleDiag
PDO_InputMapping
APPL_GenerateMapping
MBX_StartMailboxHandler
APPL_StartMailboxHandler
APPL_StopMailboxHandler
MBX_StopMailboxHandler
bMbxRunning
APPL_StartInputHandler
APPL_StopInputHandler
APPL_StartOutputHandler
APPL_StopOutputHandler
APPL_AckErrorInd
sErrorSettings
MBX_Init
COE_Init
MBX_Main
EEPROM_CommandHandler
MBX_MailboxReadInd
MBX_MailboxRepeatReq
MBX_CheckAndCopyMailbox
bMbxRepeatToggle
