   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_fce.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_FCE_Init,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_FCE_Init
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_FCE_Init:
  26              	.LFB176:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_fce.c"
   1:../Libraries/XMCLib/src/xmc_fce.c **** /**
   2:../Libraries/XMCLib/src/xmc_fce.c ****  * @file xmc_fce.c
   3:../Libraries/XMCLib/src/xmc_fce.c ****  * @date 2015-06-20
   4:../Libraries/XMCLib/src/xmc_fce.c ****  *
   5:../Libraries/XMCLib/src/xmc_fce.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_fce.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_fce.c ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_fce.c ****  *
   9:../Libraries/XMCLib/src/xmc_fce.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_fce.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_fce.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_fce.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_fce.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_fce.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_fce.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_fce.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_fce.c ****  * 
  18:../Libraries/XMCLib/src/xmc_fce.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_fce.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_fce.c ****  * 
  21:../Libraries/XMCLib/src/xmc_fce.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_fce.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_fce.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_fce.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_fce.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_fce.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_fce.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_fce.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_fce.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_fce.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_fce.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_fce.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_fce.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_fce.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_fce.c ****  *
  36:../Libraries/XMCLib/src/xmc_fce.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_fce.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_fce.c ****  *
  39:../Libraries/XMCLib/src/xmc_fce.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_fce.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_fce.c ****  *      
  42:../Libraries/XMCLib/src/xmc_fce.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_fce.c ****  *     - Removed GetDriverVersion API
  44:../Libraries/XMCLib/src/xmc_fce.c ****  * @endcond 
  45:../Libraries/XMCLib/src/xmc_fce.c ****  *
  46:../Libraries/XMCLib/src/xmc_fce.c ****  */
  47:../Libraries/XMCLib/src/xmc_fce.c **** 
  48:../Libraries/XMCLib/src/xmc_fce.c **** /**************************************************************************************************
  49:../Libraries/XMCLib/src/xmc_fce.c ****  * HEADER FILES
  50:../Libraries/XMCLib/src/xmc_fce.c ****  **************************************************************************************************
  51:../Libraries/XMCLib/src/xmc_fce.c **** #include <xmc_fce.h>
  52:../Libraries/XMCLib/src/xmc_fce.c **** 
  53:../Libraries/XMCLib/src/xmc_fce.c **** #if defined (FCE)
  54:../Libraries/XMCLib/src/xmc_fce.c **** #include <xmc_scu.h>
  55:../Libraries/XMCLib/src/xmc_fce.c **** 
  56:../Libraries/XMCLib/src/xmc_fce.c **** /*******************************************************************************
  57:../Libraries/XMCLib/src/xmc_fce.c ****  * API IMPLEMENTATION
  58:../Libraries/XMCLib/src/xmc_fce.c ****  **************************************************************************************************
  59:../Libraries/XMCLib/src/xmc_fce.c **** 
  60:../Libraries/XMCLib/src/xmc_fce.c **** /*
  61:../Libraries/XMCLib/src/xmc_fce.c ****  * Initialize the FCE peripheral:
  62:../Libraries/XMCLib/src/xmc_fce.c ****  * Update FCE configuration and initialize seed value
  63:../Libraries/XMCLib/src/xmc_fce.c ****  */
  64:../Libraries/XMCLib/src/xmc_fce.c **** XMC_FCE_STATUS_t XMC_FCE_Init(const XMC_FCE_t *const engine)
  65:../Libraries/XMCLib/src/xmc_fce.c **** {
  28              	 .loc 1 65 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 83B0     	 sub sp,sp,#12
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  66:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CFG = engine->fce_cfg_update.regval;
  44              	 .loc 1 66 0
  45 0008 7B68     	 ldr r3,[r7,#4]
  46 000a 1B68     	 ldr r3,[r3]
  47 000c 7A68     	 ldr r2,[r7,#4]
  48 000e 5268     	 ldr r2,[r2,#4]
  49 0010 9A60     	 str r2,[r3,#8]
  67:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CRC = engine->seedvalue;
  50              	 .loc 1 67 0
  51 0012 7B68     	 ldr r3,[r7,#4]
  52 0014 1B68     	 ldr r3,[r3]
  53 0016 7A68     	 ldr r2,[r7,#4]
  54 0018 9268     	 ldr r2,[r2,#8]
  55 001a 9A61     	 str r2,[r3,#24]
  68:../Libraries/XMCLib/src/xmc_fce.c ****   
  69:../Libraries/XMCLib/src/xmc_fce.c ****   return XMC_FCE_STATUS_OK;
  56              	 .loc 1 69 0
  57 001c 0023     	 movs r3,#0
  70:../Libraries/XMCLib/src/xmc_fce.c **** }
  58              	 .loc 1 70 0
  59 001e 1846     	 mov r0,r3
  60 0020 0C37     	 adds r7,r7,#12
  61              	.LCFI3:
  62              	 .cfi_def_cfa_offset 4
  63 0022 BD46     	 mov sp,r7
  64              	.LCFI4:
  65              	 .cfi_def_cfa_register 13
  66              	 
  67 0024 5DF8047B 	 ldr r7,[sp],#4
  68              	.LCFI5:
  69              	 .cfi_restore 7
  70              	 .cfi_def_cfa_offset 0
  71 0028 7047     	 bx lr
  72              	 .cfi_endproc
  73              	.LFE176:
  75 002a 00BF     	 .section .text.XMC_FCE_Disable,"ax",%progbits
  76              	 .align 2
  77              	 .global XMC_FCE_Disable
  78              	 .thumb
  79              	 .thumb_func
  81              	XMC_FCE_Disable:
  82              	.LFB177:
  71:../Libraries/XMCLib/src/xmc_fce.c **** 
  72:../Libraries/XMCLib/src/xmc_fce.c **** /* Disable FCE */
  73:../Libraries/XMCLib/src/xmc_fce.c **** void XMC_FCE_Disable(void)
  74:../Libraries/XMCLib/src/xmc_fce.c **** {
  83              	 .loc 1 74 0
  84              	 .cfi_startproc
  85              	 
  86              	 
  87 0000 80B5     	 push {r7,lr}
  88              	.LCFI6:
  89              	 .cfi_def_cfa_offset 8
  90              	 .cfi_offset 7,-8
  91              	 .cfi_offset 14,-4
  92 0002 00AF     	 add r7,sp,#0
  93              	.LCFI7:
  94              	 .cfi_def_cfa_register 7
  75:../Libraries/XMCLib/src/xmc_fce.c ****   FCE->CLC |= (uint32_t)FCE_CLC_DISR_Msk;
  95              	 .loc 1 75 0
  96 0004 064A     	 ldr r2,.L4
  97 0006 064B     	 ldr r3,.L4
  98 0008 1B68     	 ldr r3,[r3]
  99 000a 43F00103 	 orr r3,r3,#1
 100 000e 1360     	 str r3,[r2]
  76:../Libraries/XMCLib/src/xmc_fce.c ****   
  77:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_FCE);
 101              	 .loc 1 77 0
 102 0010 0448     	 ldr r0,.L4+4
 103 0012 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
  78:../Libraries/XMCLib/src/xmc_fce.c **** 
  79:../Libraries/XMCLib/src/xmc_fce.c **** #if defined(CLOCK_GATING_SUPPORTED)
  80:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_FCE);
 104              	 .loc 1 80 0
 105 0016 0348     	 ldr r0,.L4+4
 106 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
  81:../Libraries/XMCLib/src/xmc_fce.c **** #endif
  82:../Libraries/XMCLib/src/xmc_fce.c **** 
  83:../Libraries/XMCLib/src/xmc_fce.c **** }
 107              	 .loc 1 83 0
 108 001c 80BD     	 pop {r7,pc}
 109              	.L5:
 110 001e 00BF     	 .align 2
 111              	.L4:
 112 0020 00000250 	 .word 1342308352
 113 0024 40000020 	 .word 536870976
 114              	 .cfi_endproc
 115              	.LFE177:
 117              	 .section .text.XMC_FCE_Enable,"ax",%progbits
 118              	 .align 2
 119              	 .global XMC_FCE_Enable
 120              	 .thumb
 121              	 .thumb_func
 123              	XMC_FCE_Enable:
 124              	.LFB178:
  84:../Libraries/XMCLib/src/xmc_fce.c **** 
  85:../Libraries/XMCLib/src/xmc_fce.c **** /* Enable FCE */
  86:../Libraries/XMCLib/src/xmc_fce.c **** void XMC_FCE_Enable(void)
  87:../Libraries/XMCLib/src/xmc_fce.c **** {
 125              	 .loc 1 87 0
 126              	 .cfi_startproc
 127              	 
 128              	 
 129 0000 80B5     	 push {r7,lr}
 130              	.LCFI8:
 131              	 .cfi_def_cfa_offset 8
 132              	 .cfi_offset 7,-8
 133              	 .cfi_offset 14,-4
 134 0002 00AF     	 add r7,sp,#0
 135              	.LCFI9:
 136              	 .cfi_def_cfa_register 7
  88:../Libraries/XMCLib/src/xmc_fce.c **** #if defined(CLOCK_GATING_SUPPORTED)
  89:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_FCE);
 137              	 .loc 1 89 0
 138 0004 0648     	 ldr r0,.L7
 139 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
  90:../Libraries/XMCLib/src/xmc_fce.c **** #endif
  91:../Libraries/XMCLib/src/xmc_fce.c **** 
  92:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_FCE);
 140              	 .loc 1 92 0
 141 000a 0548     	 ldr r0,.L7
 142 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  93:../Libraries/XMCLib/src/xmc_fce.c **** 
  94:../Libraries/XMCLib/src/xmc_fce.c ****   FCE->CLC &= (uint32_t)~FCE_CLC_DISR_Msk;
 143              	 .loc 1 94 0
 144 0010 044A     	 ldr r2,.L7+4
 145 0012 044B     	 ldr r3,.L7+4
 146 0014 1B68     	 ldr r3,[r3]
 147 0016 23F00103 	 bic r3,r3,#1
 148 001a 1360     	 str r3,[r2]
  95:../Libraries/XMCLib/src/xmc_fce.c **** }
 149              	 .loc 1 95 0
 150 001c 80BD     	 pop {r7,pc}
 151              	.L8:
 152 001e 00BF     	 .align 2
 153              	.L7:
 154 0020 40000020 	 .word 536870976
 155 0024 00000250 	 .word 1342308352
 156              	 .cfi_endproc
 157              	.LFE178:
 159              	 .section .text.XMC_FCE_CalculateCRC8,"ax",%progbits
 160              	 .align 2
 161              	 .global XMC_FCE_CalculateCRC8
 162              	 .thumb
 163              	 .thumb_func
 165              	XMC_FCE_CalculateCRC8:
 166              	.LFB179:
  96:../Libraries/XMCLib/src/xmc_fce.c **** 
  97:../Libraries/XMCLib/src/xmc_fce.c **** /* Calculate and return the SAE J1850 CRC8 checksum */
  98:../Libraries/XMCLib/src/xmc_fce.c **** XMC_FCE_STATUS_t XMC_FCE_CalculateCRC8(const XMC_FCE_t *const engine,
  99:../Libraries/XMCLib/src/xmc_fce.c ****                                        const uint8_t *data,
 100:../Libraries/XMCLib/src/xmc_fce.c **** 									   uint32_t length,
 101:../Libraries/XMCLib/src/xmc_fce.c **** 									   uint8_t *result)
 102:../Libraries/XMCLib/src/xmc_fce.c **** {
 167              	 .loc 1 102 0
 168              	 .cfi_startproc
 169              	 
 170              	 
 171              	 
 172 0000 80B4     	 push {r7}
 173              	.LCFI10:
 174              	 .cfi_def_cfa_offset 4
 175              	 .cfi_offset 7,-4
 176 0002 87B0     	 sub sp,sp,#28
 177              	.LCFI11:
 178              	 .cfi_def_cfa_offset 32
 179 0004 00AF     	 add r7,sp,#0
 180              	.LCFI12:
 181              	 .cfi_def_cfa_register 7
 182 0006 F860     	 str r0,[r7,#12]
 183 0008 B960     	 str r1,[r7,#8]
 184 000a 7A60     	 str r2,[r7,#4]
 185 000c 3B60     	 str r3,[r7]
 103:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_FCE_STATUS_t status = XMC_FCE_STATUS_OK;
 186              	 .loc 1 103 0
 187 000e 0023     	 movs r3,#0
 188 0010 FB75     	 strb r3,[r7,#23]
 104:../Libraries/XMCLib/src/xmc_fce.c **** 	
 105:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC8: Wrong FCE kernel used", (engine -> kernel_ptr == XMC_FCE_CRC8)
 106:../Libraries/XMCLib/src/xmc_fce.c **** 
 107:../Libraries/XMCLib/src/xmc_fce.c ****   if (length == 0UL)
 189              	 .loc 1 107 0
 190 0012 7B68     	 ldr r3,[r7,#4]
 191 0014 002B     	 cmp r3,#0
 192 0016 02D1     	 bne .L10
 108:../Libraries/XMCLib/src/xmc_fce.c ****   {
 109:../Libraries/XMCLib/src/xmc_fce.c ****     status = XMC_FCE_STATUS_ERROR;
 193              	 .loc 1 109 0
 194 0018 0223     	 movs r3,#2
 195 001a FB75     	 strb r3,[r7,#23]
 196 001c 14E0     	 b .L11
 197              	.L10:
 110:../Libraries/XMCLib/src/xmc_fce.c ****   }
 111:../Libraries/XMCLib/src/xmc_fce.c ****   else
 112:../Libraries/XMCLib/src/xmc_fce.c ****   {
 113:../Libraries/XMCLib/src/xmc_fce.c ****     while (0UL != length)
 198              	 .loc 1 113 0
 199 001e 0AE0     	 b .L12
 200              	.L13:
 114:../Libraries/XMCLib/src/xmc_fce.c ****     {
 115:../Libraries/XMCLib/src/xmc_fce.c ****       engine->kernel_ptr->IR = *data;
 201              	 .loc 1 115 0
 202 0020 FB68     	 ldr r3,[r7,#12]
 203 0022 1B68     	 ldr r3,[r3]
 204 0024 BA68     	 ldr r2,[r7,#8]
 205 0026 1278     	 ldrb r2,[r2]
 206 0028 1A60     	 str r2,[r3]
 116:../Libraries/XMCLib/src/xmc_fce.c ****       data++;
 207              	 .loc 1 116 0
 208 002a BB68     	 ldr r3,[r7,#8]
 209 002c 0133     	 adds r3,r3,#1
 210 002e BB60     	 str r3,[r7,#8]
 117:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 1U;
 211              	 .loc 1 117 0
 212 0030 7B68     	 ldr r3,[r7,#4]
 213 0032 013B     	 subs r3,r3,#1
 214 0034 7B60     	 str r3,[r7,#4]
 215              	.L12:
 113:../Libraries/XMCLib/src/xmc_fce.c ****     {
 216              	 .loc 1 113 0
 217 0036 7B68     	 ldr r3,[r7,#4]
 218 0038 002B     	 cmp r3,#0
 219 003a F1D1     	 bne .L13
 118:../Libraries/XMCLib/src/xmc_fce.c ****     }
 119:../Libraries/XMCLib/src/xmc_fce.c **** 
 120:../Libraries/XMCLib/src/xmc_fce.c ****     *result = (uint8_t)engine->kernel_ptr->CRC;
 220              	 .loc 1 120 0
 221 003c FB68     	 ldr r3,[r7,#12]
 222 003e 1B68     	 ldr r3,[r3]
 223 0040 9B69     	 ldr r3,[r3,#24]
 224 0042 DAB2     	 uxtb r2,r3
 225 0044 3B68     	 ldr r3,[r7]
 226 0046 1A70     	 strb r2,[r3]
 227              	.L11:
 121:../Libraries/XMCLib/src/xmc_fce.c ****   }
 122:../Libraries/XMCLib/src/xmc_fce.c **** 
 123:../Libraries/XMCLib/src/xmc_fce.c ****   return status;
 228              	 .loc 1 123 0
 229 0048 FB7D     	 ldrb r3,[r7,#23]
 124:../Libraries/XMCLib/src/xmc_fce.c **** }
 230              	 .loc 1 124 0
 231 004a 1846     	 mov r0,r3
 232 004c 1C37     	 adds r7,r7,#28
 233              	.LCFI13:
 234              	 .cfi_def_cfa_offset 4
 235 004e BD46     	 mov sp,r7
 236              	.LCFI14:
 237              	 .cfi_def_cfa_register 13
 238              	 
 239 0050 5DF8047B 	 ldr r7,[sp],#4
 240              	.LCFI15:
 241              	 .cfi_restore 7
 242              	 .cfi_def_cfa_offset 0
 243 0054 7047     	 bx lr
 244              	 .cfi_endproc
 245              	.LFE179:
 247 0056 00BF     	 .section .text.XMC_FCE_CalculateCRC16,"ax",%progbits
 248              	 .align 2
 249              	 .global XMC_FCE_CalculateCRC16
 250              	 .thumb
 251              	 .thumb_func
 253              	XMC_FCE_CalculateCRC16:
 254              	.LFB180:
 125:../Libraries/XMCLib/src/xmc_fce.c **** 
 126:../Libraries/XMCLib/src/xmc_fce.c **** /* Calculate and return calculated CCITT CRC16 checksum */
 127:../Libraries/XMCLib/src/xmc_fce.c **** XMC_FCE_STATUS_t XMC_FCE_CalculateCRC16(const XMC_FCE_t *const engine,
 128:../Libraries/XMCLib/src/xmc_fce.c ****                                         const uint16_t *data,
 129:../Libraries/XMCLib/src/xmc_fce.c **** 										uint32_t length,
 130:../Libraries/XMCLib/src/xmc_fce.c **** 										uint16_t *result)
 131:../Libraries/XMCLib/src/xmc_fce.c **** {
 255              	 .loc 1 131 0
 256              	 .cfi_startproc
 257              	 
 258              	 
 259              	 
 260 0000 80B4     	 push {r7}
 261              	.LCFI16:
 262              	 .cfi_def_cfa_offset 4
 263              	 .cfi_offset 7,-4
 264 0002 87B0     	 sub sp,sp,#28
 265              	.LCFI17:
 266              	 .cfi_def_cfa_offset 32
 267 0004 00AF     	 add r7,sp,#0
 268              	.LCFI18:
 269              	 .cfi_def_cfa_register 7
 270 0006 F860     	 str r0,[r7,#12]
 271 0008 B960     	 str r1,[r7,#8]
 272 000a 7A60     	 str r2,[r7,#4]
 273 000c 3B60     	 str r3,[r7]
 132:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_FCE_STATUS_t status = XMC_FCE_STATUS_OK;
 274              	 .loc 1 132 0
 275 000e 0023     	 movs r3,#0
 276 0010 FB75     	 strb r3,[r7,#23]
 133:../Libraries/XMCLib/src/xmc_fce.c **** 	
 134:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC16: Wrong FCE kernel used", (engine -> kernel_ptr == XMC_FCE_CRC1
 135:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC16: Length field is empty", (length != 0));
 136:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC16: Length is not aligned", ((length & 0x01) == 0));
 137:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC16: Buffer is not aligned", (((uint32_t)data % 2U) == 0));
 138:../Libraries/XMCLib/src/xmc_fce.c **** 
 139:../Libraries/XMCLib/src/xmc_fce.c ****   /* Check if data and length are word aligned */
 140:../Libraries/XMCLib/src/xmc_fce.c ****   if (((length & 0x01U) != 0U) || (((uint32_t)length % 2U) != 0U))
 277              	 .loc 1 140 0
 278 0012 7B68     	 ldr r3,[r7,#4]
 279 0014 03F00103 	 and r3,r3,#1
 280 0018 002B     	 cmp r3,#0
 281 001a 04D1     	 bne .L16
 282              	 .loc 1 140 0 is_stmt 0 discriminator 1
 283 001c 7B68     	 ldr r3,[r7,#4]
 284 001e 03F00103 	 and r3,r3,#1
 285 0022 002B     	 cmp r3,#0
 286 0024 02D0     	 beq .L17
 287              	.L16:
 141:../Libraries/XMCLib/src/xmc_fce.c ****   {
 142:../Libraries/XMCLib/src/xmc_fce.c ****     status = XMC_FCE_STATUS_ERROR;
 288              	 .loc 1 142 0 is_stmt 1
 289 0026 0223     	 movs r3,#2
 290 0028 FB75     	 strb r3,[r7,#23]
 291 002a 14E0     	 b .L18
 292              	.L17:
 143:../Libraries/XMCLib/src/xmc_fce.c ****   }
 144:../Libraries/XMCLib/src/xmc_fce.c ****   else
 145:../Libraries/XMCLib/src/xmc_fce.c ****   {
 146:../Libraries/XMCLib/src/xmc_fce.c ****     while (0UL != length)
 293              	 .loc 1 146 0
 294 002c 0AE0     	 b .L19
 295              	.L20:
 147:../Libraries/XMCLib/src/xmc_fce.c ****     {
 148:../Libraries/XMCLib/src/xmc_fce.c ****       engine->kernel_ptr->IR = *data;
 296              	 .loc 1 148 0
 297 002e FB68     	 ldr r3,[r7,#12]
 298 0030 1B68     	 ldr r3,[r3]
 299 0032 BA68     	 ldr r2,[r7,#8]
 300 0034 1288     	 ldrh r2,[r2]
 301 0036 1A60     	 str r2,[r3]
 149:../Libraries/XMCLib/src/xmc_fce.c ****       data++;
 302              	 .loc 1 149 0
 303 0038 BB68     	 ldr r3,[r7,#8]
 304 003a 0233     	 adds r3,r3,#2
 305 003c BB60     	 str r3,[r7,#8]
 150:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 2U;
 306              	 .loc 1 150 0
 307 003e 7B68     	 ldr r3,[r7,#4]
 308 0040 023B     	 subs r3,r3,#2
 309 0042 7B60     	 str r3,[r7,#4]
 310              	.L19:
 146:../Libraries/XMCLib/src/xmc_fce.c ****     {
 311              	 .loc 1 146 0
 312 0044 7B68     	 ldr r3,[r7,#4]
 313 0046 002B     	 cmp r3,#0
 314 0048 F1D1     	 bne .L20
 151:../Libraries/XMCLib/src/xmc_fce.c ****     }
 152:../Libraries/XMCLib/src/xmc_fce.c **** 	
 153:../Libraries/XMCLib/src/xmc_fce.c ****     *result = (uint16_t)engine->kernel_ptr->CRC;
 315              	 .loc 1 153 0
 316 004a FB68     	 ldr r3,[r7,#12]
 317 004c 1B68     	 ldr r3,[r3]
 318 004e 9B69     	 ldr r3,[r3,#24]
 319 0050 9AB2     	 uxth r2,r3
 320 0052 3B68     	 ldr r3,[r7]
 321 0054 1A80     	 strh r2,[r3]
 322              	.L18:
 154:../Libraries/XMCLib/src/xmc_fce.c ****   }
 155:../Libraries/XMCLib/src/xmc_fce.c **** 
 156:../Libraries/XMCLib/src/xmc_fce.c ****   return status;
 323              	 .loc 1 156 0
 324 0056 FB7D     	 ldrb r3,[r7,#23]
 157:../Libraries/XMCLib/src/xmc_fce.c **** }
 325              	 .loc 1 157 0
 326 0058 1846     	 mov r0,r3
 327 005a 1C37     	 adds r7,r7,#28
 328              	.LCFI19:
 329              	 .cfi_def_cfa_offset 4
 330 005c BD46     	 mov sp,r7
 331              	.LCFI20:
 332              	 .cfi_def_cfa_register 13
 333              	 
 334 005e 5DF8047B 	 ldr r7,[sp],#4
 335              	.LCFI21:
 336              	 .cfi_restore 7
 337              	 .cfi_def_cfa_offset 0
 338 0062 7047     	 bx lr
 339              	 .cfi_endproc
 340              	.LFE180:
 342              	 .section .text.XMC_FCE_CalculateCRC32,"ax",%progbits
 343              	 .align 2
 344              	 .global XMC_FCE_CalculateCRC32
 345              	 .thumb
 346              	 .thumb_func
 348              	XMC_FCE_CalculateCRC32:
 349              	.LFB181:
 158:../Libraries/XMCLib/src/xmc_fce.c **** 
 159:../Libraries/XMCLib/src/xmc_fce.c **** /* Calculate and return the IEEE 802.3 Ethernet CRC32 checksum */
 160:../Libraries/XMCLib/src/xmc_fce.c **** XMC_FCE_STATUS_t XMC_FCE_CalculateCRC32(const XMC_FCE_t *const engine,
 161:../Libraries/XMCLib/src/xmc_fce.c ****                                         const uint32_t *data,
 162:../Libraries/XMCLib/src/xmc_fce.c **** 										uint32_t length,
 163:../Libraries/XMCLib/src/xmc_fce.c **** 										uint32_t *result)
 164:../Libraries/XMCLib/src/xmc_fce.c **** {
 350              	 .loc 1 164 0
 351              	 .cfi_startproc
 352              	 
 353              	 
 354              	 
 355 0000 80B4     	 push {r7}
 356              	.LCFI22:
 357              	 .cfi_def_cfa_offset 4
 358              	 .cfi_offset 7,-4
 359 0002 87B0     	 sub sp,sp,#28
 360              	.LCFI23:
 361              	 .cfi_def_cfa_offset 32
 362 0004 00AF     	 add r7,sp,#0
 363              	.LCFI24:
 364              	 .cfi_def_cfa_register 7
 365 0006 F860     	 str r0,[r7,#12]
 366 0008 B960     	 str r1,[r7,#8]
 367 000a 7A60     	 str r2,[r7,#4]
 368 000c 3B60     	 str r3,[r7]
 165:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_FCE_STATUS_t status = XMC_FCE_STATUS_OK;
 369              	 .loc 1 165 0
 370 000e 0023     	 movs r3,#0
 371 0010 FB75     	 strb r3,[r7,#23]
 166:../Libraries/XMCLib/src/xmc_fce.c **** 	
 167:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC32: Wrong FCE kernel used", ((engine->kernel_ptr == XMC_FCE_CRC32
 168:../Libraries/XMCLib/src/xmc_fce.c ****                                                                (engine->kernel_ptr == XMC_FCE_CRC32
 169:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC32: Length field is empty", (length != 0));
 170:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC32: Length is not aligned", ((length & 0x03) == 0));
 171:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC32: Buffer is not aligned", (((uint32_t)data % 4U) == 0));
 172:../Libraries/XMCLib/src/xmc_fce.c **** 
 173:../Libraries/XMCLib/src/xmc_fce.c ****   /* Check if data and length are word aligned */
 174:../Libraries/XMCLib/src/xmc_fce.c ****   if (((length & 0x03U) != 0U) || (((uint32_t)length % 4U) != 0U))
 372              	 .loc 1 174 0
 373 0012 7B68     	 ldr r3,[r7,#4]
 374 0014 03F00303 	 and r3,r3,#3
 375 0018 002B     	 cmp r3,#0
 376 001a 04D1     	 bne .L23
 377              	 .loc 1 174 0 is_stmt 0 discriminator 1
 378 001c 7B68     	 ldr r3,[r7,#4]
 379 001e 03F00303 	 and r3,r3,#3
 380 0022 002B     	 cmp r3,#0
 381 0024 02D0     	 beq .L24
 382              	.L23:
 175:../Libraries/XMCLib/src/xmc_fce.c ****   {
 176:../Libraries/XMCLib/src/xmc_fce.c ****     status = XMC_FCE_STATUS_ERROR;
 383              	 .loc 1 176 0 is_stmt 1
 384 0026 0223     	 movs r3,#2
 385 0028 FB75     	 strb r3,[r7,#23]
 386 002a 13E0     	 b .L25
 387              	.L24:
 177:../Libraries/XMCLib/src/xmc_fce.c ****   }
 178:../Libraries/XMCLib/src/xmc_fce.c ****   else
 179:../Libraries/XMCLib/src/xmc_fce.c ****   {
 180:../Libraries/XMCLib/src/xmc_fce.c ****     while (0UL != length)
 388              	 .loc 1 180 0
 389 002c 0AE0     	 b .L26
 390              	.L27:
 181:../Libraries/XMCLib/src/xmc_fce.c ****     {
 182:../Libraries/XMCLib/src/xmc_fce.c ****       engine->kernel_ptr->IR = *data;
 391              	 .loc 1 182 0
 392 002e FB68     	 ldr r3,[r7,#12]
 393 0030 1B68     	 ldr r3,[r3]
 394 0032 BA68     	 ldr r2,[r7,#8]
 395 0034 1268     	 ldr r2,[r2]
 396 0036 1A60     	 str r2,[r3]
 183:../Libraries/XMCLib/src/xmc_fce.c ****       data++;
 397              	 .loc 1 183 0
 398 0038 BB68     	 ldr r3,[r7,#8]
 399 003a 0433     	 adds r3,r3,#4
 400 003c BB60     	 str r3,[r7,#8]
 184:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 4U;
 401              	 .loc 1 184 0
 402 003e 7B68     	 ldr r3,[r7,#4]
 403 0040 043B     	 subs r3,r3,#4
 404 0042 7B60     	 str r3,[r7,#4]
 405              	.L26:
 180:../Libraries/XMCLib/src/xmc_fce.c ****     {
 406              	 .loc 1 180 0
 407 0044 7B68     	 ldr r3,[r7,#4]
 408 0046 002B     	 cmp r3,#0
 409 0048 F1D1     	 bne .L27
 185:../Libraries/XMCLib/src/xmc_fce.c ****     }
 186:../Libraries/XMCLib/src/xmc_fce.c **** 
 187:../Libraries/XMCLib/src/xmc_fce.c ****     *result = engine->kernel_ptr->CRC;
 410              	 .loc 1 187 0
 411 004a FB68     	 ldr r3,[r7,#12]
 412 004c 1B68     	 ldr r3,[r3]
 413 004e 9A69     	 ldr r2,[r3,#24]
 414 0050 3B68     	 ldr r3,[r7]
 415 0052 1A60     	 str r2,[r3]
 416              	.L25:
 188:../Libraries/XMCLib/src/xmc_fce.c ****   }
 189:../Libraries/XMCLib/src/xmc_fce.c ****   
 190:../Libraries/XMCLib/src/xmc_fce.c ****   return status;
 417              	 .loc 1 190 0
 418 0054 FB7D     	 ldrb r3,[r7,#23]
 191:../Libraries/XMCLib/src/xmc_fce.c **** }
 419              	 .loc 1 191 0
 420 0056 1846     	 mov r0,r3
 421 0058 1C37     	 adds r7,r7,#28
 422              	.LCFI25:
 423              	 .cfi_def_cfa_offset 4
 424 005a BD46     	 mov sp,r7
 425              	.LCFI26:
 426              	 .cfi_def_cfa_register 13
 427              	 
 428 005c 5DF8047B 	 ldr r7,[sp],#4
 429              	.LCFI27:
 430              	 .cfi_restore 7
 431              	 .cfi_def_cfa_offset 0
 432 0060 7047     	 bx lr
 433              	 .cfi_endproc
 434              	.LFE181:
 436 0062 00BF     	 .section .text.XMC_FCE_TriggerMismatch,"ax",%progbits
 437              	 .align 2
 438              	 .global XMC_FCE_TriggerMismatch
 439              	 .thumb
 440              	 .thumb_func
 442              	XMC_FCE_TriggerMismatch:
 443              	.LFB182:
 192:../Libraries/XMCLib/src/xmc_fce.c **** 
 193:../Libraries/XMCLib/src/xmc_fce.c **** /* Trigger mismatch in the CRC registers */
 194:../Libraries/XMCLib/src/xmc_fce.c **** void XMC_FCE_TriggerMismatch(const XMC_FCE_t *const engine, XMC_FCE_CTR_TEST_t test)
 195:../Libraries/XMCLib/src/xmc_fce.c **** {
 444              	 .loc 1 195 0
 445              	 .cfi_startproc
 446              	 
 447              	 
 448              	 
 449 0000 80B4     	 push {r7}
 450              	.LCFI28:
 451              	 .cfi_def_cfa_offset 4
 452              	 .cfi_offset 7,-4
 453 0002 83B0     	 sub sp,sp,#12
 454              	.LCFI29:
 455              	 .cfi_def_cfa_offset 16
 456 0004 00AF     	 add r7,sp,#0
 457              	.LCFI30:
 458              	 .cfi_def_cfa_register 7
 459 0006 7860     	 str r0,[r7,#4]
 460 0008 0B46     	 mov r3,r1
 461 000a FB70     	 strb r3,[r7,#3]
 196:../Libraries/XMCLib/src/xmc_fce.c ****   /* Create a 0 to 1 transition and clear to 0 once it is done */
 197:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CTR &= ~((uint32_t)test);
 462              	 .loc 1 197 0
 463 000c 7B68     	 ldr r3,[r7,#4]
 464 000e 1B68     	 ldr r3,[r3]
 465 0010 7A68     	 ldr r2,[r7,#4]
 466 0012 1268     	 ldr r2,[r2]
 467 0014 D169     	 ldr r1,[r2,#28]
 468 0016 FA78     	 ldrb r2,[r7,#3]
 469 0018 D243     	 mvns r2,r2
 470 001a 0A40     	 ands r2,r2,r1
 471 001c DA61     	 str r2,[r3,#28]
 198:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CTR |= (uint32_t)test;
 472              	 .loc 1 198 0
 473 001e 7B68     	 ldr r3,[r7,#4]
 474 0020 1B68     	 ldr r3,[r3]
 475 0022 7A68     	 ldr r2,[r7,#4]
 476 0024 1268     	 ldr r2,[r2]
 477 0026 D169     	 ldr r1,[r2,#28]
 478 0028 FA78     	 ldrb r2,[r7,#3]
 479 002a 0A43     	 orrs r2,r2,r1
 480 002c DA61     	 str r2,[r3,#28]
 199:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CTR &= ~((uint32_t)test);
 481              	 .loc 1 199 0
 482 002e 7B68     	 ldr r3,[r7,#4]
 483 0030 1B68     	 ldr r3,[r3]
 484 0032 7A68     	 ldr r2,[r7,#4]
 485 0034 1268     	 ldr r2,[r2]
 486 0036 D169     	 ldr r1,[r2,#28]
 487 0038 FA78     	 ldrb r2,[r7,#3]
 488 003a D243     	 mvns r2,r2
 489 003c 0A40     	 ands r2,r2,r1
 490 003e DA61     	 str r2,[r3,#28]
 200:../Libraries/XMCLib/src/xmc_fce.c **** }
 491              	 .loc 1 200 0
 492 0040 0C37     	 adds r7,r7,#12
 493              	.LCFI31:
 494              	 .cfi_def_cfa_offset 4
 495 0042 BD46     	 mov sp,r7
 496              	.LCFI32:
 497              	 .cfi_def_cfa_register 13
 498              	 
 499 0044 5DF8047B 	 ldr r7,[sp],#4
 500              	.LCFI33:
 501              	 .cfi_restore 7
 502              	 .cfi_def_cfa_offset 0
 503 0048 7047     	 bx lr
 504              	 .cfi_endproc
 505              	.LFE182:
 507 004a 00BF     	 .section .text.XMC_FCE_LittleEndian16bit,"ax",%progbits
 508              	 .align 2
 509              	 .global XMC_FCE_LittleEndian16bit
 510              	 .thumb
 511              	 .thumb_func
 513              	XMC_FCE_LittleEndian16bit:
 514              	.LFB183:
 201:../Libraries/XMCLib/src/xmc_fce.c **** 
 202:../Libraries/XMCLib/src/xmc_fce.c **** /* Change endianness of 16-bit input buffer */
 203:../Libraries/XMCLib/src/xmc_fce.c **** void XMC_FCE_LittleEndian16bit(uint8_t* inbuffer, uint16_t* outbuffer, uint16_t length)
 204:../Libraries/XMCLib/src/xmc_fce.c **** {
 515              	 .loc 1 204 0
 516              	 .cfi_startproc
 517              	 
 518              	 
 519              	 
 520 0000 80B4     	 push {r7}
 521              	.LCFI34:
 522              	 .cfi_def_cfa_offset 4
 523              	 .cfi_offset 7,-4
 524 0002 87B0     	 sub sp,sp,#28
 525              	.LCFI35:
 526              	 .cfi_def_cfa_offset 32
 527 0004 00AF     	 add r7,sp,#0
 528              	.LCFI36:
 529              	 .cfi_def_cfa_register 7
 530 0006 F860     	 str r0,[r7,#12]
 531 0008 B960     	 str r1,[r7,#8]
 532 000a 1346     	 mov r3,r2
 533 000c FB80     	 strh r3,[r7,#6]
 205:../Libraries/XMCLib/src/xmc_fce.c ****   uint16_t counter = 0U;
 534              	 .loc 1 205 0
 535 000e 0023     	 movs r3,#0
 536 0010 FB82     	 strh r3,[r7,#22]
 206:../Libraries/XMCLib/src/xmc_fce.c ****   uint16_t bytecounter = 0U;
 537              	 .loc 1 206 0
 538 0012 0023     	 movs r3,#0
 539 0014 BB82     	 strh r3,[r7,#20]
 207:../Libraries/XMCLib/src/xmc_fce.c **** 
 208:../Libraries/XMCLib/src/xmc_fce.c ****   if ((length & 0x01U)  == 0)
 540              	 .loc 1 208 0
 541 0016 FB88     	 ldrh r3,[r7,#6]
 542 0018 03F00103 	 and r3,r3,#1
 543 001c 002B     	 cmp r3,#0
 544 001e 3AD1     	 bne .L30
 209:../Libraries/XMCLib/src/xmc_fce.c ****   {
 210:../Libraries/XMCLib/src/xmc_fce.c ****     for (counter = 0U; counter < (length >> 1); counter++)
 545              	 .loc 1 210 0
 546 0020 0023     	 movs r3,#0
 547 0022 FB82     	 strh r3,[r7,#22]
 548 0024 08E0     	 b .L32
 549              	.L33:
 211:../Libraries/XMCLib/src/xmc_fce.c ****     {
 212:../Libraries/XMCLib/src/xmc_fce.c ****       outbuffer[counter] = 0U;
 550              	 .loc 1 212 0 discriminator 3
 551 0026 FB8A     	 ldrh r3,[r7,#22]
 552 0028 5B00     	 lsls r3,r3,#1
 553 002a BA68     	 ldr r2,[r7,#8]
 554 002c 1344     	 add r3,r3,r2
 555 002e 0022     	 movs r2,#0
 556 0030 1A80     	 strh r2,[r3]
 210:../Libraries/XMCLib/src/xmc_fce.c ****     {
 557              	 .loc 1 210 0 discriminator 3
 558 0032 FB8A     	 ldrh r3,[r7,#22]
 559 0034 0133     	 adds r3,r3,#1
 560 0036 FB82     	 strh r3,[r7,#22]
 561              	.L32:
 210:../Libraries/XMCLib/src/xmc_fce.c ****     {
 562              	 .loc 1 210 0 is_stmt 0 discriminator 1
 563 0038 FB88     	 ldrh r3,[r7,#6]
 564 003a 5B08     	 lsrs r3,r3,#1
 565 003c 9BB2     	 uxth r3,r3
 566 003e FA8A     	 ldrh r2,[r7,#22]
 567 0040 9A42     	 cmp r2,r3
 568 0042 F0D3     	 bcc .L33
 213:../Libraries/XMCLib/src/xmc_fce.c ****     }
 214:../Libraries/XMCLib/src/xmc_fce.c **** 
 215:../Libraries/XMCLib/src/xmc_fce.c ****     outbuffer[counter] = 0U;
 569              	 .loc 1 215 0 is_stmt 1
 570 0044 FB8A     	 ldrh r3,[r7,#22]
 571 0046 5B00     	 lsls r3,r3,#1
 572 0048 BA68     	 ldr r2,[r7,#8]
 573 004a 1344     	 add r3,r3,r2
 574 004c 0022     	 movs r2,#0
 575 004e 1A80     	 strh r2,[r3]
 216:../Libraries/XMCLib/src/xmc_fce.c ****     counter = 0U;
 576              	 .loc 1 216 0
 577 0050 0023     	 movs r3,#0
 578 0052 FB82     	 strh r3,[r7,#22]
 217:../Libraries/XMCLib/src/xmc_fce.c **** 
 218:../Libraries/XMCLib/src/xmc_fce.c ****     while (length)
 579              	 .loc 1 218 0
 580 0054 1CE0     	 b .L34
 581              	.L35:
 219:../Libraries/XMCLib/src/xmc_fce.c ****     {
 220:../Libraries/XMCLib/src/xmc_fce.c ****       outbuffer[counter] = ((uint16_t)((uint16_t)inbuffer[bytecounter] << 8U) |
 582              	 .loc 1 220 0
 583 0056 FB8A     	 ldrh r3,[r7,#22]
 584 0058 5B00     	 lsls r3,r3,#1
 585 005a BA68     	 ldr r2,[r7,#8]
 586 005c 1344     	 add r3,r3,r2
 587 005e BA8A     	 ldrh r2,[r7,#20]
 588 0060 F968     	 ldr r1,[r7,#12]
 589 0062 0A44     	 add r2,r2,r1
 590 0064 1278     	 ldrb r2,[r2]
 591 0066 92B2     	 uxth r2,r2
 592 0068 1202     	 lsls r2,r2,#8
 593 006a 91B2     	 uxth r1,r2
 221:../Libraries/XMCLib/src/xmc_fce.c ****                             (inbuffer[bytecounter + 1U]));
 594              	 .loc 1 221 0
 595 006c BA8A     	 ldrh r2,[r7,#20]
 596 006e 0132     	 adds r2,r2,#1
 597 0070 F868     	 ldr r0,[r7,#12]
 598 0072 0244     	 add r2,r2,r0
 599 0074 1278     	 ldrb r2,[r2]
 220:../Libraries/XMCLib/src/xmc_fce.c ****                             (inbuffer[bytecounter + 1U]));
 600              	 .loc 1 220 0
 601 0076 92B2     	 uxth r2,r2
 602 0078 0A43     	 orrs r2,r2,r1
 603 007a 92B2     	 uxth r2,r2
 604 007c 1A80     	 strh r2,[r3]
 222:../Libraries/XMCLib/src/xmc_fce.c ****       counter += 1U;
 605              	 .loc 1 222 0
 606 007e FB8A     	 ldrh r3,[r7,#22]
 607 0080 0133     	 adds r3,r3,#1
 608 0082 FB82     	 strh r3,[r7,#22]
 223:../Libraries/XMCLib/src/xmc_fce.c ****       bytecounter += 2U;
 609              	 .loc 1 223 0
 610 0084 BB8A     	 ldrh r3,[r7,#20]
 611 0086 0233     	 adds r3,r3,#2
 612 0088 BB82     	 strh r3,[r7,#20]
 224:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 2U;
 613              	 .loc 1 224 0
 614 008a FB88     	 ldrh r3,[r7,#6]
 615 008c 023B     	 subs r3,r3,#2
 616 008e FB80     	 strh r3,[r7,#6]
 617              	.L34:
 218:../Libraries/XMCLib/src/xmc_fce.c ****     {
 618              	 .loc 1 218 0
 619 0090 FB88     	 ldrh r3,[r7,#6]
 620 0092 002B     	 cmp r3,#0
 621 0094 DFD1     	 bne .L35
 622              	.L30:
 225:../Libraries/XMCLib/src/xmc_fce.c ****     }
 226:../Libraries/XMCLib/src/xmc_fce.c ****   }
 227:../Libraries/XMCLib/src/xmc_fce.c **** }
 623              	 .loc 1 227 0
 624 0096 1C37     	 adds r7,r7,#28
 625              	.LCFI37:
 626              	 .cfi_def_cfa_offset 4
 627 0098 BD46     	 mov sp,r7
 628              	.LCFI38:
 629              	 .cfi_def_cfa_register 13
 630              	 
 631 009a 5DF8047B 	 ldr r7,[sp],#4
 632              	.LCFI39:
 633              	 .cfi_restore 7
 634              	 .cfi_def_cfa_offset 0
 635 009e 7047     	 bx lr
 636              	 .cfi_endproc
 637              	.LFE183:
 639              	 .section .text.XMC_FCE_LittleEndian32bit,"ax",%progbits
 640              	 .align 2
 641              	 .global XMC_FCE_LittleEndian32bit
 642              	 .thumb
 643              	 .thumb_func
 645              	XMC_FCE_LittleEndian32bit:
 646              	.LFB184:
 228:../Libraries/XMCLib/src/xmc_fce.c **** 
 229:../Libraries/XMCLib/src/xmc_fce.c **** /* Change endianness of 32-bit input buffer */
 230:../Libraries/XMCLib/src/xmc_fce.c **** void XMC_FCE_LittleEndian32bit(uint8_t* inbuffer, uint32_t* outbuffer, uint16_t length)
 231:../Libraries/XMCLib/src/xmc_fce.c **** {
 647              	 .loc 1 231 0
 648              	 .cfi_startproc
 649              	 
 650              	 
 651              	 
 652 0000 80B4     	 push {r7}
 653              	.LCFI40:
 654              	 .cfi_def_cfa_offset 4
 655              	 .cfi_offset 7,-4
 656 0002 87B0     	 sub sp,sp,#28
 657              	.LCFI41:
 658              	 .cfi_def_cfa_offset 32
 659 0004 00AF     	 add r7,sp,#0
 660              	.LCFI42:
 661              	 .cfi_def_cfa_register 7
 662 0006 F860     	 str r0,[r7,#12]
 663 0008 B960     	 str r1,[r7,#8]
 664 000a 1346     	 mov r3,r2
 665 000c FB80     	 strh r3,[r7,#6]
 232:../Libraries/XMCLib/src/xmc_fce.c ****   uint16_t counter = 0U;
 666              	 .loc 1 232 0
 667 000e 0023     	 movs r3,#0
 668 0010 FB82     	 strh r3,[r7,#22]
 233:../Libraries/XMCLib/src/xmc_fce.c ****   uint16_t bytecounter = 0U;
 669              	 .loc 1 233 0
 670 0012 0023     	 movs r3,#0
 671 0014 BB82     	 strh r3,[r7,#20]
 234:../Libraries/XMCLib/src/xmc_fce.c ****  
 235:../Libraries/XMCLib/src/xmc_fce.c ****   if ((length & 0x03U) == 0)
 672              	 .loc 1 235 0
 673 0016 FB88     	 ldrh r3,[r7,#6]
 674 0018 03F00303 	 and r3,r3,#3
 675 001c 002B     	 cmp r3,#0
 676 001e 44D1     	 bne .L36
 236:../Libraries/XMCLib/src/xmc_fce.c ****   {
 237:../Libraries/XMCLib/src/xmc_fce.c ****     for (counter = 0U; counter < (length >> 2U); counter++)
 677              	 .loc 1 237 0
 678 0020 0023     	 movs r3,#0
 679 0022 FB82     	 strh r3,[r7,#22]
 680 0024 08E0     	 b .L38
 681              	.L39:
 238:../Libraries/XMCLib/src/xmc_fce.c ****     {
 239:../Libraries/XMCLib/src/xmc_fce.c ****       outbuffer[counter] = 0U;
 682              	 .loc 1 239 0 discriminator 3
 683 0026 FB8A     	 ldrh r3,[r7,#22]
 684 0028 9B00     	 lsls r3,r3,#2
 685 002a BA68     	 ldr r2,[r7,#8]
 686 002c 1344     	 add r3,r3,r2
 687 002e 0022     	 movs r2,#0
 688 0030 1A60     	 str r2,[r3]
 237:../Libraries/XMCLib/src/xmc_fce.c ****     {
 689              	 .loc 1 237 0 discriminator 3
 690 0032 FB8A     	 ldrh r3,[r7,#22]
 691 0034 0133     	 adds r3,r3,#1
 692 0036 FB82     	 strh r3,[r7,#22]
 693              	.L38:
 237:../Libraries/XMCLib/src/xmc_fce.c ****     {
 694              	 .loc 1 237 0 is_stmt 0 discriminator 1
 695 0038 FB88     	 ldrh r3,[r7,#6]
 696 003a 9B08     	 lsrs r3,r3,#2
 697 003c 9BB2     	 uxth r3,r3
 698 003e FA8A     	 ldrh r2,[r7,#22]
 699 0040 9A42     	 cmp r2,r3
 700 0042 F0D3     	 bcc .L39
 240:../Libraries/XMCLib/src/xmc_fce.c ****     }
 241:../Libraries/XMCLib/src/xmc_fce.c **** 
 242:../Libraries/XMCLib/src/xmc_fce.c ****     outbuffer[counter] = 0U;
 701              	 .loc 1 242 0 is_stmt 1
 702 0044 FB8A     	 ldrh r3,[r7,#22]
 703 0046 9B00     	 lsls r3,r3,#2
 704 0048 BA68     	 ldr r2,[r7,#8]
 705 004a 1344     	 add r3,r3,r2
 706 004c 0022     	 movs r2,#0
 707 004e 1A60     	 str r2,[r3]
 243:../Libraries/XMCLib/src/xmc_fce.c ****     counter = 0U;
 708              	 .loc 1 243 0
 709 0050 0023     	 movs r3,#0
 710 0052 FB82     	 strh r3,[r7,#22]
 244:../Libraries/XMCLib/src/xmc_fce.c **** 
 245:../Libraries/XMCLib/src/xmc_fce.c ****     while (length)
 711              	 .loc 1 245 0
 712 0054 26E0     	 b .L40
 713              	.L41:
 246:../Libraries/XMCLib/src/xmc_fce.c ****     {
 247:../Libraries/XMCLib/src/xmc_fce.c ****       outbuffer[counter] = ((uint32_t)inbuffer[bytecounter]      << 24U) |
 714              	 .loc 1 247 0
 715 0056 FB8A     	 ldrh r3,[r7,#22]
 716 0058 9B00     	 lsls r3,r3,#2
 717 005a BA68     	 ldr r2,[r7,#8]
 718 005c 1344     	 add r3,r3,r2
 719 005e BA8A     	 ldrh r2,[r7,#20]
 720 0060 F968     	 ldr r1,[r7,#12]
 721 0062 0A44     	 add r2,r2,r1
 722 0064 1278     	 ldrb r2,[r2]
 723 0066 1106     	 lsls r1,r2,#24
 248:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 1U] << 16U) |
 724              	 .loc 1 248 0
 725 0068 BA8A     	 ldrh r2,[r7,#20]
 726 006a 0132     	 adds r2,r2,#1
 727 006c F868     	 ldr r0,[r7,#12]
 728 006e 0244     	 add r2,r2,r0
 729 0070 1278     	 ldrb r2,[r2]
 730 0072 1204     	 lsls r2,r2,#16
 247:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 1U] << 16U) |
 731              	 .loc 1 247 0
 732 0074 1143     	 orrs r1,r1,r2
 249:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 2U] <<  8U) |
 733              	 .loc 1 249 0
 734 0076 BA8A     	 ldrh r2,[r7,#20]
 735 0078 0232     	 adds r2,r2,#2
 736 007a F868     	 ldr r0,[r7,#12]
 737 007c 0244     	 add r2,r2,r0
 738 007e 1278     	 ldrb r2,[r2]
 739 0080 1202     	 lsls r2,r2,#8
 248:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 1U] << 16U) |
 740              	 .loc 1 248 0
 741 0082 0A43     	 orrs r2,r2,r1
 250:../Libraries/XMCLib/src/xmc_fce.c ****                            (inbuffer[bytecounter + 3U]);
 742              	 .loc 1 250 0
 743 0084 B98A     	 ldrh r1,[r7,#20]
 744 0086 0331     	 adds r1,r1,#3
 745 0088 F868     	 ldr r0,[r7,#12]
 746 008a 0144     	 add r1,r1,r0
 747 008c 0978     	 ldrb r1,[r1]
 249:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 2U] <<  8U) |
 748              	 .loc 1 249 0
 749 008e 0A43     	 orrs r2,r2,r1
 247:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 1U] << 16U) |
 750              	 .loc 1 247 0
 751 0090 1A60     	 str r2,[r3]
 251:../Libraries/XMCLib/src/xmc_fce.c ****       counter += 1U;
 752              	 .loc 1 251 0
 753 0092 FB8A     	 ldrh r3,[r7,#22]
 754 0094 0133     	 adds r3,r3,#1
 755 0096 FB82     	 strh r3,[r7,#22]
 252:../Libraries/XMCLib/src/xmc_fce.c ****       bytecounter += 4U;
 756              	 .loc 1 252 0
 757 0098 BB8A     	 ldrh r3,[r7,#20]
 758 009a 0433     	 adds r3,r3,#4
 759 009c BB82     	 strh r3,[r7,#20]
 253:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 4U;
 760              	 .loc 1 253 0
 761 009e FB88     	 ldrh r3,[r7,#6]
 762 00a0 043B     	 subs r3,r3,#4
 763 00a2 FB80     	 strh r3,[r7,#6]
 764              	.L40:
 245:../Libraries/XMCLib/src/xmc_fce.c ****     {
 765              	 .loc 1 245 0
 766 00a4 FB88     	 ldrh r3,[r7,#6]
 767 00a6 002B     	 cmp r3,#0
 768 00a8 D5D1     	 bne .L41
 769              	.L36:
 254:../Libraries/XMCLib/src/xmc_fce.c ****     }
 255:../Libraries/XMCLib/src/xmc_fce.c ****   }
 256:../Libraries/XMCLib/src/xmc_fce.c **** }
 770              	 .loc 1 256 0
 771 00aa 1C37     	 adds r7,r7,#28
 772              	.LCFI43:
 773              	 .cfi_def_cfa_offset 4
 774 00ac BD46     	 mov sp,r7
 775              	.LCFI44:
 776              	 .cfi_def_cfa_register 13
 777              	 
 778 00ae 5DF8047B 	 ldr r7,[sp],#4
 779              	.LCFI45:
 780              	 .cfi_restore 7
 781              	 .cfi_def_cfa_offset 0
 782 00b2 7047     	 bx lr
 783              	 .cfi_endproc
 784              	.LFE184:
 786              	 .text
 787              	.Letext0:
 788              	 .file 2 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 789              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 790              	 .file 4 "E:/\261\270\267\335\316\304\274\376/workplace/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Infineon/XMC4300_series/Include/XMC4300.h"
 791              	 .file 5 "E:/\261\270\267\335\316\304\274\376/workplace/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc/xmc_fce.h"
 792              	 .file 6 "E:/\261\270\267\335\316\304\274\376/workplace/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/XMCLib/inc/xmc4_scu.h"
 793              	 .file 7 "E:/\261\270\267\335\316\304\274\376/workplace/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Include/core_cm4.h"
 794              	 .file 8 "E:/\261\270\267\335\316\304\274\376/workplace/XMC4300_Relax_EtherCat_APP_Slave_SSC/Libraries/CMSIS/Infineon/XMC4300_series/Include/system_XMC4300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_fce.c
    {standard input}:20     .text.XMC_FCE_Init:00000000 $t
    {standard input}:25     .text.XMC_FCE_Init:00000000 XMC_FCE_Init
    {standard input}:76     .text.XMC_FCE_Disable:00000000 $t
    {standard input}:81     .text.XMC_FCE_Disable:00000000 XMC_FCE_Disable
    {standard input}:112    .text.XMC_FCE_Disable:00000020 $d
    {standard input}:118    .text.XMC_FCE_Enable:00000000 $t
    {standard input}:123    .text.XMC_FCE_Enable:00000000 XMC_FCE_Enable
    {standard input}:154    .text.XMC_FCE_Enable:00000020 $d
    {standard input}:160    .text.XMC_FCE_CalculateCRC8:00000000 $t
    {standard input}:165    .text.XMC_FCE_CalculateCRC8:00000000 XMC_FCE_CalculateCRC8
    {standard input}:248    .text.XMC_FCE_CalculateCRC16:00000000 $t
    {standard input}:253    .text.XMC_FCE_CalculateCRC16:00000000 XMC_FCE_CalculateCRC16
    {standard input}:343    .text.XMC_FCE_CalculateCRC32:00000000 $t
    {standard input}:348    .text.XMC_FCE_CalculateCRC32:00000000 XMC_FCE_CalculateCRC32
    {standard input}:437    .text.XMC_FCE_TriggerMismatch:00000000 $t
    {standard input}:442    .text.XMC_FCE_TriggerMismatch:00000000 XMC_FCE_TriggerMismatch
    {standard input}:508    .text.XMC_FCE_LittleEndian16bit:00000000 $t
    {standard input}:513    .text.XMC_FCE_LittleEndian16bit:00000000 XMC_FCE_LittleEndian16bit
    {standard input}:640    .text.XMC_FCE_LittleEndian32bit:00000000 $t
    {standard input}:645    .text.XMC_FCE_LittleEndian32bit:00000000 XMC_FCE_LittleEndian32bit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
